<?xml version="1.0" encoding="UTF-8"?>
<!--
CAUTION: Do not modify this file unless you know what you are doing.
         Unexpected results may occur if the code is changed deliberately.
-->
<dbmodel pgmodeler-ver="0.8.2" last-position="2581,0" last-zoom="1"
	 default-schema="public" default-owner="postgres">
<role name="mcaniza"
      superuser="true"
      inherit="true"
      login="true"
      encrypted="true"
      password="********">
</role>

<role name="jcabrera"
      superuser="true"
      inherit="true"
      login="true"
      encrypted="true"
      password="********">
</role>

<role name="dalcaraz"
      superuser="true"
      inherit="true"
      login="true"
      encrypted="true"
      password="********">
</role>

<role name="caquino"
      superuser="true"
      createrole="true"
      inherit="true"
      login="true"
      encrypted="true"
      password="********">
</role>

<database name="db_sicrh_20180620_173033" encoding="UTF8" lc-collate="es_PY" lc-ctype="es_PY">
	<role name="postgres"/>
	<tablespace name="pg_default"/>
</database>

<schema name="public" rect-visible="true" fill-color="#e1e1e1" sql-disabled="true">
</schema>

<schema name="salarios_contratados" rect-visible="true" fill-color="#047276">
	<role name="postgres"/>
</schema>

<function name="actualiza_contrato"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="trigger"/>
	</return-type>
	<definition><![CDATA[
DECLARE
	var_estado boolean := False;	
	var_id_funcionario_contrato integer :=0;
BEGIN

IF (TG_OP = 'INSERT') THEN
	var_estado := not NEW.estado;
	-- Recupera el ultimo registro
	   SELECT id_funcionario_contrato		  
	     into var_id_funcionario_contrato 		  
	   from salarios_contratados.funcionarios_contratos 
	   where id_funcionario = NEW.id_funcionario 
		and estado = true;		

	-- Actualiza el estado del ultimo registro a false
	   UPDATE salarios_contratados.funcionarios_contratos		
		set estado = false, 
		usu_modi = current_user::varchar(30), 
		fec_modi = current_date,
		ip_modi = inet_client_addr()::varchar(30)
	   where id_funcionario_contrato = var_id_funcionario_contrato;
	   
        RETURN NEW;
END IF;
END;
]]></definition>
</function>

<function name="actualiza_importe_multas_solicitadas"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="trigger"/>
	</return-type>
	<definition><![CDATA[
DECLARE
valor numeric(12,2) := 0;
-- nombre_usuario text := user::text||' salarios.actualiza_importe_multas_aplicadas()' ;
nombre_usuario text := user::text;
BEGIN
IF (TG_OP = 'DELETE') THEN
	valor := sum(monto_multa) from salarios_contratados.detalles_multas_solicitadas where id_multa_solicitada = OLD.id_multa_solicitada;
	IF valor IS NULL THEN 
		valor :=0;
	END IF;
	UPDATE salarios_contratados.multas_solicitadas SET total_multa = valor, usu_modi = nombre_usuario, fec_modi = now() WHERE id_multa_solicitada = OLD.id_multa_solicitada;
	RETURN OLD;

ELSIF (TG_OP = 'UPDATE') THEN
        valor := sum(monto_multa) from salarios_contratados.detalles_multas_solicitadas where id_multa_solicitada = NEW.id_multa_solicitada;
	IF valor IS NULL THEN 
		valor :=0;
	END IF;
	UPDATE salarios_contratados.multas_solicitadas SET total_multa = valor, usu_modi = nombre_usuario, fec_modi = now() WHERE id_multa_solicitada = NEW.id_multa_solicitada;
	RETURN NEW;
ELSIF (TG_OP = 'INSERT') THEN
	valor := sum(monto_multa) from salarios_contratados.detalles_multas_solicitadas where id_multa_solicitada = NEW.id_multa_solicitada;
	IF valor IS NULL THEN 
		valor :=0;
	END IF;
	UPDATE salarios_contratados.multas_solicitadas SET total_multa = valor, usu_modi = nombre_usuario, fec_modi = now() WHERE id_multa_solicitada = NEW.id_multa_solicitada;
	RETURN NEW;
END IF;
END;
]]></definition>
</function>

<function name="actualiza_importes_multas_aplicadas"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="trigger"/>
	</return-type>
	<definition><![CDATA[
DECLARE
	vSolicitado numeric(12,2) := 0;
	vAplicado numeric(12,2) := 0;
	vDiferencia numeric(12,2) := 0;
	nombre_usuario text := user::varchar(30);
BEGIN
IF (TG_OP = 'DELETE') THEN
	Select  sum(importe_solicitado), 
		sum(importe_aplicado), 
		sum(importe_diferencia) 
		into vSolicitado, vAplicado, vDiferencia 
	from salarios_contratados.detalles_multas_aplicadas 
	where id_multas_aplicadas = OLD.id_multas_aplicadas;

	IF vSolicitado IS NULL THEN 
		vSolicitado :=0;
	END IF;
	IF vAplicado IS NULL THEN 
		vAplicado :=0;
	END IF;

	IF vDiferencia IS NULL THEN 
		vDiferencia :=0;
	END IF;

	UPDATE salarios_contratados.multas_aplicadas 
	SET 	total_solicitado = vSolicitado, 
		total_aplicado = vAplicado, 
		total_diferencia = vDiferencia, 
		usu_modi = nombre_usuario, 
		fec_modi = now(),
		ip_modi = inet_client_addr()::varchar(30)
	where id_multas_aplicadas = OLD.id_multas_aplicadas;

	RETURN OLD;

ELSIF (TG_OP = 'UPDATE') THEN
	Select  sum(importe_solicitado), 
		sum(importe_aplicado), 
		sum(importe_diferencia) 
		into vSolicitado, vAplicado, vDiferencia 
	from salarios_contratados.detalles_multas_aplicadas 
	where id_multas_aplicadas = NEW.id_multas_aplicadas;

	IF vSolicitado IS NULL THEN 
		vSolicitado :=0;
	END IF;
	IF vAplicado IS NULL THEN 
		vAplicado :=0;
	END IF;

	IF vDiferencia IS NULL THEN 
		vDiferencia :=0;
	END IF;

	UPDATE salarios_contratados.multas_aplicadas 
	SET 	total_solicitado = vSolicitado, 
		total_aplicado = vAplicado, 
		total_diferencia = vDiferencia, 
		usu_modi = nombre_usuario, 
		fec_modi = now(),
		ip_modi = inet_client_addr()::varchar(30)
	where id_multas_aplicadas = NEW.id_multas_aplicadas;
	RETURN NEW;
ELSIF (TG_OP = 'INSERT') THEN
	Select  sum(importe_solicitado), 
		sum(importe_aplicado), 
		sum(importe_diferencia) 
		into vSolicitado, vAplicado, vDiferencia 
	from salarios.detalles_multas_aplicadas 
	where id_multas_aplicadas = NEW.id_multas_aplicadas;

	IF vSolicitado IS NULL THEN 
		vSolicitado :=0;
	END IF;
	IF vAplicado IS NULL THEN 
		vAplicado :=0;
	END IF;

	IF vDiferencia IS NULL THEN 
		vDiferencia :=0;
	END IF;

	UPDATE salarios.multas_aplicadas 
	SET 	total_solicitado = vSolicitado, 
		total_aplicado = vAplicado, 
		total_diferencia = vDiferencia, 
		usu_modi = nombre_usuario, 
		fec_modi = now(),
		ip_modi = inet_client_addr()::varchar(30)
	where id_multas_aplicadas = NEW.id_multas_aplicadas;
	RETURN NEW;
END IF;
END;
]]></definition>
</function>

<function name="aplicar_descuentos_varios_2"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="1000">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<parameter name="id_planilla_salario_detalle">
		<type name="integer"/>
	</parameter>
	<parameter name="id_administracion">
		<type name="integer"/>
	</parameter>
	<parameter name="id_planilla_salario">
		<type name="integer"/>
	</parameter>
	<parameter name="id_funcionario">
		<type name="integer"/>
	</parameter>
	<parameter name="id_oficina">
		<type name="integer"/>
	</parameter>
	<parameter name="dias_trabajados">
		<type name="integer"/>
	</parameter>
	<parameter name="monto_presupuestado">
		<type name="numeric"/>
	</parameter>
	<parameter name="monto_devengado">
		<type name="numeric"/>
	</parameter>
	<parameter name="monto_multa">
		<type name="numeric"/>
	</parameter>
	<parameter name="liquido_inicial">
		<type name="numeric"/>
	</parameter>
	<parameter name="liquido_final">
		<type name="numeric"/>
	</parameter>
	<parameter name="solicitado">
		<type name="numeric"/>
	</parameter>
	<parameter name="aplicado">
		<type name="numeric"/>
	</parameter>
	<parameter name="diferencia">
		<type name="numeric"/>
	</parameter>
	</return-type>
	<parameter name="in_id_planilla_salario" in="true">
		<type name="integer"/>
	</parameter>
	<definition><![CDATA[
DECLARE

-- cantidad de apariciones del funcionario en el detalle 
-- de la planilla de salarios.
    rApariciones RECORD;

-- Cursor utilizado cuando apariciones = 2
    cDetallePSA2 refcursor;

-- un registro del cursor
    rDetallePSA1 RECORD;
    rDetallePSA2 RECORD;

-- variables para los importes liquidos sin descuentos:
    nImporte_liquido1 numeric := 0;
    nImporte_liquido2 numeric := 0;

-- desc_de_un_funcionario : Este registro almacena un descuento
-- del funcionario activo
    desc_de_un_funcionario RECORD;

    -- la variable nImporte_solicitado: guarda el importe del descuento que esta
    -- siendo procesado actualmente, se utiliza esta variable
    -- por cuestiones de practicidad.
    nImporte_solicitado numeric := 0;

    -- importe_solicitado_acumulado: esta variable guarda la sumatoria
    -- de todos los descuentos solicitados para este funcionario.
    nImporte_solicitado_acumulado numeric := 0;

    nImporte_solicitado1 numeric := 0;
    nImporte_aplicado_acumulado1 numeric := 0;
    nImporte_diferencia1 numeric := 0;

    nImporte_solicitado2 numeric := 0;
    nImporte_aplicado_acumulado2 numeric := 0;
    nImporte_diferencia2 numeric := 0;
    nImporte_aplicado_de_este_concepto numeric :=0;

    in_id_planilla_descuento INTEGER :=0;
    id_judicial_cobro_guaranies INTEGER;
-- FIN --
-- Cursor utilizado para armar el resultado a ser devuelto al cliente:
--    cDetallePllaSalarioOUT refcursor;

BEGIN

	-- Se obtiene el ID de la planilla de descuento para este plla de salario.
	-- si no existe se cancela la ejecucion de la funcion
	Select z.id_planilla_descuento into in_id_planilla_descuento 
	from salarios_contratados.planillas_descuentos z 
	where z.id_planilla_salario = IN_ID_PLANILLA_SALARIO and z.estado = 0;
IF (in_id_planilla_descuento IS NOT NULL) THEN


/*
a) Identificar la cantidad de veces que aparece 
   cada funcionario en el detalle de la planilla de salarios 
   que se esta procesando.
*/
	FOR rApariciones IN
		SELECT 
			a.id_funcionario, 
			count(*) as cantidad
		FROM salarios_contratados.planillas_salarios_detalles a
		      left join salarios_contratados.planillas_salarios b 
			   on (a.id_planilla_salario=b.id_planilla_salario)
		WHERE b.id_estado=4 -- 4 es CON MULTAS APLICADAS
		      and b.id_planilla_salario= IN_ID_PLANILLA_SALARIO 
		group by a.id_funcionario
	LOOP
		-- limpiar las variables utilizadas por este funcionario:
		    nImporte_liquido1 := 0;
		    nImporte_liquido2 := 0;
		    nImporte_solicitado := 0;

		    nImporte_solicitado_acumulado := 0;

		    nImporte_solicitado1 := 0;
		    nImporte_aplicado_acumulado1 := 0;
		    nImporte_diferencia1 := 0;

		    nImporte_solicitado2 := 0;
		    nImporte_aplicado_acumulado2 := 0;
		    nImporte_diferencia2 := 0;
                    nImporte_aplicado_de_este_concepto :=0;
		-- fin de limpieza de variables.
	/*
	b) Por cada funcionario realizar lo siguiente:
	c) Obtener para este funcionario los importes liquido1 
	    y si la cantidad = 2 
	    tambien el importe del liquido2 junto a todos los demas datos
	    del detalle de la planilla de salarios.
	*/

	OPEN cDetallePSA2 SCROLL FOR 
		SELECT 
			a.id_planilla_salario_detalle, 
			a.id_administracion, 
			a.id_planilla_salario, 
			a.id_funcionario, 
			a.id_oficina, 
			a.dias_trabajados, 
			a.monto_presupuestado, 
			a.monto_devengado, 
			a.monto_multa, 
			--CASE WHEN a.monto_devengado > 0::numeric THEN (a.monto_devengado - (a.monto_iva+a.monto_multa))::numeric ELSE 0::numeric END AS "liquido_inicial",
			--CASE WHEN a.monto_devengado > 0::numeric THEN (a.monto_devengado - (a.monto_iva+a.monto_multa))::numeric ELSE 0::numeric END AS "liquido_final"
			CASE WHEN a.monto_devengado > 0::numeric THEN (a.monto_devengado - (a.monto_iva))::numeric ELSE 0::numeric END AS "liquido_inicial",
			CASE WHEN a.monto_devengado > 0::numeric THEN (a.monto_devengado - (a.monto_iva))::numeric ELSE 0::numeric END AS "liquido_final"
			,(0::numeric) as "solicitado"
			,(0::numeric) as "aplicado"
			,(0::numeric) as "diferencia" -- diferencia = (solicitado-aplicado):

		FROM salarios_contratados.planillas_salarios_detalles a
		      left join salarios_contratados.planillas_salarios b 
			   on (a.id_planilla_salario = b.id_planilla_salario)
		WHERE -- b.id_administracion = 0
		      -- and b.gestion = 2011
		      -- and b.id_mes = 1 
		      -- and 
		      b.id_estado = 4 -- 4 = con multas aplicadas!.
		      and b.id_planilla_salario= in_id_planilla_salario -- 5
		      and a.id_funcionario=rApariciones.id_funcionario
		ORDER BY a.monto_presupuestado ASC;

	-- Asumimos que un funcionario aparece como maximo 2 veces!!!
	FETCH NEXT FROM cDetallePSA2 INTO rDetallePSA1;
	-- Obtenemos el importe_liquido1:
	nImporte_liquido1 := rDetallePSA1.liquido_inicial;
	IF (rApariciones.cantidad = 2 ) THEN
		FETCH NEXT FROM cDetallePSA2 INTO rDetallePSA2;
		-- Obtenemos el importe_liquido2:
		nImporte_liquido2 := rDetallePSA2.liquido_inicial;
	END IF;

	CLOSE cDetallePSA2;

	/*
	d) obtener los descuentos de este funcionario
	*/
	FOR desc_de_un_funcionario IN 
		Select 
			g.id_funcionario,
			g.monto,
			g.ejecutado,
			g.id_tipo_descuento,
			g.id_descuento_aso,
			g.id_descuento_judicial,
			g.id_judicial,
			g.orden,
			g.aso 
		from salarios_contratados.obtener_descuentos_varios(
			(Select z.id_administracion from salarios_contratados.planillas_salarios z where z.id_planilla_salario = IN_ID_PLANILLA_SALARIO), -- 0,
			(Select z.gestion::integer from salarios_contratados.planillas_salarios z where z.id_planilla_salario = IN_ID_PLANILLA_SALARIO), --2011,
			(Select z.id_mes from salarios_contratados.planillas_salarios z where z.id_planilla_salario = IN_ID_PLANILLA_SALARIO) -- 1
			) g
		where g.id_funcionario = rApariciones.id_funcionario -- 195
		LOOP
			-- la variable nImporte_solicitado: guarda el importe del descuento que esta
			-- siendo procesado actualmente, se utiliza esta variable 
			-- por cuestiones de practicidad.
			nImporte_solicitado := desc_de_un_funcionario.monto;
			-- Ponemos a cero la variable que guarda el importe aplicado de este concepto.
			nImporte_aplicado_de_este_concepto := 0 ;
			/*
			f) Aplicar los descuentos a este funcionario
			*/
			-- INICIO - APLICACION DE DESCUENTOS ---------------------------------------
			/*
			d) Sumar el importe_solicitado al
			   importe_solicitado_acumulado.
			*/
			/*
			importe_solicitado_acumulado: esta variable guarda la sumatoria 
			de todos los descuentos solicitados para este funcionario.
			*/
			nImporte_solicitado_acumulado := nImporte_solicitado_acumulado + nImporte_solicitado;
			/*
			e) Verificar que el importe_liquido1 sea mayor a cero.

			f) Verificar que el importe_solicitado sea menor
			   al importe_liquido1.
			*/
			IF (nImporte_liquido1 > 0) THEN
				IF ( nImporte_solicitado < nImporte_liquido1) THEN
				/*
				g) Efectuar lo siguiente: 
				   g.0) importe_solicitado1=importe_solicitado1+importe_solicitado
				   g.1) liquido1 = liquido1 - importe_solicitado 
				   g.2) importe_aplicado_acumulado1 = importe_aplicado_acumulado1+ importe_solicitado
				*/
				/*
				importe_solicitado1: Esta variable guarda la sumatoria de todos 
				los descuentos solicitados al liquido1
				*/
					nImporte_solicitado1 := nImporte_solicitado1 + nImporte_solicitado;
					nImporte_liquido1 := nImporte_liquido1 - nImporte_solicitado;
					nImporte_aplicado_acumulado1 := nImporte_aplicado_acumulado1 + nImporte_solicitado;
                                        nImporte_aplicado_de_este_concepto := nImporte_solicitado;
				ELSE
					/*
					FLUJOS ALTERNATIVOS:
					FA1. En el punto f) si el solicitado es mayor a liquido1 
					     pero menor a liquido2:
					*/
					IF (nImporte_solicitado < nImporte_liquido2) THEN
					/*
					     Realizar el punto g) utilizando el liquido2 
					     y sus variables relacionadas (importe_solicitado2,importe_aplicado_acumulado2)
					     en vez del liquido1.
					*/
						nImporte_solicitado2 := nImporte_solicitado2 + nImporte_solicitado;
						nImporte_liquido2 := nImporte_liquido2 - nImporte_solicitado;
						nImporte_aplicado_acumulado2 := nImporte_aplicado_acumulado2 + nImporte_solicitado;
                                                nImporte_aplicado_de_este_concepto := nImporte_solicitado;
					ELSE
						/*
						FA2. En el punto f) si el solicitado es mayor al liquido1 y liquido2
						     pero menor a (liquido1+liquido2):
						     realizar las siguientes operaciones: 
						*/
						IF (nImporte_solicitado < (nImporte_liquido1 + nImporte_liquido2)) THEN
						/*
						     a) importe_solicitado1=importe_solicitado1+importe_solicitado
						     b) diferencia1=solicitado-liquido1
						     c) importe_aplicado_acumulado1 = importe_aplicado_acumulado1 + liquido1
						     d) liquido1=0
						     e) importe_solicitado2=importe_solicitado2+diferencia1
						     f) liquido2=liquido2-diferencia1
						     g) importe_aplicado_acumulado2 = importe_aplicado_acumulado2 + diferencia1
						*/
							nImporte_solicitado1 := nImporte_solicitado1 + nImporte_solicitado;
							nImporte_diferencia1 := nImporte_solicitado - nImporte_liquido1;
							nImporte_aplicado_acumulado1 := nImporte_aplicado_acumulado1 + nImporte_liquido1;
                                                        nImporte_aplicado_de_este_concepto := nImporte_liquido1;
							nImporte_liquido1 := 0;
							nImporte_solicitado2 := nImporte_solicitado2 + nImporte_diferencia1;
							nImporte_liquido2 := nImporte_liquido2 - nImporte_diferencia1;
							nImporte_aplicado_acumulado2 := nImporte_aplicado_acumulado2 + nImporte_diferencia1;
                                                        nImporte_aplicado_de_este_concepto := nImporte_aplicado_de_este_concepto + nImporte_diferencia1;
						ELSE
						/*
						FA3. En el punto f) si el solicitado es mayor al liquido1, liquido2
						     y (liquido1+liquido2):
						     realizar las siguientes operaciones: 
						     a) importe_solicitado1=importe_solicitado1+importe_solicitado
						     b) diferencia1=solicitado-liquido1
						     c) importe_aplicado_acumulado1 = importe_aplicado_acumulado1 + liquido1
						     d) liquido1=0
						     e) importe_solicitado2=importe_solicitado2+diferencia1
						     f) diferencia2=diferencia1-liquido2
						     g) importe_aplicado_acumulado2 = importe_aplicado_acumulado2 + liquido2
						     h) liquido2=0
						*/
							nImporte_solicitado1 := nImporte_solicitado1 + nImporte_solicitado;
							nImporte_diferencia1 := nImporte_solicitado - nImporte_liquido1;
							nImporte_aplicado_acumulado1 := nImporte_aplicado_acumulado1 + nImporte_liquido1;
                                                        nImporte_aplicado_de_este_concepto := nImporte_liquido1;
							nImporte_liquido1 := 0;
							nImporte_solicitado2 := nImporte_solicitado2 + nImporte_diferencia1;
							nImporte_diferencia2 := nImporte_diferencia1 - nImporte_liquido2;
							nImporte_aplicado_acumulado2 := nImporte_aplicado_acumulado2 + nImporte_liquido2;
							nImporte_liquido2 := 0;
                                                        nImporte_aplicado_de_este_concepto := nImporte_aplicado_de_este_concepto + nImporte_liquido2;

						END IF;
					END IF;
				END IF;
			END IF;
                        -- Insertar los datos en el detalle de la planilla de descuento:

                        -- Insertar / Actualizar los descuentos ya procesados:
                        -- Insertar un registro en el detalle de la planilla de descuentos activa:
                        -- Siempre y cuando exista la planilla de descuento!

                            -- Preparamos los valores:
                            IF desc_de_un_funcionario.id_descuento_judicial = 0 THEN
                                    desc_de_un_funcionario.id_descuento_judicial := NULL;
                            ELSE
                                    desc_de_un_funcionario.id_descuento_aso := NULL;
                            END IF;
                            -- Cuando no existe una planilla de descuento
                            -- el in_id_planilla_descuento = 0.
                            IF (in_id_planilla_descuento !=0 ) THEN
                                    INSERT INTO salarios_contratados.planillas_descuentos_detalles (
                                    id_administracion,
                                    id_funcionario,
                                    id_planilla_descuento,
                                    monto_descuento, --aqui esto es el aplicado!
                                    monto_solicitado,
                                    id_descuento_judicial,
                                    id_descuento_aso,
                                    usu_alta,
                                    fec_alta,
                                    ip_alta
                                    ) VALUES (
                                    rDetallePSA1.id_administracion, -- id_administracion,
                                    rDetallePSA1.id_funcionario, --id_funcionario,
                                    in_id_planilla_descuento, -- id_planilla_descuento,
                                    nImporte_aplicado_de_este_concepto, -- monto_descuento, --aqui esto es el aplicado!
                                    desc_de_un_funcionario.monto, -- monto_solicitado,
                                    desc_de_un_funcionario.id_descuento_judicial, --id_descuento_judicial,
                                    desc_de_un_funcionario.id_descuento_aso, --id_descuento_aso,
                                    current_user::varchar(30), -- usu_alta,
                                    now(),
                                    inet_client_addr()::varchar(30) -- ip_alta -- se recibira al llamar al sp?
                                    );

                                    -- Aqui se debe actualizar el saldo pendiente en Judiciales!
                                    IF desc_de_un_funcionario.id_descuento_judicial is not null THEN
					-- verificar si es un descuento por prestacion alimenticia,
					-- en caso afirmativo no realizar la resta:
					Select g.id_judicial
						into id_judicial_cobro_guaranies
					from salarios_contratados.descuentos_judiciales g
						LEFT JOIN salarios.tipos_descuentos h
							ON (g.id_tipo_descuento = h.id_tipo_descuento)
					where g.id_descuento_judicial = desc_de_un_funcionario.id_descuento_judicial
					and h.abreviatura = 'DJCG';
					IF (id_judicial_cobro_guaranies IS NOT NULL) THEN
						   UPDATE salarios_contratados.judiciales
						       SET monto_saldo = (monto_saldo - nImporte_aplicado_de_este_concepto),
							   usu_modi = current_user::varchar(30), fec_modi = now(), ip_modi = inet_client_addr()::varchar(30)
						    WHERE id_judicial = (Select id_judicial
									    from salarios_contratados.descuentos_judiciales
									    where id_descuento_judicial = desc_de_un_funcionario.id_descuento_judicial)
						    ;
					END IF;

                                    END IF;

                            END IF;

			-- FIN    - APLICACION DE DESCUENTOS ---------------------------------------
		END LOOP; -- FIN de los descuentos de este funcionario.
			/*
			g) cargar los datos en el cursor que se utilizara
			   para devolver los datos de salida del detalle 
			   de la planilla de salarios.
			*/
			/*
			Se debe contemplar los casos cuando cantidad = 2
			*/
			-- variables comunes a las dos apariciones:
			id_administracion := rDetallePSA1.id_administracion; -- integer, 
			id_planilla_salario := rDetallePSA1.id_planilla_salario; -- integer, 
			id_funcionario := rDetallePSA1.id_funcionario; -- integer, 

			-- datos de la primera aparicion:
			id_planilla_salario_detalle := rDetallePSA1.id_planilla_salario_detalle; -- integer, 
			id_oficina := rDetallePSA1.id_oficina; -- integer, 
			dias_trabajados := rDetallePSA1.dias_trabajados; -- integer, 
			monto_presupuestado := rDetallePSA1.monto_presupuestado; -- numeric, 
			monto_devengado := rDetallePSA1.monto_devengado; -- numeric, 
			monto_multa := rDetallePSA1.monto_multa; -- numeric, 
			liquido_inicial := rDetallePSA1.liquido_inicial; -- numeric,

			solicitado := nImporte_solicitado1; -- numeric,
			aplicado := nImporte_aplicado_acumulado1; -- numeric,
			diferencia := nImporte_diferencia1; -- numeric
			liquido_final := nImporte_liquido1; -- numeric,

                        -- actualizar el detalle de la planilla de salarios:
                        UPDATE salarios_contratados.planillas_salarios_detalles y
                           SET
                               importe_liquido_sin_descuentos_varios = rDetallePSA1.liquido_inicial,
                               importe_descuentos_varios_solicitado = nImporte_solicitado1,
                               importe_descuentos_varios_aplicado = nImporte_aplicado_acumulado1,
                               importe_descuentos_varios_diferencia = nImporte_diferencia1,
                               importe_liquido_con_descuentos_varios = nImporte_liquido1,
                               usu_modi = current_user::varchar(30),
                               fec_modi = now(),
                               ip_modi = inet_client_addr()::varchar(30)
                         WHERE y.id_planilla_salario_detalle = rDetallePSA1.id_planilla_salario_detalle;

			RETURN NEXT;

			IF (rApariciones.cantidad = 2) THEN
				-- datos de la SEGUNDA aparicion:
				id_planilla_salario_detalle := rDetallePSA2.id_planilla_salario_detalle; -- integer, 
				id_oficina := rDetallePSA2.id_oficina; -- integer, 
				dias_trabajados := rDetallePSA2.dias_trabajados; -- integer, 
				monto_presupuestado := rDetallePSA2.monto_presupuestado; -- numeric, 
				monto_devengado := rDetallePSA2.monto_devengado; -- numeric, 
				monto_multa := rDetallePSA2.monto_multa; -- numeric, 
				liquido_inicial := rDetallePSA2.liquido_inicial; -- numeric,
				solicitado := nImporte_solicitado2; -- numeric,
				aplicado := nImporte_aplicado_acumulado2; -- numeric,
				diferencia := nImporte_diferencia2; -- numeric
				liquido_final := nImporte_liquido2; -- numeric,
                                -- actualizar el detalle de la planilla de salarios:
                                UPDATE salarios_contratados.planillas_salarios_detalles y
                                   SET
                                        importe_liquido_sin_descuentos_varios = rDetallePSA2.liquido_inicial,
                                        importe_descuentos_varios_solicitado = nImporte_solicitado2,
                                        importe_descuentos_varios_aplicado = nImporte_aplicado_acumulado2,
                                        importe_descuentos_varios_diferencia = nImporte_diferencia2,
                                        importe_liquido_con_descuentos_varios = nImporte_liquido2,
                                        usu_modi = current_user::varchar(30),
                                        fec_modi = now(),
                                        ip_modi = inet_client_addr()::varchar(30)
                                 WHERE y.id_planilla_salario_detalle = rDetallePSA2.id_planilla_salario_detalle;

				RETURN NEXT;
			END IF;


	END LOOP; -- FIN de este funcionario - rApariciones 

/*
	h) Al finalizar recorrer el cursor de salida y 
	   retornar los datos al cliente.

*/

/*
		h) guardar los descuentos aplicados (detalle)
		   y cambiar el estado a la cabecera a "PROCESADO".

		i) actualizar el detalle de la planilla de salario
		   con los importes actuales.

		j) actualizar el estado de la planilla de salario a:
		   "CON DESCUENTOS APLICADOS"

*/

-- ESTO SE HACE UNA SOLA VEZ PARA LA EJECUCION DE ESTA FUNCION

-- actualizar plla de descuentos (cabecera)
-- Cuando no existe una planilla de descuento
-- el in_id_planilla_descuento = 0.
IF (in_id_planilla_descuento !=0 ) THEN
	UPDATE salarios_contratados.planillas_descuentos
	   SET estado = 1, -- procesado
	       total_importe_solicitado = coalesce((Select sum(monto_solicitado)
					 from salarios_contratados.planillas_descuentos_detalles
					 where id_planilla_descuento = in_id_planilla_descuento
					),0),
	       total_descuento = coalesce((Select sum(monto_descuento)
					 from salarios_contratados.planillas_descuentos_detalles
					 where id_planilla_descuento = in_id_planilla_descuento
					),0),
	       usu_modi = current_user::varchar(30), fec_modi = now(), ip_modi = inet_client_addr()::varchar(30)
	 WHERE id_planilla_descuento = in_id_planilla_descuento;

-- actualizar descuentos_aso y descuentos_judiciales estado=1
-- de esta planilla de descuentos:
	UPDATE salarios_contratados.descuentos_aso
	   SET estado = 1, -- procesado
		usu_modi = current_user::varchar(30), fec_modi = now(), ip_modi = inet_client_addr()::varchar(30)
	 WHERE id_descuento_aso in (
					Select id_descuento_aso
					from salarios_contratados.planillas_descuentos_detalles
					where id_planilla_descuento = in_id_planilla_descuento
					and id_descuento_aso is not null
				)
	;

	UPDATE salarios_contratados.descuentos_judiciales
	   SET estado = 1, -- procesado
		usu_modi = current_user::varchar(30), fec_modi = now(), ip_modi = inet_client_addr()::varchar(30)
	 WHERE id_descuento_judicial in (
					 Select id_descuento_judicial
					from salarios_contratados.planillas_descuentos_detalles
					where id_planilla_descuento = in_id_planilla_descuento
						and id_descuento_judicial is not null
					)
	;

END IF;

-- actualizar plla de salarios
-- Estado 3 = CON DESCUENTOS APLICADOS
UPDATE salarios_contratados.planillas_salarios x
   SET id_estado = 3,
              usu_modi = current_user::varchar(30), fec_modi = now(), ip_modi = inet_client_addr()::varchar(30)
 WHERE x.id_planilla_salario = in_id_planilla_salario;

ELSE
	RAISE EXCEPTION 'NO EXISTE PLANILLA DE DESCUENTOS VINCULADA A ESTA PLANILLA DE SALARIO';
END IF;

END;
]]></definition>
</function>

<function name="aplicar_descuentos_varios_3"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="1000">
	<schema name="salarios_contratados"/>
	<role name="mcaniza"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<parameter name="id_planilla_salario_detalle">
		<type name="integer"/>
	</parameter>
	<parameter name="id_administracion">
		<type name="integer"/>
	</parameter>
	<parameter name="id_planilla_salario">
		<type name="integer"/>
	</parameter>
	<parameter name="id_funcionario">
		<type name="integer"/>
	</parameter>
	<parameter name="id_oficina">
		<type name="integer"/>
	</parameter>
	<parameter name="dias_trabajados">
		<type name="integer"/>
	</parameter>
	<parameter name="monto_presupuestado">
		<type name="numeric"/>
	</parameter>
	<parameter name="monto_devengado">
		<type name="numeric"/>
	</parameter>
	<parameter name="monto_multa">
		<type name="numeric"/>
	</parameter>
	<parameter name="liquido_inicial">
		<type name="numeric"/>
	</parameter>
	<parameter name="liquido_final">
		<type name="numeric"/>
	</parameter>
	<parameter name="solicitado">
		<type name="numeric"/>
	</parameter>
	<parameter name="aplicado">
		<type name="numeric"/>
	</parameter>
	<parameter name="diferencia">
		<type name="numeric"/>
	</parameter>
	</return-type>
	<parameter name="in_id_planilla_salario" in="true">
		<type name="integer"/>
	</parameter>
	<definition><![CDATA[
DECLARE

-- cantidad de apariciones del funcionario en el detalle 
-- de la planilla de salarios.
    rApariciones RECORD;

-- Cursor utilizado cuando apariciones = 2
    cDetallePSA2 refcursor;

-- un registro del cursor
    rDetallePSA1 RECORD;
    rDetallePSA2 RECORD;

-- variables para los importes liquidos sin descuentos:
    nImporte_liquido_a_percibir1 numeric := 0;
    nImporte_liquido_a_percibir2 numeric := 0;
    nImporte_liquido1 numeric := 0;
    nImporte_liquido2 numeric := 0;

-- desc_de_un_funcionario : Este registro almacena un descuento
-- del funcionario activo
    desc_de_un_funcionario RECORD;

    -- la variable nImporte_solicitado: guarda el importe del descuento que esta
    -- siendo procesado actualmente, se utiliza esta variable
    -- por cuestiones de practicidad.
    nImporte_solicitado numeric := 0;

    -- importe_solicitado_acumulado: esta variable guarda la sumatoria
    -- de todos los descuentos solicitados para este funcionario.
    nImporte_solicitado_acumulado numeric := 0;

    nImporte_solicitado1 numeric := 0;
    nImporte_aplicado_acumulado1 numeric := 0;
    nImporte_diferencia1 numeric := 0;

    nImporte_solicitado2 numeric := 0;
    nImporte_aplicado_acumulado2 numeric := 0;
    nImporte_diferencia2 numeric := 0;
    nImporte_aplicado_de_este_concepto numeric :=0;

    in_id_planilla_descuento INTEGER :=0;
    id_judicial_cobro_guaranies INTEGER;
-- FIN --
-- Cursor utilizado para armar el resultado a ser devuelto al cliente:
--    cDetallePllaSalarioOUT refcursor;

BEGIN

	-- Se obtiene el ID de la planilla de descuento para este plla de salario.
	-- si no existe se cancela la ejecucion de la funcion
	Select z.id_planilla_descuento into in_id_planilla_descuento 
	from salarios_contratados.planillas_descuentos z 
	where z.id_planilla_salario = IN_ID_PLANILLA_SALARIO and z.estado = 0;
IF (in_id_planilla_descuento IS NOT NULL) THEN


/*
a) Identificar la cantidad de veces que aparece 
   cada funcionario en el detalle de la planilla de salarios 
   que se esta procesando.
*/
	FOR rApariciones IN
		SELECT 
			a.id_funcionario, 
			count(*) as cantidad
		FROM salarios_contratados.planillas_salarios_detalles a
		      left join salarios_contratados.planillas_salarios b 
			   on (a.id_planilla_salario=b.id_planilla_salario)
		WHERE b.id_estado=4 -- 4 es CON MULTAS APLICADAS
		      and b.id_planilla_salario= IN_ID_PLANILLA_SALARIO 
		group by a.id_funcionario
	LOOP
		-- limpiar las variables utilizadas por este funcionario:
		    nImporte_liquido1 := 0;
		    nImporte_liquido2 := 0;
		    nImporte_solicitado := 0;

		    nImporte_solicitado_acumulado := 0;

		    nImporte_solicitado1 := 0;
		    nImporte_aplicado_acumulado1 := 0;
		    nImporte_diferencia1 := 0;

		    nImporte_solicitado2 := 0;
		    nImporte_aplicado_acumulado2 := 0;
		    nImporte_diferencia2 := 0;
                    nImporte_aplicado_de_este_concepto :=0;
		-- fin de limpieza de variables.
	/*
	b) Por cada funcionario realizar lo siguiente:
	c) Obtener para este funcionario los importes liquido1 
	    y si la cantidad = 2 
	    tambien el importe del liquido2 junto a todos los demas datos
	    del detalle de la planilla de salarios.
	*/

	OPEN cDetallePSA2 SCROLL FOR 
		SELECT 
			a.id_planilla_salario_detalle, 
			a.id_administracion, 
			a.id_planilla_salario, 
			a.id_funcionario, 
			a.id_oficina, 
			a.dias_trabajados, 
			a.monto_presupuestado, 
			a.monto_devengado, 
			a.monto_multa,
			a.monto_iva, 
			-- CASE WHEN a.monto_devengado > 0::numeric THEN (a.monto_devengado - (a.monto_iva+a.monto_multa))::numeric ELSE 0::numeric END AS "liquido_inicial",
			-- CASE WHEN a.monto_devengado > 0::numeric THEN (a.monto_devengado - (a.monto_iva+a.monto_multa))::numeric ELSE 0::numeric END AS "liquido_final"
			-- CASE WHEN a.monto_devengado > 0::numeric THEN (a.monto_devengado - (a.monto_iva))::numeric ELSE 0::numeric END AS "liquido_inicial",
			-- CASE WHEN a.monto_devengado > 0::numeric THEN (a.monto_devengado - (a.monto_iva))::numeric ELSE 0::numeric END AS "liquido_final"
			-- MODIFICADO
			-- CASE WHEN a.monto_devengado > 0::numeric THEN (a.monto_devengado*0.5)::numeric ELSE 0::numeric END AS "importe_liquido_a_percibir",
			-- CASE WHEN a.monto_devengado > 0::numeric THEN ((a.monto_devengado*0.5)::numeric - (a.monto_iva))::numeric ELSE 0::numeric END AS "liquido_inicial",
			-- CASE WHEN a.monto_devengado > 0::numeric THEN ((a.monto_devengado*0.5)::numeric - (a.monto_iva))::numeric ELSE 0::numeric END AS "liquido_final"

			-- MODIFICADO 17-06-2014
			--CASE WHEN a.monto_devengado > 0::numeric THEN (a.monto_devengado*0.0)::numeric ELSE 0::numeric END AS "importe_liquido_a_percibir",
			--CASE WHEN a.monto_devengado > 0::numeric THEN ((a.monto_devengado*1.0)::numeric - (a.monto_iva))::numeric ELSE 0::numeric END AS "liquido_inicial",
			--CASE WHEN a.monto_devengado > 0::numeric THEN ((a.monto_devengado*1.0)::numeric - (a.monto_iva))::numeric ELSE 0::numeric END AS "liquido_final"
			-- MODIFICADO 28-01-2016
			-- CASE WHEN a.monto_devengado > 0::numeric THEN (a.monto_devengado*0.0)::numeric ELSE 0::numeric END AS "importe_liquido_a_percibir",
			-- CASE WHEN a.monto_devengado > 0::numeric THEN ((a.monto_devengado*1.0)::numeric - (a.monto_iva) - (a.monto_multa))::numeric ELSE 0::numeric END AS "liquido_inicial",
			-- CASE WHEN a.monto_devengado > 0::numeric THEN ((a.monto_devengado*1.0)::numeric - (a.monto_iva) - (a.monto_multa))::numeric ELSE 0::numeric END AS "liquido_final"
			-- MODIFICADO 26-01-2018 10:16 AM
			-- EL CONCEPTO DEL LIQUIDO A PERCIBIR EN CASO DE QUE LOS DESCUENTOS VARIOS SEAN MENOR AL 50% excluyendo IVA y multa ley 6026/2018 art. 59
			CASE WHEN a.monto_devengado > 0::numeric THEN ((CASE WHEN (a.monto_presupuestado*0.5)<(a.monto_devengado-a.monto_iva-a.monto_multa) THEN (a.monto_devengado-a.monto_presupuestado*0.5-a.monto_iva-a.monto_multa) ELSE 0 END))::numeric ELSE 0::numeric END AS "importe_liquido_a_percibir",
			CASE WHEN a.monto_devengado > 0::numeric THEN ((CASE WHEN (a.monto_presupuestado*0.5)<(a.monto_devengado-a.monto_iva-a.monto_multa) THEN (a.monto_presupuestado*0.5) ELSE (a.monto_devengado-a.monto_iva-a.monto_multa) END))::numeric ELSE 0::numeric END AS "liquido_inicial",
			CASE WHEN a.monto_devengado > 0::numeric THEN ((CASE WHEN (a.monto_presupuestado*0.5)<(a.monto_devengado-a.monto_iva-a.monto_multa) THEN (a.monto_presupuestado*0.5) ELSE (a.monto_devengado-a.monto_iva-a.monto_multa) END))::numeric ELSE 0::numeric END AS "liquido_final"
			,(0::numeric) as "solicitado"
			,(0::numeric) as "aplicado"
			,(0::numeric) as "diferencia" -- diferencia = (solicitado-aplicado):
		FROM salarios_contratados.planillas_salarios_detalles a
		      left join salarios_contratados.planillas_salarios b 
			   on (a.id_planilla_salario = b.id_planilla_salario)
		WHERE -- b.id_administracion = 0
		      -- and b.gestion = 2011
		      -- and b.id_mes = 1 
		      -- and 
		      b.id_estado = 4 -- 4 = con multas aplicadas!.
		      and b.id_planilla_salario= in_id_planilla_salario -- 5
		      and a.id_funcionario=rApariciones.id_funcionario
		ORDER BY a.monto_presupuestado ASC;

	-- Asumimos que un funcionario aparece como maximo 2 veces!!!
	FETCH NEXT FROM cDetallePSA2 INTO rDetallePSA1;
	-- Obtenemos el importe_liquido1:
	nImporte_liquido1 := rDetallePSA1.liquido_inicial;
	nImporte_liquido_a_percibir1 := rDetallePSA1.importe_liquido_a_percibir;
	IF (rApariciones.cantidad = 2 ) THEN
		FETCH NEXT FROM cDetallePSA2 INTO rDetallePSA2;
		-- Obtenemos el importe_liquido2:
		nImporte_liquido2 := rDetallePSA2.liquido_inicial;
		nImporte_liquido_a_percibir2 := rDetallePSA2.importe_liquido_a_percibir;
	END IF;

	CLOSE cDetallePSA2;

	/*
	d) obtener los descuentos de este funcionario
	*/
	FOR desc_de_un_funcionario IN 
		Select 
			g.id_funcionario,
			g.monto,
			g.ejecutado,
			g.id_tipo_descuento,
			g.id_descuento_aso,
			g.id_descuento_judicial,
			g.id_judicial,
			g.orden,
			g.aso 
		from salarios_contratados.obtener_descuentos_varios(
			(Select z.id_administracion from salarios_contratados.planillas_salarios z where z.id_planilla_salario = IN_ID_PLANILLA_SALARIO), -- 0,
			(Select z.gestion::integer from salarios_contratados.planillas_salarios z where z.id_planilla_salario = IN_ID_PLANILLA_SALARIO), --2011,
			(Select z.id_mes from salarios_contratados.planillas_salarios z where z.id_planilla_salario = IN_ID_PLANILLA_SALARIO) -- 1
			) g
		where g.id_funcionario = rApariciones.id_funcionario -- 195
		-- Modificación: 2014-02-21 Motivo: Se agregó para ordenar los descuentos judiciales Autor: Lic. Gustavo E. Alcaraz B.
		ORDER BY orden,(id_descuento_aso+id_descuento_judicial) -- Agregado
		--
		LOOP
			-- la variable nImporte_solicitado: guarda el importe del descuento que esta
			-- siendo procesado actualmente, se utiliza esta variable 
			-- por cuestiones de practicidad.
			nImporte_solicitado := desc_de_un_funcionario.monto;
			-- Ponemos a cero la variable que guarda el importe aplicado de este concepto.
			nImporte_aplicado_de_este_concepto := 0 ;
			/*
			f) Aplicar los descuentos a este funcionario
			*/
			-- INICIO - APLICACION DE DESCUENTOS ---------------------------------------
			/*
			d) Sumar el importe_solicitado al
			   importe_solicitado_acumulado.
			*/
			/*
			importe_solicitado_acumulado: esta variable guarda la sumatoria 
			de todos los descuentos solicitados para este funcionario.
			*/
			nImporte_solicitado_acumulado := nImporte_solicitado_acumulado + nImporte_solicitado;
			/*
			e) Verificar que el importe_liquido1 sea mayor a cero.

			f) Verificar que el importe_solicitado sea menor
			   al importe_liquido1.
			*/
			IF (nImporte_liquido1 > 0) THEN
				IF ( nImporte_solicitado < nImporte_liquido1) THEN
				/*
				g) Efectuar lo siguiente: 
				   g.0) importe_solicitado1=importe_solicitado1+importe_solicitado
				   g.1) liquido1 = liquido1 - importe_solicitado 
				   g.2) importe_aplicado_acumulado1 = importe_aplicado_acumulado1+ importe_solicitado
				*/
				/*
				importe_solicitado1: Esta variable guarda la sumatoria de todos 
				los descuentos solicitados al liquido1
				*/
					nImporte_solicitado1 := nImporte_solicitado1 + nImporte_solicitado;
					nImporte_liquido1 := nImporte_liquido1 - nImporte_solicitado;
					nImporte_aplicado_acumulado1 := nImporte_aplicado_acumulado1 + nImporte_solicitado;
                                        nImporte_aplicado_de_este_concepto := nImporte_solicitado;
				ELSE
					/*
					FLUJOS ALTERNATIVOS:
					FA1. En el punto f) si el solicitado es mayor a liquido1 
					     pero menor a liquido2:
					*/
					IF (nImporte_solicitado < nImporte_liquido2) THEN
					/*
					     Realizar el punto g) utilizando el liquido2 
					     y sus variables relacionadas (importe_solicitado2,importe_aplicado_acumulado2)
					     en vez del liquido1.
					*/
						nImporte_solicitado2 := nImporte_solicitado2 + nImporte_solicitado;
						nImporte_liquido2 := nImporte_liquido2 - nImporte_solicitado;
						nImporte_aplicado_acumulado2 := nImporte_aplicado_acumulado2 + nImporte_solicitado;
                                                nImporte_aplicado_de_este_concepto := nImporte_solicitado;
					ELSE
						/*
						FA2. En el punto f) si el solicitado es mayor al liquido1 y liquido2
						     pero menor a (liquido1+liquido2):
						     realizar las siguientes operaciones: 
						*/
						IF (nImporte_solicitado < (nImporte_liquido1 + nImporte_liquido2)) THEN
						/*
						     a) importe_solicitado1=importe_solicitado1+importe_solicitado
						     b) diferencia1=solicitado-liquido1
						     c) importe_aplicado_acumulado1 = importe_aplicado_acumulado1 + liquido1
						     d) liquido1=0
						     e) importe_solicitado2=importe_solicitado2+diferencia1
						     f) liquido2=liquido2-diferencia1
						     g) importe_aplicado_acumulado2 = importe_aplicado_acumulado2 + diferencia1
						*/
							nImporte_solicitado1 := nImporte_solicitado1 + nImporte_solicitado;
							nImporte_diferencia1 := nImporte_solicitado - nImporte_liquido1;
							nImporte_aplicado_acumulado1 := nImporte_aplicado_acumulado1 + nImporte_liquido1;
                                                        nImporte_aplicado_de_este_concepto := nImporte_liquido1;
							nImporte_liquido1 := 0;
							nImporte_solicitado2 := nImporte_solicitado2 + nImporte_diferencia1;
							nImporte_liquido2 := nImporte_liquido2 - nImporte_diferencia1;
							nImporte_aplicado_acumulado2 := nImporte_aplicado_acumulado2 + nImporte_diferencia1;
                                                        nImporte_aplicado_de_este_concepto := nImporte_aplicado_de_este_concepto + nImporte_diferencia1;
						ELSE
						/*
						FA3. En el punto f) si el solicitado es mayor al liquido1, liquido2
						     y (liquido1+liquido2):
						     realizar las siguientes operaciones: 
						     a) importe_solicitado1=importe_solicitado1+importe_solicitado
						     b) diferencia1=solicitado-liquido1
						     c) importe_aplicado_acumulado1 = importe_aplicado_acumulado1 + liquido1
						     d) liquido1=0
						     e) importe_solicitado2=importe_solicitado2+diferencia1
						     f) diferencia2=diferencia1-liquido2
						     g) importe_aplicado_acumulado2 = importe_aplicado_acumulado2 + liquido2
						     h) liquido2=0
						*/
							nImporte_solicitado1 := nImporte_solicitado1 + nImporte_solicitado;
							nImporte_diferencia1 := nImporte_solicitado - nImporte_liquido1;
							nImporte_aplicado_acumulado1 := nImporte_aplicado_acumulado1 + nImporte_liquido1;
                                                        nImporte_aplicado_de_este_concepto := nImporte_liquido1;
							nImporte_liquido1 := 0;
							nImporte_solicitado2 := nImporte_solicitado2 + nImporte_diferencia1;
							nImporte_diferencia2 := nImporte_diferencia1 - nImporte_liquido2;
							nImporte_aplicado_acumulado2 := nImporte_aplicado_acumulado2 + nImporte_liquido2;
							nImporte_liquido2 := 0;
                                                        nImporte_aplicado_de_este_concepto := nImporte_aplicado_de_este_concepto + nImporte_liquido2;

						END IF;
					END IF;
				END IF;
			END IF;
                        -- Insertar los datos en el detalle de la planilla de descuento:

                        -- Insertar / Actualizar los descuentos ya procesados:
                        -- Insertar un registro en el detalle de la planilla de descuentos activa:
                        -- Siempre y cuando exista la planilla de descuento!

                            -- Preparamos los valores:
                            IF desc_de_un_funcionario.id_descuento_judicial = 0 THEN
                                    desc_de_un_funcionario.id_descuento_judicial := NULL;
                            ELSE
                                    desc_de_un_funcionario.id_descuento_aso := NULL;
                            END IF;
                            -- Cuando no existe una planilla de descuento
                            -- el in_id_planilla_descuento = 0.
                            IF (in_id_planilla_descuento !=0 ) THEN
                                    INSERT INTO salarios_contratados.planillas_descuentos_detalles (
                                    id_administracion,
                                    id_funcionario,
                                    id_planilla_descuento,
                                    monto_descuento, --aqui esto es el aplicado!
                                    monto_solicitado,
                                    id_descuento_judicial,
                                    id_descuento_aso,
                                    usu_alta,
                                    fec_alta,
                                    ip_alta
                                    ) VALUES (
                                    rDetallePSA1.id_administracion, -- id_administracion,
                                    rDetallePSA1.id_funcionario, --id_funcionario,
                                    in_id_planilla_descuento, -- id_planilla_descuento,
                                    ((nImporte_aplicado_de_este_concepto)::int)::numeric, -- monto_descuento, --aqui esto es el aplicado!
                                    ((desc_de_un_funcionario.monto)::int)::numeric, -- monto_solicitado,
                                    desc_de_un_funcionario.id_descuento_judicial, --id_descuento_judicial,
                                    desc_de_un_funcionario.id_descuento_aso, --id_descuento_aso,
                                    current_user::varchar(30), -- usu_alta,
                                    now(),
                                    inet_client_addr()::varchar(30) -- ip_alta -- se recibira al llamar al sp?
                                    );

                                    -- Aqui se debe actualizar el saldo pendiente en Judiciales!
                                    IF desc_de_un_funcionario.id_descuento_judicial is not null THEN
					-- verificar si es un descuento por prestacion alimenticia,
					-- en caso afirmativo no realizar la resta:
					Select g.id_judicial
						into id_judicial_cobro_guaranies
					from salarios_contratados.descuentos_judiciales g
						LEFT JOIN salarios.tipos_descuentos h
							ON (g.id_tipo_descuento = h.id_tipo_descuento)
					where g.id_descuento_judicial = desc_de_un_funcionario.id_descuento_judicial
					and h.abreviatura = 'DJCG';
					IF (id_judicial_cobro_guaranies IS NOT NULL) THEN
						   UPDATE salarios_contratados.judiciales
						       SET monto_saldo = (monto_saldo - nImporte_aplicado_de_este_concepto),
							   usu_modi = current_user::varchar(30), fec_modi = now(), ip_modi = inet_client_addr()::varchar(30)
						    WHERE id_judicial = (Select id_judicial
									    from salarios_contratados.descuentos_judiciales
									    where id_descuento_judicial = desc_de_un_funcionario.id_descuento_judicial)
						    ;
					END IF;

                                    END IF;

                            END IF;

			-- FIN    - APLICACION DE DESCUENTOS ---------------------------------------
		END LOOP; -- FIN de los descuentos de este funcionario.
			/*
			g) cargar los datos en el cursor que se utilizara
			   para devolver los datos de salida del detalle 
			   de la planilla de salarios.
			*/
			/*
			Se debe contemplar los casos cuando cantidad = 2
			*/
			-- variables comunes a las dos apariciones:
			id_administracion := rDetallePSA1.id_administracion; -- integer, 
			id_planilla_salario := rDetallePSA1.id_planilla_salario; -- integer, 
			id_funcionario := rDetallePSA1.id_funcionario; -- integer, 

			-- datos de la primera aparicion:
			id_planilla_salario_detalle := rDetallePSA1.id_planilla_salario_detalle; -- integer, 
			id_oficina := rDetallePSA1.id_oficina; -- integer, 
			dias_trabajados := rDetallePSA1.dias_trabajados; -- integer, 
			monto_presupuestado := rDetallePSA1.monto_presupuestado; -- numeric, 
			monto_devengado := rDetallePSA1.monto_devengado; -- numeric, 
			monto_multa := rDetallePSA1.monto_multa; -- numeric, 
			liquido_inicial := rDetallePSA1.liquido_inicial+nImporte_liquido_a_percibir1; -- numeric,

			solicitado := nImporte_solicitado1; -- numeric,
			aplicado := nImporte_aplicado_acumulado1; -- numeric,
			diferencia := nImporte_diferencia1; -- numeric
			liquido_final := nImporte_liquido1+nImporte_liquido_a_percibir1; -- numeric,

                        -- actualizar el detalle de la planilla de salarios:
                        UPDATE salarios_contratados.planillas_salarios_detalles y
                           SET
                               importe_liquido_sin_descuentos_varios = ((rDetallePSA1.liquido_inicial+nImporte_liquido_a_percibir1)::int)::numeric,
                               importe_descuentos_varios_solicitado = ((nImporte_solicitado1)::int)::numeric,
                               importe_descuentos_varios_aplicado = ((nImporte_aplicado_acumulado1)::int)::numeric,
                               importe_descuentos_varios_diferencia = ((nImporte_diferencia1)::int)::numeric,
                             --importe_liquido_con_descuentos_varios = ((nImporte_liquido1::int+nImporte_liquido_a_percibir1::int))::numeric,
                               importe_liquido_con_descuentos_varios =((rDetallePSA1.monto_devengado-rDetallePSA1.monto_iva)::int-(rDetallePSA1.monto_multa)::int)-((nImporte_aplicado_acumulado1)::int)::numeric, -- by jocka 28/01/2016
                               usu_modi = current_user::varchar(30),
                               fec_modi = now(),
                               ip_modi = inet_client_addr()::varchar(30)
                         WHERE y.id_planilla_salario_detalle = rDetallePSA1.id_planilla_salario_detalle;

			RETURN NEXT;

			IF (rApariciones.cantidad = 2) THEN
				-- datos de la SEGUNDA aparicion:
				id_planilla_salario_detalle := rDetallePSA2.id_planilla_salario_detalle; -- integer, 
				id_oficina := rDetallePSA2.id_oficina; -- integer, 
				dias_trabajados := rDetallePSA2.dias_trabajados; -- integer, 
				monto_presupuestado := rDetallePSA2.monto_presupuestado; -- numeric, 
				monto_devengado := rDetallePSA2.monto_devengado; -- numeric, 
				monto_multa := rDetallePSA2.monto_multa; -- numeric, 
				liquido_inicial := rDetallePSA2.liquido_inicial+nImporte_liquido_a_percibir2; -- numeric,
				solicitado := nImporte_solicitado2; -- numeric,
				aplicado := nImporte_aplicado_acumulado2; -- numeric,
				diferencia := nImporte_diferencia2; -- numeric
				liquido_final := nImporte_liquido2+nImporte_liquido_a_percibir2; -- numeric,
                                -- actualizar el detalle de la planilla de salarios:
                                UPDATE salarios_contratados.planillas_salarios_detalles y
                                   SET
                                        importe_liquido_sin_descuentos_varios = ((rDetallePSA2.liquido_inicial+nImporte_liquido_a_percibir2)::int)::numeric,
                                        importe_descuentos_varios_solicitado = ((nImporte_solicitado2)::int)::numeric,
                                        importe_descuentos_varios_aplicado = ((nImporte_aplicado_acumulado2)::int)::numeric,
                                        importe_descuentos_varios_diferencia = ((nImporte_diferencia2)::int)::numeric,
                                      --importe_liquido_con_descuentos_varios = ((nImporte_liquido2::int+nImporte_liquido_a_percibir2::int))::numeric,
					--importe_liquido_con_descuentos_varios = ((rDetallePSA2.monto_devengado-rDetallePSA2.monto_iva)::int-(nImporte_aplicado_acumulado2)::int)-((rDetallePSA2.monto_multa::int))::numeric, -- by jocka 28/01/2016
					importe_liquido_con_descuentos_varios =((rDetallePSA2.monto_devengado-rDetallePSA2.monto_iva)::int-(rDetallePSA2.monto_multa)::int)-((nImporte_aplicado_acumulado2)::int)::numeric, -- by jocka 28/01/2016
                                        usu_modi = current_user::varchar(30),
                                        fec_modi = now(),
                                        ip_modi = inet_client_addr()::varchar(30)
                                 WHERE y.id_planilla_salario_detalle = rDetallePSA2.id_planilla_salario_detalle;

				RETURN NEXT;
			END IF;


	END LOOP; -- FIN de este funcionario - rApariciones 

/*
	h) Al finalizar recorrer el cursor de salida y 
	   retornar los datos al cliente.

*/

/*
		h) guardar los descuentos aplicados (detalle)
		   y cambiar el estado a la cabecera a "PROCESADO".

		i) actualizar el detalle de la planilla de salario
		   con los importes actuales.

		j) actualizar el estado de la planilla de salario a:
		   "CON DESCUENTOS APLICADOS"

*/

-- ESTO SE HACE UNA SOLA VEZ PARA LA EJECUCION DE ESTA FUNCION

-- actualizar plla de descuentos (cabecera)
-- Cuando no existe una planilla de descuento
-- el in_id_planilla_descuento = 0.
IF (in_id_planilla_descuento !=0 ) THEN
	UPDATE salarios_contratados.planillas_descuentos
	   SET estado = 1, -- procesado
	       total_importe_solicitado = coalesce((Select sum(monto_solicitado)
					 from salarios_contratados.planillas_descuentos_detalles
					 where id_planilla_descuento = in_id_planilla_descuento
					),0),
	       total_descuento = coalesce((Select sum(monto_descuento)
					 from salarios_contratados.planillas_descuentos_detalles
					 where id_planilla_descuento = in_id_planilla_descuento
					),0),
	       usu_modi = current_user::varchar(30), fec_modi = now(), ip_modi = inet_client_addr()::varchar(30)
	 WHERE id_planilla_descuento = in_id_planilla_descuento;

-- actualizar descuentos_aso y descuentos_judiciales estado=1
-- de esta planilla de descuentos:
	UPDATE salarios_contratados.descuentos_aso
	   SET estado = 1, -- procesado
		usu_modi = current_user::varchar(30), fec_modi = now(), ip_modi = inet_client_addr()::varchar(30)
	 WHERE id_descuento_aso in (
					Select id_descuento_aso
					from salarios_contratados.planillas_descuentos_detalles
					where id_planilla_descuento = in_id_planilla_descuento
					and id_descuento_aso is not null
				)
	;

	UPDATE salarios_contratados.descuentos_judiciales
	   SET estado = 1, -- procesado
		usu_modi = current_user::varchar(30), fec_modi = now(), ip_modi = inet_client_addr()::varchar(30)
	 WHERE id_descuento_judicial in (
					 Select id_descuento_judicial
					from salarios_contratados.planillas_descuentos_detalles
					where id_planilla_descuento = in_id_planilla_descuento
						and id_descuento_judicial is not null
					)
	;

END IF;

-- actualizar plla de salarios
-- Estado 3 = CON DESCUENTOS APLICADOS
UPDATE salarios_contratados.planillas_salarios x
   SET id_estado = 3,
              usu_modi = current_user::varchar(30), fec_modi = now(), ip_modi = inet_client_addr()::varchar(30)
 WHERE x.id_planilla_salario = in_id_planilla_salario;

ELSE
	RAISE EXCEPTION 'NO EXISTE PLANILLA DE DESCUENTOS VINCULADA A ESTA PLANILLA DE SALARIO';
END IF;

END;
]]></definition>
</function>

<function name="aplicar_horas_no_compensadas_contratados"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="1000">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<parameter name="id_funcionario_hnc">
		<type name="integer"/>
	</parameter>
	<parameter name="descontado_hnc">
		<type name="text"/>
	</parameter>
	</return-type>
	<parameter name="in_id_planilla_salario" in="true">
		<type name="integer"/>
	</parameter>
	<definition><![CDATA[
DECLARE
-- --------------------------------------------------------------------------------------
-- Para emitir notificaciones de depuracion:
   bDebug boolean := true;
   tNombre_funcion text := '[salarios_contratados.aplicar_horas_no_compensadas_contratados(IN IN_ID_PLANILLA_SALARIO integer)]';
-- --------------------------------------------------------------------------------------   
-- Almacena la estructura de filas obtenido a partir de la funcion de calculo de multas por horas no compensadas:
   rHorasNoCompensadasCalculadas RECORD;
-- --------------------------------------------------------------------------------------   
-- Variable para determinar si existe registros de funcionarios con horas no compesadas con estado CREADO (0) Y
-- para registrar si se pudo o no descontar:
   cantidad_registros_hnc integer;
   descontado text := ''::text;
-- --------------------------------------------------------------------------------------
BEGIN
-- --------------------------------------------------------------------------------------
--   Objetivo: Aplicar multas por horas no compensadas a funcionarios contratados.
--     Creado: 16/09/2016 09:39:50
-- Modificado: 16/09/2016 13:53:15
--      Autor: Lic. Gustavo Eloy Alcaráz Bogado
-- --------------------------------------------------------------------------------------
   SELECT 
      count(id_hora_no_compensada) as registros
   INTO
      cantidad_registros_hnc
   FROM 
      salarios_contratados.horas_no_compensadas hnc
   WHERE
      estado=0;

   IF (bDebug IS TRUE) THEN
        RAISE  NOTICE 'FUNCION: %',tNombre_funcion;
	RAISE  NOTICE 'REGISTROS AFECTADOS: %',cantidad_registros_hnc;
	RAISE  NOTICE '';
   END IF;

   IF (cantidad_registros_hnc>0) THEN
      -- --------------------------------------------------------------------------------------
      -- Obtenemos los datos a partir de la función 
      -- salarios_contratados.calcular_aplicacion_horas_no_compensadas_contratados(IN_ID_PLANILLA_SALARIO);
      -- --------------------------------------------------------------------------------------
        FOR rHorasNoCompensadasCalculadas IN
		SELECT 
		   id_planilla_salario, 
		   id_detalle_planilla_salario, 
		   id_funcionario, 
		   monto_presupuestado, 
		   monto_devengado, 
		   --monto_aporte, 
		   monto_multa, 
		   --monto_total_aporte, 
		   importe_liquido_sin_descuentos_varios, 
		   horas_hnc, -- 1
		   monto_hora_hnc,
		   monto_total_hnc, -- 2
		   monto_hnc_descontable, 
		   monto_multa_hnc, -- 3 
		   --monto_total_aporte_hnc, -- 4 
		   importe_liquido_sin_descuentos_varios_hnc -- 5
		FROM salarios_contratados.calcular_aplicacion_horas_no_compensadas_contratados(IN_ID_PLANILLA_SALARIO)
	LOOP
	   id_funcionario_hnc:=rHorasNoCompensadasCalculadas.id_funcionario;
	   descontado:='NO'::text;
	   -- --------------------------------------------------------------------------------------
	   -- VERIFICA SI SE PUEDE DESCONTAR EL REGISTRO ENCONTRADO
	   IF(rHorasNoCompensadasCalculadas.monto_hnc_descontable=1) THEN
              -- --------------------------------------------------------------------------------------
	      -- ACTUALIZA LA TABLA salarios_contratados.detalles_planillas_salarios_contratados
	      UPDATE salarios_contratados.planillas_salarios_detalles
              SET 
                 horas_no_compensadas = rHorasNoCompensadasCalculadas.horas_hnc, -- 1
                 monto_horas_no_compensadas = rHorasNoCompensadasCalculadas.monto_total_hnc, -- 2
	         monto_multa = rHorasNoCompensadasCalculadas.monto_multa_hnc, -- 3
	         --monto_total_aporte = rHorasNoCompensadasCalculadas.monto_total_aporte_hnc, -- 4 
                 importe_liquido_sin_descuentos_varios = rHorasNoCompensadasCalculadas.importe_liquido_sin_descuentos_varios_hnc, -- 5 
                 usu_modi=current_user::varchar(30), 
                 fec_modi=now(), 
                 ip_modi=inet_client_addr()::varchar(30)
              WHERE 
                 id_planilla_salario_detalle = rHorasNoCompensadasCalculadas.id_detalle_planilla_salario;
              -- --------------------------------------------------------------------------------------   
              -- ACTUALIZA LA TABLA salarios_contratados.horas_no_compensadas
              UPDATE salarios_contratados.horas_no_compensadas
              SET
                 id_detalle_planilla_salario = rHorasNoCompensadasCalculadas.id_detalle_planilla_salario,
	         estado = 1,
                 usu_modi=current_user::varchar(30), 
                 fec_modi=now(), 
                 ip_modi=inet_client_addr()::varchar(30)
              WHERE 
                 id_funcionario = rHorasNoCompensadasCalculadas.id_funcionario AND estado=0;
              -- --------------------------------------------------------------------------------------   
              descontado:='SI'::text;
           END IF;
           -- --------------------------------------------------------------------------------------
           -- VISUALIZA VALORES RETORNADOS POR LA FUNCION EJECUTADA
           IF (bDebug IS TRUE) THEN
      	      RAISE  NOTICE 'id_funcionario: %',rHorasNoCompensadasCalculadas.id_funcionario;
      	      RAISE  NOTICE 'descontable: %',descontado;
	      RAISE  NOTICE 'id_detalle_planilla_salario: %',rHorasNoCompensadasCalculadas.id_detalle_planilla_salario;
	      RAISE  NOTICE 'horas_hnc: %',rHorasNoCompensadasCalculadas.horas_hnc;
	      RAISE  NOTICE 'monto_total_hnc: %',rHorasNoCompensadasCalculadas.monto_total_hnc;
	      RAISE  NOTICE 'monto_multa_hnc: %',rHorasNoCompensadasCalculadas.monto_multa_hnc;
	      --RAISE  NOTICE 'monto_total_aporte_hnc: %',rHorasNoCompensadasCalculadas.monto_total_aporte_hnc;
	      RAISE  NOTICE 'importe_liquido_sin_descuentos_varios_hnc: %',rHorasNoCompensadasCalculadas.importe_liquido_sin_descuentos_varios_hnc;
	      RAISE  NOTICE '';
	   END IF;
	   -- --------------------------------------------------------------------------------------
	   -- RETORNA VALORES DE LA FUNCION ACTUAL 
           id_funcionario_hnc := rHorasNoCompensadasCalculadas.id_funcionario;
	   descontado_hnc := descontado;
	   -- --------------------------------------------------------------------------------------
	   RETURN NEXT;
	END LOOP;
   ELSE
      RAISE NOTICE 'NO EXISTE REGISTRO DE MULTAS DE FUNCIONARIOS CON HORAS NO COMPENSADAS';
   END IF;

END;
]]></definition>
</function>

<function name="aplicar_multas_contratados"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="1000">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<parameter name="out_id_planilla_salario_detalle">
		<type name="integer"/>
	</parameter>
	<parameter name="out_id_planilla_salario">
		<type name="integer"/>
	</parameter>
	<parameter name="out_id_funcionario">
		<type name="integer"/>
	</parameter>
	<parameter name="out_monto_presupuestado">
		<type name="numeric"/>
	</parameter>
	<parameter name="out_monto_devengado">
		<type name="numeric"/>
	</parameter>
	<parameter name="out_importe_liquido_sin_multa">
		<type name="numeric"/>
	</parameter>
	<parameter name="out_importe_multa_solicitada">
		<type name="numeric"/>
	</parameter>
	<parameter name="out_importe_multa_aplicada">
		<type name="numeric"/>
	</parameter>
	<parameter name="out_importe_multa_diferencia">
		<type name="numeric"/>
	</parameter>
	<parameter name="out_importe_liquido_con_multa">
		<type name="numeric"/>
	</parameter>
	<parameter name="out_id_multa_solicitada_detalle">
		<type name="integer"/>
	</parameter>
	</return-type>
	<parameter name="in_id_planilla_salario" in="true">
		<type name="integer"/>
	</parameter>
	<definition><![CDATA[
DECLARE
-- rdps= detallePlanillaSalario
    rDps RECORD;
-- rMultas = multas solicitadas
    rMultas RECORD;
-- registro obtenido a partir de la funcion de calculo de aplicación de multas
    rMultasCalculadas RECORD;

    aplicado_no_acumulado numeric;
    iId_multa_aplicada integer;
    iId_multa_solicitada integer;
    iId_administracion integer;
BEGIN
-- Objetivo: Aplicar multas a funcionarios contratados.
-- Fecha: 2012-09-27

-- Se obtiene el ID de la planilla de multas aplicadas para esta plla de salario.
-- si no existe se cancela la operacion.-
	Select z.id_multa_aplicada, 
		z.id_multa_solicitada, 
		z.id_administracion 
	into    iId_multa_aplicada, 
		iId_multa_solicitada, 
		iId_administracion
	from salarios_contratados.multas_aplicadas z 
	where z.id_planilla_salario = IN_ID_PLANILLA_SALARIO 
		and z.estado = 0;
IF (iId_multa_aplicada IS NOT NULL) THEN


-- -------------------------------------------------------------------------
-- Obtenemos los datos a partir de la función 
-- salarios_contratados.calcular_aplicacion_multas_contratados(IN_ID_PLANILLA_SALARIO);
-- -------------------------------------------------------------------------
	FOR rMultasCalculadas IN
		SELECT 
			* 
		FROM salarios_contratados.calcular_aplicacion_multas_contratados(IN_ID_PLANILLA_SALARIO)
	LOOP
	    -- Cargar variables de salida!

		out_id_planilla_salario_detalle :=rMultasCalculadas.out_id_planilla_salario_detalle;
		out_id_planilla_salario :=rMultasCalculadas.out_id_planilla_salario;
		out_id_funcionario :=rMultasCalculadas.out_id_funcionario;

		out_monto_presupuestado :=rMultasCalculadas.out_monto_presupuestado;
		out_monto_devengado :=rMultasCalculadas.out_monto_devengado;
		--out_monto_aporte :=rMultasCalculadas.out_monto_aporte; --jubilacion

		out_importe_liquido_sin_multa :=rMultasCalculadas.out_importe_liquido_sin_multa;
		out_importe_multa_solicitada :=rMultasCalculadas.out_importe_multa_solicitada;
		out_importe_multa_aplicada :=rMultasCalculadas.out_importe_multa_aplicada;
		out_importe_multa_diferencia :=rMultasCalculadas.out_importe_multa_diferencia;
		out_importe_liquido_con_multa :=rMultasCalculadas.out_importe_liquido_con_multa;
		--out_monto_total_aporte :=rMultasCalculadas.out_monto_total_aporte; --- jubilacion + diferencia del (presupuestado-devengado) + multa
		out_id_multa_solicitada_detalle := rMultasCalculadas.out_id_multa_solicitada_detalle;
		-- ------------------------------------------------------------

	    -- Insertar / Actualizar las multas ya procesados:
	    -- Insertar un registro en el detalle de la planilla de multas aplicadas activa:
	    -- Siempre y cuando exista la planilla de multas aplicadas!
		
		-- Cuando no existe una planilla de multas aplicadas 
		-- el iId_multas_aplicadas = 0.

		IF (iId_multa_aplicada !=0 ) THEN
			INSERT INTO salarios_contratados.multas_aplicadas_detalles
			(id_multa_aplicada, 
			id_administracion, 
			id_funcionario, 
			id_multa_solicitada_detalle, 
			importe_solicitado, 
			importe_aplicado, 
			importe_diferencia, 
			usu_alta, 
			fec_alta, 
			ip_alta)
		    VALUES 	
			(iId_multa_aplicada, 
			iId_administracion, 
			out_id_funcionario, 
			out_id_multa_solicitada_detalle, 
			out_importe_multa_solicitada, 
			out_importe_multa_aplicada, 
			out_importe_multa_diferencia, 
			current_user::varchar(30), -- usu_alta,
			now(),
			inet_client_addr()::varchar(30) -- ip_alta -- ¿se recibira al llamar al sp?
			);
		END IF;
		-- actualizar el detalle de la planilla de salarios:
		/*UPDATE salarios_contratados.detalles_planillas_salarios
		   SET 
			monto_multa = out_importe_multa_aplicada,
			--monto_total_aporte=out_monto_total_aporte, 
		       importe_liquido_sin_descuentos_varios = out_importe_liquido_con_multa, 
		       usu_modi = current_user::varchar(30), 
		       fec_modi = now(), 
		       ip_modi = inet_client_addr()::varchar(30)
		 WHERE id_detalle_planilla_salario = out_id_detalle_planilla_salario;*/

		RETURN NEXT;
	END LOOP;


-- -------------------------------------------------------------------------

-- actualizar plla de multas aplicadas(cabecera)
-- Cuando no existe una planilla de multas aplicadas
-- el iId_multas_aplicadas = 0.

IF (iId_multa_aplicada !=0 ) THEN
	UPDATE salarios_contratados.multas_aplicadas
	   SET estado = 1, -- 1 = procesado
		usu_modi = current_user::varchar(30), 
		fec_modi = now(),
		ip_modi = inet_client_addr()::varchar(30)
	 WHERE id_multa_aplicada = iId_multa_aplicada;
        
        -- bloqueamos las multas solicitadas (porque ya fueron utilizadas)
	UPDATE salarios_contratados.multas_solicitadas
	   SET estado = 1,  -- 1 = procesado!
	       usu_modi = current_user::varchar(30),
	       fec_modi = now(),
	       ip_modi = inet_client_addr()::varchar(30)
	 WHERE id_multa_solicitada=iId_multa_solicitada;

END IF;

-- actualizar plla de salarios
-- Estado 4 = CON MULTAS APLICADAS
UPDATE salarios_contratados.planillas_salarios
   SET id_estado = 4, 
              usu_modi = current_user::varchar(30),
              fec_modi = now(),
              ip_modi = inet_client_addr()::varchar(30)
 WHERE id_planilla_salario = in_id_planilla_salario;
 -- MULTAS POR HORAS NO COMPENSADAS
-- 11.10.2016 10:00
-- Se agrega llamada a la función aplicar_horas_no_compensadas_contratados
PERFORM salarios_contratados.aplicar_horas_no_compensadas_contratados(IN_ID_PLANILLA_SALARIO);
ELSE
	RAISE EXCEPTION 'NO EXISTE PLANILLA DE MULTAS APLICADAS VINCULADA A ESTA PLANILLA DE SALARIO';
END IF;

END;
]]></definition>
</function>

<function name="calcular_aplicacion_descuentos_varios_contratados"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="1000">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<comment><![CDATA[Utilizado desde el 2012-ago-09: Esta es la función para calcular la aplicación de descuentos varios a un funcionario.-]]></comment>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<parameter name="id_planilla_salario_detalle">
		<type name="integer"/>
	</parameter>
	<parameter name="id_administracion">
		<type name="integer"/>
	</parameter>
	<parameter name="id_planilla_salario">
		<type name="integer"/>
	</parameter>
	<parameter name="id_funcionario">
		<type name="integer"/>
	</parameter>
	<parameter name="id_oficina">
		<type name="integer"/>
	</parameter>
	<parameter name="dias_trabajados">
		<type name="integer"/>
	</parameter>
	<parameter name="monto_presupuestado">
		<type name="numeric"/>
	</parameter>
	<parameter name="monto_devengado">
		<type name="numeric"/>
	</parameter>
	<parameter name="monto_iva">
		<type name="numeric"/>
	</parameter>
	<parameter name="monto_multa">
		<type name="numeric"/>
	</parameter>
	<parameter name="liquido_inicial">
		<type name="numeric"/>
	</parameter>
	<parameter name="liquido_final">
		<type name="numeric"/>
	</parameter>
	<parameter name="solicitado">
		<type name="numeric"/>
	</parameter>
	<parameter name="aplicado">
		<type name="numeric"/>
	</parameter>
	<parameter name="diferencia">
		<type name="numeric"/>
	</parameter>
	</return-type>
	<parameter name="in_id_planilla_salario" in="true">
		<type name="integer"/>
	</parameter>
	<definition><![CDATA[
DECLARE

/*
Fecha: 14-11-2012
===========================================
Especificacion de CU para aplicar descuentos varios
a funcionarios con ascensos en un mes:
(contempla la solucion al ticket #480)
(funcionarios que aparecen
dos veces en la planilla de salario):

Flujo Basico:

a) Identificar la cantidad de veces que aparece el funcionario en 
   la planilla de salarios que se esta procesando.

b) Obtener los importes liquido1 y si la cantidad = 2 tambien el
    importe del liquido2 de este funcionario.

c) Obtener los descuentos del funcionario activo y por cada uno 
   de ellos realizar lo siguiente:

d) Sumar el importe_solicitado actual al
   importe_solicitado_acumulado.

e) Verificar que el importe_liquido1 sea mayor a cero.

f) Verificar que el importe_solicitado sea menor
   al importe_liquido1.

g) Efectuar lo siguiente: 
   g.0) importe_solicitado1=importe_solicitado1+importe_solicitado
   g.1) liquido1 = liquido1 - importe_solicitado 
   g.2) importe_aplicado_acumulado1 = importe_aplicado_acumulado1+ importe_solicitado


h) guardar los descuentos aplicados (detalle)
   y cambiar el estado a la cabecera a "PROCESADO".

i) actualizar el detalle de la planilla de salario
   con los importes actuales.

j) actualizar el estado de la planilla de salario a:
   "CON DESCUENTOS APLICADOS"

FLUJOS ALTERNATIVOS:
FA1. En el punto f) si el solicitado es mayor a liquido1 
     pero menor a liquido2:
     Realizar el punto g) utilizando el liquido2 
     y sus variables relacionadas (importe_solicitado2,importe_aplicado_acumulado2)
     en vez del liquido1.

FA2. En el punto f) si el solicitado es mayor al liquido1 y liquido2
     pero menor a (liquido1+liquido2):
     realizar las siguientes operaciones: 
     a) importe_solicitado1=importe_solicitado1+importe_solicitado
     b) diferencia1=solicitado-liquido1
     c) importe_aplicado_acumulado1 = importe_aplicado_acumulado1 + liquido1
     d) liquido1=0
     e) importe_solicitado2=importe_solicitado2+diferencia1
     f) liquido2=liquido2-diferencia1
     g) importe_aplicado_acumulado2 = importe_aplicado_acumulado2 + diferencia1

FA3. En el punto f) si el solicitado es mayor al liquido1, liquido2
     y (liquido1+liquido2):
     realizar las siguientes operaciones: 
     a) importe_solicitado1=importe_solicitado1+importe_solicitado
     b) diferencia1=solicitado-liquido1
     c) importe_aplicado_acumulado1 = importe_aplicado_acumulado1 + liquido1
     d) liquido1=0
     e) importe_solicitado2=importe_solicitado2+diferencia1
     f) diferencia2=diferencia1-liquido2
     g) importe_aplicado_acumulado2 = importe_aplicado_acumulado2 + liquido2
     h) liquido2=0


*/

/*
Algoritmo de la funcion:
a) Identificar la cantidad de veces que aparece 
   cada funcionario en el detalle de la planilla de salarios 
   que se esta procesando.
b) Por cada funcionario realizar lo siguiente:
c) Obtener para este funcionario los importes liquido1 
    y si la cantidad = 2 
    tambien el importe del liquido2 junto a todos los demï¿½s datos
    del detalle de la planilla de salarios.
d) obtener los descuentos de este funcionario
f) Aplicar los descuentos a este funcionario
g) cargar los datos en el cursor que se utilizara
   para devolver los datos de salida del detalle 
   de la planilla de salarios.
h) Al finalizar recorrer el cursor de salida y 
   retornar los datos al cliente.

*/

-- cantidad de apariciones del funcionario en el detalle 
-- de la planilla de salarios.
    rApariciones RECORD;

-- Cursor utilizado cuando apariciones = 2
    cDetallePSA2 refcursor;

-- un registro del cursor
    rDetallePSA1 RECORD;
    rDetallePSA2 RECORD;

-- variables para los importes liquidos sin descuentos:
    nImporte_liquido1 numeric := 0;
    nImporte_liquido2 numeric := 0;

-- desc_de_un_funcionario : Este registro almacena un descuento
-- del funcionario activo
    desc_de_un_funcionario RECORD;

    -- la variable nImporte_solicitado: guarda el importe del descuento que esta
    -- siendo procesado actualmente, se utiliza esta variable
    -- por cuestiones de practicidad.
    nImporte_solicitado numeric := 0;

    -- importe_solicitado_acumulado: esta variable guarda la sumatoria
    -- de todos los descuentos solicitados para este funcionario.
    nImporte_solicitado_acumulado numeric := 0;

    nImporte_solicitado1 numeric := 0;
    nImporte_aplicado_acumulado1 numeric := 0;
    nImporte_diferencia1 numeric := 0;

    nImporte_solicitado2 numeric := 0;
    nImporte_aplicado_acumulado2 numeric := 0;
    nImporte_diferencia2 numeric := 0;

-- FIN --
-- Cursor utilizado para armar el resultado a ser devuelto al cliente:
--    cDetallePllaSalarioOUT refcursor;

BEGIN
/*
a) Identificar la cantidad de veces que aparece 
   cada funcionario en el detalle de la planilla de salarios 
   que se esta procesando.
*/
	FOR rApariciones IN
		SELECT 
			a.id_funcionario, 
			count(*) as cantidad
		FROM salarios_contratados.planillas_salarios_detalles a
		      left join salarios_contratados.planillas_salarios b 
			   on (a.id_planilla_salario = b.id_planilla_salario)
		WHERE b.id_estado = 4 -- 4 es CON MULTAS APLICADAS
		      and b.id_planilla_salario = IN_ID_PLANILLA_SALARIO 
		group by a.id_funcionario
	LOOP
		-- limpiar las variables utilizadas por este funcionario:
		    nImporte_liquido1 := 0;
		    nImporte_liquido2 := 0;
		    nImporte_solicitado := 0;

		    nImporte_solicitado_acumulado := 0;

		    nImporte_solicitado1 := 0;
		    nImporte_aplicado_acumulado1 := 0;
		    nImporte_diferencia1 := 0;

		    nImporte_solicitado2 := 0;
		    nImporte_aplicado_acumulado2 := 0;
		    nImporte_diferencia2 := 0;
		-- fin de limpieza de variables.
	/*
	b) Por cada funcionario realizar lo siguiente:
	c) Obtener para este funcionario los importes liquido1 
	    y si la cantidad = 2 
	    tambien el importe del liquido2 junto a todos los demas datos
	    del detalle de la planilla de salarios.
	*/

	OPEN cDetallePSA2 SCROLL FOR 
		SELECT 
			a.id_planilla_salario_detalle, 
			a.id_administracion, 
			a.id_planilla_salario, 
			a.id_funcionario, 
			a.id_oficina, 
			a.dias_trabajados, 
			a.monto_presupuestado, 
			a.monto_devengado, 
			a.monto_iva, 
			a.monto_multa,
			--a.monto_total_aporte,
			CASE WHEN a.monto_devengado > 0::numeric THEN (a.monto_devengado - (a.monto_iva+a.monto_iva))::numeric ELSE 0::numeric END AS "liquido_inicial",
			CASE WHEN a.monto_devengado > 0::numeric THEN (a.monto_devengado - (a.monto_iva+a.monto_iva))::numeric ELSE 0::numeric END AS "liquido_final"
			,(0::numeric) as "solicitado"
			,(0::numeric) as "aplicado"
			,(0::numeric) as "diferencia" -- diferencia = (solicitado-aplicado):

		FROM salarios_contratados.planillas_salarios_detalles a
		      left join salarios_contratados.planillas_salarios b 
			   on (a.id_planilla_salario = b.id_planilla_salario)
		WHERE -- b.id_administracion = 0
		      -- and b.gestion = 2011
		      -- and b.id_mes = 1 
		      -- and 
		      b.id_estado = 4 -- 4 = con multas aplicadas!.
		      and b.id_planilla_salario = in_id_planilla_salario -- 5
		      and a.id_funcionario = rApariciones.id_funcionario
		ORDER BY a.monto_presupuestado ASC;

	-- Asumimos que un funcionario aparece como maximo 2 veces!!!
	FETCH NEXT FROM cDetallePSA2 INTO rDetallePSA1;
	-- Obtenemos el importe_liquido1:
	nImporte_liquido1 := rDetallePSA1.liquido_inicial;
	IF (rApariciones.cantidad = 2 ) THEN
		FETCH NEXT FROM cDetallePSA2 INTO rDetallePSA2;
		-- Obtenemos el importe_liquido2:
		nImporte_liquido2 := rDetallePSA2.liquido_inicial;
	END IF;

	CLOSE cDetallePSA2;

	/*
	d) obtener los descuentos de este funcionario
	*/
	FOR desc_de_un_funcionario IN 
		Select 
			g.id_funcionario,
			g.monto,
			g.ejecutado,
			g.id_tipo_descuento,
			g.id_descuento_aso,
			g.id_descuento_judicial,
			g.id_judicial,
			g.orden,
			g.aso 
		from salarios_contratados.obtener_descuentos_varios_contratados(
			(Select z.id_administracion from salarios_contratados.planillas_salarios z where z.id_planilla_salario =in_id_planilla_salario ), -- 0, 
			(Select z.gestion::integer from salarios_contratados.planillas_salarios z where z.id_planilla_salario =in_id_planilla_salario ), --2011,
			(Select z.id_mes from salarios_contratados.planillas_salarios z where z.id_planilla_salario =in_id_planilla_salario ) -- 1
			) g
		where g.id_funcionario= rApariciones.id_funcionario -- 195
		-- Modificación: 2014-02-21 Motivo: Se agregó para ordenar los descuentos judiciales Autor: Lic. Gustavo E. Alcaraz B.
		ORDER BY orden,(id_descuento_aso+id_descuento_judicial) -- Agregado
		--
		LOOP
			-- la variable nImporte_solicitado: guarda el importe del descuento que esta
			-- siendo procesado actualmente, se utiliza esta variable 
			-- por cuestiones de practicidad.
			nImporte_solicitado := desc_de_un_funcionario.monto;
			/*
			f) Aplicar los descuentos a este funcionario
			*/
			-- INICIO - APLICACION DE DESCUENTOS ---------------------------------------
			/*
			d) Sumar el importe_solicitado al
			   importe_solicitado_acumulado.
			*/
			/*
			importe_solicitado_acumulado: esta variable guarda la sumatoria 
			de todos los descuentos solicitados para este funcionario.
			*/
			nImporte_solicitado_acumulado := nImporte_solicitado_acumulado + nImporte_solicitado;
			/*
			e) Verificar que el importe_liquido1 sea mayor a cero.

			f) Verificar que el importe_solicitado sea menor
			   al importe_liquido1.
			*/
			IF (nImporte_liquido1 > 0) THEN
				IF ( nImporte_solicitado < nImporte_liquido1) THEN
				/*
				g) Efectuar lo siguiente: 
				   g.0) importe_solicitado1=importe_solicitado1+importe_solicitado
				   g.1) liquido1 = liquido1 - importe_solicitado 
				   g.2) importe_aplicado_acumulado1 = importe_aplicado_acumulado1+ importe_solicitado
				*/
				/*
				importe_solicitado1: Esta variable guarda la sumatoria de todos 
				los descuentos solicitados al liquido1
				*/
					nImporte_solicitado1 := nImporte_solicitado1 + nImporte_solicitado;
					nImporte_liquido1 := nImporte_liquido1 - nImporte_solicitado;
					nImporte_aplicado_acumulado1 := nImporte_aplicado_acumulado1 + nImporte_solicitado;
				ELSE
					/*
					FLUJOS ALTERNATIVOS:
					FA1. En el punto f) si el solicitado es mayor a liquido1 
					     pero menor a liquido2:
					*/
					IF (nImporte_solicitado < nImporte_liquido2) THEN
					/*
					     Realizar el punto g) utilizando el liquido2 
					     y sus variables relacionadas (importe_solicitado2,importe_aplicado_acumulado2)
					     en vez del liquido1.
					*/
						nImporte_solicitado2 := nImporte_solicitado2 + nImporte_solicitado;
						nImporte_liquido2 := nImporte_liquido2 - nImporte_solicitado;
						nImporte_aplicado_acumulado2 := nImporte_aplicado_acumulado2 + nImporte_solicitado;
					ELSE
						/*
						FA2. En el punto f) si el solicitado es mayor al liquido1 y liquido2
						     pero menor a (liquido1+liquido2):
						     realizar las siguientes operaciones: 
						*/
						IF (nImporte_solicitado < (nImporte_liquido1 + nImporte_liquido2)) THEN
						/*
						     a) importe_solicitado1=importe_solicitado1+importe_solicitado
						     b) diferencia1=solicitado-liquido1
						     c) importe_aplicado_acumulado1 = importe_aplicado_acumulado1 + liquido1
						     d) liquido1=0
						     e) importe_solicitado2=importe_solicitado2+diferencia1
						     f) liquido2=liquido2-diferencia1
						     g) importe_aplicado_acumulado2 = importe_aplicado_acumulado2 + diferencia1
						*/
							nImporte_solicitado1 := nImporte_solicitado1 + nImporte_solicitado;
							nImporte_diferencia1 := nImporte_solicitado - nImporte_liquido1;
							nImporte_aplicado_acumulado1 := nImporte_aplicado_acumulado1 + nImporte_liquido1;
							nImporte_liquido1 := 0;
							nImporte_solicitado2 := nImporte_solicitado2 + nImporte_diferencia1;
							nImporte_liquido2 := nImporte_liquido2 - nImporte_diferencia1;
							nImporte_aplicado_acumulado2 := nImporte_aplicado_acumulado2 + nImporte_diferencia1;
						ELSE
						/*
						FA3. En el punto f) si el solicitado es mayor al liquido1, liquido2
						     y (liquido1+liquido2):
						     realizar las siguientes operaciones: 
						     a) importe_solicitado1=importe_solicitado1+importe_solicitado
						     b) diferencia1=solicitado-liquido1
						     c) importe_aplicado_acumulado1 = importe_aplicado_acumulado1 + liquido1
						     d) liquido1=0
						     e) importe_solicitado2=importe_solicitado2+diferencia1
						     f) diferencia2=diferencia1-liquido2
						     g) importe_aplicado_acumulado2 = importe_aplicado_acumulado2 + liquido2
						     h) liquido2=0
						*/
							nImporte_solicitado1 := nImporte_solicitado1 + nImporte_solicitado;
							nImporte_diferencia1 := nImporte_solicitado - nImporte_liquido1;
							nImporte_aplicado_acumulado1 := nImporte_aplicado_acumulado1 + nImporte_liquido1;
							nImporte_liquido1 := 0;
							nImporte_solicitado2 := nImporte_solicitado2 + nImporte_diferencia1;
							nImporte_diferencia2 := nImporte_diferencia1 - nImporte_liquido2;
							nImporte_aplicado_acumulado2 := nImporte_aplicado_acumulado2 + nImporte_liquido2;
							nImporte_liquido2 := 0;

						END IF;
					END IF;
				END IF;
			END IF;
			-- FIN    - APLICACION DE DESCUENTOS ---------------------------------------
		END LOOP; -- FIN de los descuentos de este funcionario.
			/*
			g) cargar los datos en el cursor que se utilizara
			   para devolver los datos de salida del detalle 
			   de la planilla de salarios.
			*/
			/*
			Se debe contemplar los casos cuando cantidad = 2
			*/
			-- variables comunes a las dos apariciones:
			id_administracion := rDetallePSA1.id_administracion; -- integer, 
			id_planilla_salario := rDetallePSA1.id_planilla_salario; -- integer, 
			id_funcionario := rDetallePSA1.id_funcionario; -- integer, 

			-- datos de la primera aparicion:
			id_planilla_salario_detalle := rDetallePSA1.id_planilla_salario_detalle; -- integer, 
			id_oficina := rDetallePSA1.id_oficina; -- integer, 
			dias_trabajados := rDetallePSA1.dias_trabajados; -- integer, 
			monto_presupuestado := rDetallePSA1.monto_presupuestado; -- numeric, 
			monto_devengado := rDetallePSA1.monto_devengado; -- numeric, 
			monto_iva := rDetallePSA1.monto_iva; -- numeric, 
			monto_multa := rDetallePSA1.monto_multa; -- numeric, 
			--monto_total_aporte := rDetallePSA1.monto_total_aporte; -- numeric,
			liquido_inicial := rDetallePSA1.liquido_inicial; -- numeric,

			solicitado := nImporte_solicitado1; -- numeric,
			aplicado := nImporte_aplicado_acumulado1; -- numeric,
			diferencia := nImporte_diferencia1; -- numeric
			liquido_final := nImporte_liquido1; -- numeric,

			RETURN NEXT;

			IF (rApariciones.cantidad = 2) THEN
				-- datos de la SEGUNDA aparicion:
				id_planilla_salario_detalle := rDetallePSA2.id_planilla_salario_detalle; -- integer, 
				id_oficina := rDetallePSA2.id_oficina; -- integer, 
				dias_trabajados := rDetallePSA2.dias_trabajados; -- integer, 
				monto_presupuestado := rDetallePSA2.monto_presupuestado; -- numeric, 
				monto_devengado := rDetallePSA2.monto_devengado; -- numeric, 
				monto_iva := rDetallePSA2.monto_iva; -- numeric, 
				monto_multa := rDetallePSA2.monto_multa; -- numeric, 
				--monto_total_aporte := rDetallePSA2.monto_total_aporte; -- numeric,
				liquido_inicial := rDetallePSA2.liquido_inicial; -- numeric,

				solicitado := nImporte_solicitado2; -- numeric,
				aplicado := nImporte_aplicado_acumulado2; -- numeric,
				diferencia := nImporte_diferencia2; -- numeric
				liquido_final := nImporte_liquido2; -- numeric,

				RETURN NEXT;
			END IF;


	END LOOP; -- FIN de este funcionario - rApariciones 

/*
	h) Al finalizar recorrer el cursor de salida y 
	   retornar los datos al cliente.

*/

/*
		h) guardar los descuentos aplicados (detalle)
		   y cambiar el estado a la cabecera a "PROCESADO".

		i) actualizar el detalle de la planilla de salario
		   con los importes actuales.

		j) actualizar el estado de la planilla de salario a:
		   "CON DESCUENTOS APLICADOS"

*/



					    -- Insertar / Actualizar los descuentos ya procesados:
					    -- Insertar un registro en el detalle de la planilla de descuentos activa:
			/*                        INSERT INTO salarios.detalles_planillas_descuentos (
						id_administracion,
						id_funcionario,
						id_planilla_descuento,
						monto_descuento, --aqui esto es el aplicado!
						monto_solicitado,
						id_descuento_judicial,
						id_descuento_aso,
						usu_alta,
						fec_alta,
						ip_alta
						) VALUES (
						id_administracion,
						id_funcionario,
						id_planilla_descuento,
						monto_descuento, --aqui esto es el aplicado!
						monto_solicitado,
						id_descuento_judicial,
						id_descuento_aso,
						usu_alta,
						fec_alta,
						ip_alta
						)
						
			*/

END;
]]></definition>
</function>

<function name="calcular_aplicacion_horas_no_compensadas_contratados"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="1000">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<parameter name="id_planilla_salario">
		<type name="integer"/>
	</parameter>
	<parameter name="id_detalle_planilla_salario">
		<type name="integer"/>
	</parameter>
	<parameter name="id_funcionario">
		<type name="integer"/>
	</parameter>
	<parameter name="monto_presupuestado">
		<type name="numeric"/>
	</parameter>
	<parameter name="monto_devengado">
		<type name="numeric"/>
	</parameter>
	<parameter name="monto_multa">
		<type name="numeric"/>
	</parameter>
	<parameter name="importe_liquido_sin_descuentos_varios">
		<type name="numeric"/>
	</parameter>
	<parameter name="horas_hnc">
		<type name="integer"/>
	</parameter>
	<parameter name="monto_hora_hnc">
		<type name="numeric"/>
	</parameter>
	<parameter name="monto_total_hnc">
		<type name="numeric"/>
	</parameter>
	<parameter name="monto_hnc_descontable">
		<type name="integer"/>
	</parameter>
	<parameter name="monto_multa_hnc">
		<type name="numeric"/>
	</parameter>
	<parameter name="importe_liquido_sin_descuentos_varios_hnc">
		<type name="numeric"/>
	</parameter>
	</return-type>
	<parameter name="in_id_planilla_salario" in="true">
		<type name="integer"/>
	</parameter>
	<definition><![CDATA[
BEGIN
-- Objetivo: Calcular multas por horas no compensadas.
-- Fecha: 15/09/2016 14:15:00
-- Autor: Lic. Gustavo Eloy Alcaraz Bogado
-- Objetivo: Obtener los datos necesarios para la funcionalidad de aplicar multas por horas no compensadas,
--           realiza la resultante posterior al aplicar multas administrativas.

RETURN QUERY 
SELECT 
   -- DATOS DETALLE PLANILLA SALARIO
   psd.id_planilla_salario,
   psd.id_planilla_salario_detalle,  
   psd.id_funcionario,
   psd.monto_presupuestado,
   psd.monto_devengado, 
   psd.monto_multa,
   psd.monto_iva,
   -- DATOS RESULTANTES SEGÚN HORAS NO COMPENSADAS POR FUNCIONARIOS AFECTADOS
   hnc.horas as horas_hnc,
   (psd.monto_presupuestado/30/8)::numeric(12,0) as monto_hora_hnc,
   ((psd.monto_presupuestado/30/8)::numeric(12,0)*hnc.horas)::numeric(12,0) as monto_total_hnc,
   CASE WHEN (psd.monto_presupuestado/30/8)::numeric(12,0)*hnc.horas::numeric(12,0)<=(psd.monto_devengado-psd.monto_iva-psd.monto_multa) THEN 1 ELSE 0 END monto_hnc_descontable,
   (psd.monto_multa+(psd.monto_presupuestado/30/8)::numeric(12,0)*hnc.horas)::numeric(12,0) as monto_multa_hnc,
   (psd.importe_liquido_sin_descuentos_varios-(psd.monto_presupuestado/30/8)::numeric(12,0)*hnc.horas)::numeric(12,0) as importe_liquido_sin_descuentos_varios_hnc
FROM 
   salarios_contratados.planillas_salarios_detalles psd
   INNER JOIN salarios_contratados.planillas_salarios ps ON ps.id_planilla_salario=psd.id_planilla_salario AND ps.id_planilla_salario=in_id_planilla_salario
   INNER JOIN salarios_contratados.horas_no_compensadas hnc ON hnc.id_funcionario=psd.id_funcionario AND hnc.estado=0;
END;

]]></definition>
</function>

<function name="calcular_aplicacion_multas_contratados"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="1000">
	<schema name="salarios_contratados"/>
	<role name="mcaniza"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<parameter name="out_id_planilla_salario_detalle">
		<type name="integer"/>
	</parameter>
	<parameter name="out_id_planilla_salario">
		<type name="integer"/>
	</parameter>
	<parameter name="out_id_funcionario">
		<type name="integer"/>
	</parameter>
	<parameter name="out_monto_presupuestado">
		<type name="numeric"/>
	</parameter>
	<parameter name="out_monto_devengado">
		<type name="numeric"/>
	</parameter>
	<parameter name="out_importe_liquido_sin_multa">
		<type name="numeric"/>
	</parameter>
	<parameter name="out_importe_multa_solicitada">
		<type name="numeric"/>
	</parameter>
	<parameter name="out_importe_multa_aplicada">
		<type name="numeric"/>
	</parameter>
	<parameter name="out_importe_multa_diferencia">
		<type name="numeric"/>
	</parameter>
	<parameter name="out_importe_liquido_con_multa">
		<type name="numeric"/>
	</parameter>
	<parameter name="out_id_multa_solicitada_detalle">
		<type name="integer"/>
	</parameter>
	</return-type>
	<parameter name="in_id_planilla_salario" in="true">
		<type name="integer"/>
	</parameter>
	<definition><![CDATA[
DECLARE
-- cDps = detallePlanillaSalario
    cDps refcursor;
    rDps RECORD;

-- rMultas = multas solicitadas
    rMultas RECORD;
-- cantidad de apariciones del funcionario en el detalle 
-- de la planilla de salarios.
    rApariciones RECORD;

    iId_multa_aplicada integer := 0;
    iId_multa_solicitada integer := 0;
    nImporte_diario numeric := 0;
    nGestion numeric := 0;
    iId_mes integer := 0;

	iImporte_liquido1_sin_multa numeric :=0;
	iImporte_liquido2_sin_multa numeric :=0;

	iImporte_liquido1_con_multa numeric :=0;
	iImporte_liquido2_con_multa numeric :=0;

	nImporte_multa_solicitada1 numeric :=0;
	nImporte_multa_solicitada2 numeric :=0;

	iImporte_multa_aplicada1 numeric :=0;
	iImporte_multa_aplicada2 numeric :=0;

	iImporte_diferencia1 numeric :=0;
	iImporte_diferencia2 numeric :=0;

	iId_planilla_salario_detalle1 integer :=0;
	nMonto_presupuestado1 numeric :=0;
	nMonto_devengado1 numeric :=0;
	
	iId_planilla_salario_detalle2 integer :=0;
	nMonto_presupuestado2 numeric :=0;
	nMonto_devengado2 numeric :=0;
	
BEGIN
-- Objetivo: Aplicar multas a funcionarios.
-- Fecha: 2012-05-18

/*
Para calcular la aplicación de multas de funcionarios que aparecen
dos veces en la planilla de salario:

Flujo Básico:

a-2) Identificar la cantidad de veces que aparece el funcionario en la planilla de salarios.
a-1) Identificar la cantidad de días de multa solicitada
a) Obtener los importes líquido1 y líquido2 de este funcionario.
b) Obtener el importe diario del presupuestado actual del funcionario.
c) Calcular el importe solicitado multiplicando el importe diario 
   por la cantidad de días. 

d) si el importe solicitado es menor al liquido1:
   Realizar la siguiente operación: 
   importe_liquido_con_multas1 = liquido1 - solicitado.

e) guardar las multas aplicadas (detalle) y cambiar el estado a la cabecera a "procesado".
   ¿cambiar el estado en multas solicitadas tambien?
f) actualizar el detalle de la planilla de salario

g) actualizar el estado de la planilla de salario a: "con multas aplicadas"

Flujos Alternativos
FA1) En el punto d) si el solicitado es mayor a liquido1 pero menor a liquido2:
     Realizar el punto d) utilizando el liquido2 en vez del líquido1.
FA2) En el punto d) si el solicitado es mayor al liquido1 y liquido2 
     pero menor a (liquido1+liquido2):
     realizar las siguientes operaciones:
       diferencia1=solicitado-liquido1
       importe_liquido_con_multas1=0
       importe_liquido_con_multas2=liquido2-diferencia1

FA3) En el punto d) si el solicitado es mayor al liquido1 y liquido2 
     y mayor a (liquido1+liquido2):
     realizar las siguientes operaciones: 
       diferencia1=solicitado-liquido1
       importe_liquido_con_multas1=0
       diferencia2=diferencia1-liquido2
       importe_liquido_con_multas2=0

FA4) En el punto d) si el solicitado es mayor al liquido1 y liquido2 
     y mayor a (liquido1+liquido2) y liquido2=0:
     realizar las siguientes operaciones: 
       diferencia1=solicitado-liquido1
       importe_liquido_con_multas1=0
*/

-- -------------------------------------------------------------------------

-- Se obtiene el ID de la planilla de multas aplicadas 
-- para este planilla de salario
-- si no existe se le asigna el valor por omisión 0.-
	Select 
		z.id_multa_aplicada, 
		z.id_multa_solicitada 
	into 
		iId_multa_aplicada, 
		iId_multa_solicitada
	from salarios_contratados.multas_aplicadas z 
	where z.id_planilla_salario = IN_ID_PLANILLA_SALARIO
		and z.estado = 0;
	IF (iId_multa_aplicada IS NULL) THEN
		iId_multa_aplicada:=0;
	END IF;

	Select 
		x.gestion, 
		x.id_mes 
	into 
		nGestion, 
		iId_mes
	from salarios_contratados.planillas_salarios x 
	where x.id_planilla_salario = IN_ID_PLANILLA_SALARIO;

	-- a-2) Identificar la cantidad de veces que aparece el funcionario en la planilla de salarios.

	FOR rApariciones IN
		SELECT 
			a.id_funcionario, 
			count(*) as cantidad
		FROM salarios_contratados.planillas_salarios_detalles a
		      left join salarios_contratados.planillas_salarios b 
			   on (a.id_planilla_salario = b.id_planilla_salario)
		WHERE b.id_estado = 0 -- 0 es recien creado.
		      and b.id_planilla_salario = IN_ID_PLANILLA_SALARIO 
		      and a.id_funcionario in (
			SELECT 
				y.id_funcionario 
			  FROM salarios_contratados.multas_solicitadas_detalles y
			where y.id_multa_solicitada = iId_multa_solicitada
			--- ESTO SE AGREGO EL 28-01-2014--
			and y.cantidad_dias > 0
		)
		group by a.id_funcionario
	LOOP
	-- Poner a 0 las variables utilizadas!!!
		out_id_planilla_salario_detalle :=0;
		out_id_planilla_salario :=0;
		out_id_funcionario :=0;

		out_monto_presupuestado :=0;
		out_monto_devengado :=0;
		--out_monto_aporte :=0; --jubilacion

		out_importe_liquido_sin_multa :=0;
		out_importe_multa_solicitada :=0;
		out_importe_multa_aplicada :=0;
		out_importe_multa_diferencia :=0;
		out_importe_liquido_con_multa :=0;
		--out_monto_total_aporte :=0; --- jubilacion + diferencia del (presupuestado-devengado) + multa

    -- iId_multas_aplicadas := 0;
    -- iId_multa_solicitada := 0;
    nImporte_diario := 0;
    -- nGestion := 0;
    -- iId_mes := 0;

	iImporte_liquido1_sin_multa :=0;
	iImporte_liquido2_sin_multa :=0;

	iImporte_liquido1_con_multa :=0;
	iImporte_liquido2_con_multa :=0;

	nImporte_multa_solicitada1 :=0;
	nImporte_multa_solicitada2 :=0;


	iImporte_multa_aplicada1 :=0;
	iImporte_multa_aplicada2 :=0;

	iImporte_diferencia1 :=0;
	iImporte_diferencia2 :=0;

	iId_planilla_salario_detalle1 :=0;
	nMonto_presupuestado1 :=0;
	nMonto_devengado1 :=0;
	--nMonto_aporte1  :=0;
	--nMonto_total_aporte1  :=0; -- jubilacion + diferencia del (presupuestado-devengado) + multa

	iId_planilla_salario_detalle2 :=0;
	nMonto_presupuestado2 :=0;
	nMonto_devengado2 :=0;
	--nMonto_aporte2 :=0;
	--nMonto_total_aporte2 :=0; -- jubilacion + diferencia del (presupuestado-devengado) + multa

-- -------------------------------------------------------------------------------
		-- a-1) Identificar la cantidad de días de multas solicitada
		SELECT 
			a.id_multa_solicitada_detalle, 
			a.id_administracion, 
			a.id_multa_solicitada, 
			a.id_funcionario,
			a.cantidad_dias
			into rMultas
		FROM salarios_contratados.multas_solicitadas_detalles a
		where a.id_multa_solicitada= iId_multa_solicitada
			and a.cantidad_dias > 0
			and a.id_funcionario= rApariciones.id_funcionario;
		


		-- a) Obtener los importes líquido1 y líquido2 de este funcionario.
		OPEN cDps SCROLL FOR 
		SELECT 
			a.id_planilla_salario_detalle, 
			a.id_funcionario, 
			a.monto_presupuestado, 
			a.monto_devengado, 
			--a.monto_aporte, --jubilacion
			--a.monto_total_aporte,
                        (a.monto_devengado) as liquido
		FROM salarios_contratados.planillas_salarios_detalles a
		      left join salarios_contratados.planillas_salarios b 
			   on (a.id_planilla_salario = b.id_planilla_salario)
		WHERE b.id_estado = 0 -- 0 es recien creado.
		      and b.id_planilla_salario= IN_ID_PLANILLA_SALARIO 
		      and a.id_funcionario = rMultas.id_funcionario
		ORDER BY a.monto_presupuestado asc;

		-- Se asumen que sólo aparece un funcionario 2 veces!!!
		FETCH NEXT FROM cDps INTO rDps;
		iImporte_liquido1_sin_multa:=coalesce(rDps.liquido,0);

               	iId_planilla_salario_detalle1  := rDps.id_planilla_salario_detalle;
		out_id_planilla_salario :=IN_ID_PLANILLA_SALARIO;
		out_id_funcionario :=rMultas.id_funcionario;

		nMonto_presupuestado1 := rDps.monto_presupuestado;
		nMonto_devengado1 := rDps.monto_devengado;
		--nMonto_aporte1 := rDps.monto_aporte; -- jubilacion
		--nMonto_total_aporte1 := rDps.monto_total_aporte; -- jubilacion + diferencia del (presupuestado-devengado) + multa

		IF (rApariciones.cantidad = 2 ) THEN
			FETCH NEXT FROM cDps INTO rDps;
			iImporte_liquido2_sin_multa:=coalesce(rDps.liquido,0);
			iId_planilla_salario_detalle2  := rDps.id_planilla_salario_detalle;
			nMonto_presupuestado2 := rDps.monto_presupuestado;
			nMonto_devengado2 := rDps.monto_devengado;
			--nMonto_aporte2 := rDps.monto_aporte; -- jubilacion
			--nMonto_total_aporte2 := rDps.monto_total_aporte; -- jubilacion + diferencia del (presupuestado-devengado) + multa
		END IF;
		CLOSE cDps;

		-- b) Obtener el importe diario de la categoria actual del funcionario.
			--  ¿Se debe contemplar aquí la categoría mapeada cuando es jefe interino?
		Select 
			importe_diario 
			into nImporte_diario 
		from salarios_contratados.importes_por_unidad_de_tiempo(rMultas.id_funcionario);

		-- c) Calcular el importe solicitado multiplicando el importe diario 
		--   por la cantidad de días. 
		out_importe_multa_solicitada :=nImporte_diario*rMultas.cantidad_dias;
		-- d) si el importe solicitado es menor al liquido1:
		--   Realizar la siguiente operación: 
		--   importe_liquido_con_multas1 = liquido1 - solicitado.
		IF (out_importe_multa_solicitada < iImporte_liquido1_sin_multa) THEN
			iImporte_liquido1_con_multa := iImporte_liquido1_sin_multa - out_importe_multa_solicitada;
			nImporte_multa_solicitada1 := out_importe_multa_solicitada;
			iImporte_multa_aplicada1 := out_importe_multa_solicitada;

			iImporte_liquido2_con_multa := iImporte_liquido2_sin_multa;

		ELSIF ((out_importe_multa_solicitada > iImporte_liquido1_sin_multa) AND (out_importe_multa_solicitada < iImporte_liquido2_sin_multa)) THEN
			-- Flujos Alternativos
			-- FA1) En el punto d) si el solicitado es mayor a liquido1 pero menor a liquido2:
			--     Realizar el punto d) utilizando el liquido2 en vez del líquido1.
			iImporte_liquido2_con_multa := iImporte_liquido2_sin_multa - out_importe_multa_solicitada;
			nImporte_multa_solicitada2 := out_importe_multa_solicitada;
			iImporte_multa_aplicada2 := out_importe_multa_solicitada;
			iImporte_liquido1_con_multa := iImporte_liquido1_sin_multa;

		ELSIF ((out_importe_multa_solicitada > iImporte_liquido1_sin_multa) 
			    AND (out_importe_multa_solicitada > iImporte_liquido2_sin_multa)
			    AND (out_importe_multa_solicitada < (iImporte_liquido1_sin_multa+iImporte_liquido2_sin_multa))
		) THEN
		-- FA2) En el punto d) si el solicitado es mayor al liquido1 y liquido2 
		--     pero menor a (liquido1+liquido2):
		--     realizar las siguientes operaciones: 
		--       diferencia1=solicitado-liquido1
		--       importe_liquido_con_multas1=0
		--       importe_liquido_con_multas2=liquido2-diferencia1
			iImporte_diferencia1:= out_importe_multa_solicitada - iImporte_liquido1_sin_multa;
			iImporte_multa_aplicada1 := iImporte_liquido1_sin_multa;
			nImporte_multa_solicitada1 := out_importe_multa_solicitada;
			iImporte_liquido1_con_multa :=0;

			iImporte_liquido2_con_multa := iImporte_liquido2_sin_multa - iImporte_diferencia1;
			iImporte_multa_aplicada2 := iImporte_diferencia1; 
			nImporte_multa_solicitada2 := iImporte_diferencia1;


		ELSIF ((out_importe_multa_solicitada > iImporte_liquido1_sin_multa) 
			    AND (out_importe_multa_solicitada > iImporte_liquido2_sin_multa)
			    AND (out_importe_multa_solicitada > (iImporte_liquido1_sin_multa+iImporte_liquido2_sin_multa))
		) THEN
		-- FA3) En el punto d) si el solicitado es mayor al liquido1 y liquido2 
		--     y mayor a (liquido1+liquido2):
		--     realizar las siguientes operaciones: 
		--       diferencia1=solicitado-liquido1
		--       importe_liquido_con_multas1=0
		--       diferencia2=diferencia1-liquido2
		--       importe_liquido_con_multas2=0
			iImporte_diferencia1:= out_importe_multa_solicitada - iImporte_liquido1_sin_multa;
			iImporte_multa_aplicada1 := iImporte_liquido1_sin_multa;
			iImporte_liquido1_con_multa :=0;
			nImporte_multa_solicitada1 := out_importe_multa_solicitada;

			iImporte_diferencia2:= iImporte_diferencia1 - iImporte_liquido2_sin_multa;
			iImporte_multa_aplicada2 := iImporte_liquido2_sin_multa;
			iImporte_liquido2_con_multa := 0;
			nImporte_multa_solicitada2 := iImporte_diferencia1;

		ELSIF ((out_importe_multa_solicitada > iImporte_liquido1_sin_multa) 
			    AND (out_importe_multa_solicitada > iImporte_liquido2_sin_multa)
			    AND (out_importe_multa_solicitada > (iImporte_liquido1_sin_multa+iImporte_liquido2_sin_multa))
			   AND iImporte_liquido2_sin_multa=0
		) THEN
		-- FA4) En el punto d) si el solicitado es mayor al liquido1 y liquido2 
		--     y mayor a (liquido1+liquido2) y liquido2=0:
		--     realizar las siguientes operaciones: 
		--       diferencia1=solicitado-liquido1
		--       importe_liquido_con_multas1=0
			iImporte_diferencia1:= out_importe_multa_solicitada - iImporte_liquido1_sin_multa;
			iImporte_multa_aplicada1 := iImporte_liquido1_sin_multa;
			iImporte_liquido1_con_multa :=0;
			nImporte_multa_solicitada1 := out_importe_multa_solicitada;

		END IF;
		-- e) insertar las multas aplicadas (detalle)

		-- Cargar variables de salida 
		-- para el registro1:
		out_id_multa_solicitada_detalle := rMultas.id_multa_solicitada_detalle;
		out_id_planilla_salario_detalle :=iId_planilla_salario_detalle1;
		-- out_id_planilla_salario :=0;
		-- out_id_funcionario :=0;
		out_monto_presupuestado := nMonto_presupuestado1;
		out_monto_devengado := nMonto_devengado1;
		--out_monto_aporte := nMonto_aporte1; -- jubilacion

		out_importe_liquido_sin_multa := iImporte_liquido1_sin_multa;
		out_importe_multa_solicitada := nImporte_multa_solicitada1;
		out_importe_multa_aplicada := iImporte_multa_aplicada1;
		out_importe_multa_diferencia := iImporte_diferencia1;
		out_importe_liquido_con_multa := iImporte_liquido1_con_multa;
		--out_monto_total_aporte := nMonto_aporte1 + (nMonto_presupuestado1 - nMonto_devengado1) + iImporte_multa_aplicada1; -- jubilacion + diferencia del (presupuestado-devengado) + multa

		-- Aquí devolvemos el contenido de las variables de salida
		-- registro 1
		RETURN NEXT; 

		IF (rApariciones.cantidad = 2 ) THEN
			-- cargar variables de salida registro 2

			out_id_planilla_salario_detalle :=iId_planilla_salario_detalle2;
			-- out_id_planilla_salario :=0;
			-- out_id_funcionario :=0;
			out_monto_presupuestado := nMonto_presupuestado2;
			out_monto_devengado := nMonto_devengado2;
			--out_monto_aporte := nMonto_aporte2; -- jubilacion

			out_importe_liquido_sin_multa := iImporte_liquido2_sin_multa;
			out_importe_multa_solicitada := nImporte_multa_solicitada2;
			out_importe_multa_aplicada := iImporte_multa_aplicada2;
			out_importe_multa_diferencia := iImporte_diferencia2;
			out_importe_liquido_con_multa := iImporte_liquido2_con_multa;
			--out_monto_total_aporte := nMonto_aporte2 + (nMonto_presupuestado2 - nMonto_devengado2) + iImporte_multa_aplicada2; -- jubilacion + diferencia del (presupuestado-devengado) + multa

			-- f) actualizar el detalle de la planilla de salario

			-- Aquí devolvemos el contenido de las variables de salida
			-- registro 2
			RETURN NEXT; 
		END IF;
END LOOP; -- LOOP de cDps (de este funcionario)


-- actualizar plla de descuentos (cabecera)
-- actualizar plla de salarios (cabecera)
-- Estado x = CON MULTAS APLICADAS

END;
]]></definition>
</function>

<function name="calculo_gratificacion_ocasional"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="1000">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<parameter name="id_funcionario">
		<type name="integer"/>
	</parameter>
	<parameter name="cedula_funcionario">
		<type name="character varying"/>
	</parameter>
	<parameter name="ape_nom_funcionario">
		<type name="character varying"/>
	</parameter>
	<parameter name="objeto_gasto">
		<type name="integer"/>
	</parameter>
	<parameter name="monto">
		<type name="numeric"/>
	</parameter>
	<parameter name="importe_iva">
		<type name="numeric"/>
	</parameter>
	<parameter name="id_oficina">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel1">
		<type name="integer"/>
	</parameter>
	<parameter name="nombre_oficina">
		<type name="character varying"/>
	</parameter>
	</return-type>
	<parameter name="in_id_mes" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_gestion" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_id_administracion" in="true">
		<type name="integer"/>
	</parameter>
	<definition><![CDATA[
BEGIN
/*
  * Funcion para obtener planilla de gratificacion ocasional a contratados
  * Fecha: 2013-04-09
  * Autor: DMAO
  * Parametros:
  *            in_id_mes mes de proceso
  *            in_gestion ejercicio aplicado
  *            in_id_administracion, identificador de la administracion 
  * 
  * Descripcion:  Calcular el importe por el pago de gratificacion ocasional a contratados
  * ------------  
  */
	RETURN QUERY 
	SELECT distinct
	f.id_funcionario,
	f.cedula_funcionario, 
	f.ape_nom_funcionario,
	fc.objeto_gasto,
	fgo.monto,
	salarios_contratados.funcion_obtener_retencion(fgo.monto, fc.porcentaje_iva, fc.porcentaje_retencion) as importe_iva,
	o.id_oficina,
	o.nivel1,
	o.nombre
FROM salarios_contratados.funcionarios_gratificaciones_ocasionales fgo
INNER JOIN legajos.funcionarios f ON f.cedula_funcionario = fgo.cedula
LEFT JOIN salarios_contratados.funcionarios_contratos fc ON (fc.id_funcionario = f.id_funcionario and fc.estado is TRUE)
LEFT JOIN legajos.oficinas o ON o.id_oficina = fgo.id_oficina AND o.gestion = in_gestion
WHERE fgo.id_mes = in_id_mes
AND fgo.gestion = in_gestion
AND fgo.id_administracion = in_id_administracion;

END;
]]></definition>
</function>

<function name="calculo_ra_funcionarios"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="1000">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<parameter name="id_oficina">
		<type name="integer"/>
	</parameter>
	<parameter name="nombre">
		<type name="character varying"/>
	</parameter>
	<parameter name="nivel1">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel2">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel3">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel4">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel5">
		<type name="integer"/>
	</parameter>
	<parameter name="id_funcionario">
		<type name="integer"/>
	</parameter>
	<parameter name="cedula">
		<type name="character varying"/>
	</parameter>
	<parameter name="funcionario">
		<type name="character varying"/>
	</parameter>
	<parameter name="id_mes">
		<type name="integer"/>
	</parameter>
	<parameter name="gestion">
		<type name="numeric"/>
	</parameter>
	<parameter name="monto">
		<type name="numeric"/>
	</parameter>
	<parameter name="monto_percibido">
		<type name="numeric"/>
	</parameter>
	<parameter name="importe_iva">
		<type name="numeric"/>
	</parameter>
	<parameter name="cantidad_horas">
		<type name="numeric"/>
	</parameter>
	<parameter name="id_aplicada_hora_detalle">
		<type name="integer"/>
	</parameter>
	<parameter name="objeto_gasto">
		<type name="integer"/>
	</parameter>
	<parameter name="nro_contrato">
		<type name="character varying"/>
	</parameter>
	<parameter name="categoria">
		<type name="character varying"/>
	</parameter>
	</return-type>
	<parameter name="in_id_mes" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_gestion" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_id_planilla_ra" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_id_administracion" in="true">
		<type name="integer"/>
	</parameter>
	<definition><![CDATA[
BEGIN
/*
  * Funcion para obtener planilla de ra de funcionarios contratados
  * Fecha: 2012-05-08
  * Autor: Lic. José Cabrera
  * Modificado por marioca
  * 22-04-13
  * Parametros:
  *            in_id_mes mes de proceso
  *            in_gestion ejercicio aplicado
  *	       in_id_planilla_ra
  *            in_id_administracion, identificador de la administracion 
  * 
  * Descripcion:  Calcular el monto de ra por cada funcionario teniendo 
  * ------------  en cuenta el iva y la cantidad de horas trabajadas
  */

RETURN QUERY 
  Select 
ahd.id_oficina, 
o.nombre, 
o.nivel1, 
o.nivel2, 
o.nivel3, 
o.nivel4, 
o.nivel5, 
ahd.id_funcionario, 
f.cedula_funcionario AS cedula, 
f.ape_nom_funcionario AS funcionario, 
ah.id_mes, 
ah.gestion,
fc.monto_contrato,
-- ((salarios_contratados.obtener_monto_ra(f.id_funcionario, in_id_mes, in_gestion, in_id_planilla_ra)::double precision*ahd.horas_ra::double precision)::int)::numeric AS monto,
-- (salarios_contratados.funcion_obtener_retencion((salarios_contratados.obtener_monto_ra(f.id_funcionario, in_id_mes, in_gestion, in_id_planilla_ra)::double precision*ahd.horas_ra::double precision)::numeric, fc.porcentaje_iva, fc.porcentaje_retencion)) as importe_iva,
-- ahd.horas_ra::integer AS cantidad_horas,
-- 28022014 ajustes de redondeo de horas
((salarios_contratados.obtener_monto_ra(f.id_funcionario, in_id_mes, in_gestion, in_id_planilla_ra)::double precision*ahd.horas_ra::int)::int)::numeric AS monto,
(salarios_contratados.funcion_obtener_retencion((salarios_contratados.obtener_monto_ra(f.id_funcionario, in_id_mes, in_gestion, in_id_planilla_ra)::double precision*ahd.horas_ra::int)::numeric, fc.porcentaje_iva, fc.porcentaje_retencion)) as importe_iva,
(ahd.horas_ra::integer)::numeric AS cantidad_horas,
ahd.id_aplicada_hora_detalle, 
fc.objeto_gasto,
fc.nro_contrato,
fc.categoria
FROM control.aplicadas_horas_detalle ahd
INNER JOIN control.aplicadas_horas ah ON ah.id_aplicada_hora = ahd.id_aplicada_hora AND ah.gestion = in_gestion AND ah.id_mes = in_id_mes AND ah.estado = 2
INNER JOIN legajos.funcionarios f ON ahd.id_funcionario = f.id_funcionario
LEFT JOIN legajos.oficinas o ON o.id_oficina = ahd.id_oficina
LEFT JOIN salarios_contratados.funcionarios_contratos fc ON ahd.id_funcionario = fc.id_funcionario
AND o.gestion = in_gestion
WHERE f.estado_funcionario
and ah.id_administracion = in_id_administracion
and fc.estado
and fc.percibe_ra
ORDER BY ahd.id_oficina;

END;
]]></definition>
</function>

<function name="calculo_ra_funcionarios2"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="1000">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<parameter name="id_aplicada_hora_detalle">
		<type name="integer"/>
	</parameter>
	<parameter name="id_funcionario">
		<type name="integer"/>
	</parameter>
	<parameter name="cantidad_horas">
		<type name="numeric"/>
	</parameter>
	<parameter name="id_mes">
		<type name="integer"/>
	</parameter>
	<parameter name="gestion">
		<type name="numeric"/>
	</parameter>
	<parameter name="cedula">
		<type name="character varying"/>
	</parameter>
	<parameter name="funcionario">
		<type name="character varying"/>
	</parameter>
	<parameter name="objeto_gasto">
		<type name="integer"/>
	</parameter>
	<parameter name="nro_contrato">
		<type name="character varying"/>
	</parameter>
	<parameter name="categoria">
		<type name="character varying"/>
	</parameter>
	<parameter name="id_oficina">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel1">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel2">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel3">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel4">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel5">
		<type name="integer"/>
	</parameter>
	<parameter name="oficina">
		<type name="character varying"/>
	</parameter>
	<parameter name="monto_percibido">
		<type name="numeric"/>
	</parameter>
	<parameter name="importe_iva">
		<type name="numeric"/>
	</parameter>
	</return-type>
	<parameter name="in_id_mes" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_gestion" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_id_planilla_ra" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_id_administracion" in="true">
		<type name="integer"/>
	</parameter>
	<definition><![CDATA[
BEGIN
/*
  * Funcion para obtener planilla de ra de funcionarios contratados
  * Fecha: 2012-05-08
  * Autor: Lic. José Cabrera
  * Fecha: 2017-03-02
  * Modificado por dmao
  * Parametros:
  *            in_id_mes mes de proceso
  *            in_gestion ejercicio aplicado
  *	       in_id_planilla_ra
  *            in_id_administracion, identificador de la administracion 
  * 
  * Descripcion:  Calcular el monto de ra por cada funcionario teniendo 
  * ------------  en cuenta el iva y la cantidad de horas trabajadas
  */

RETURN QUERY 
SELECT
ahd.id_aplicada_hora_detalle,
ahd.id_funcionario,
(ahd.horas_ra::int)::numeric AS cantidad_horas,
ah.id_mes, 
ah.gestion,
f.cedula_funcionario, 
f.ape_nom_funcionario,
fc.objeto_gasto,
fc.nro_contrato,
fc.categoria,
ahd.id_oficina,  
o.nivel1,o.nivel2,o.nivel3,o.nivel4,o.nivel5,
o.nombre as oficina,
((salarios_contratados.obtener_monto_ra2(fc.id_funcionario_contrato, in_id_mes, in_gestion, in_id_planilla_ra)::double precision*ahd.horas_ra::int)::int)::numeric AS monto,
(salarios_contratados.funcion_obtener_retencion((salarios_contratados.obtener_monto_ra2(fc.id_funcionario_contrato, in_id_mes, in_gestion, in_id_planilla_ra)::double precision*ahd.horas_ra::int)::numeric, fc.porcentaje_iva, fc.porcentaje_retencion)) as importe_iva
FROM control.aplicadas_horas_detalle ahd
INNER JOIN control.aplicadas_horas ah ON ah.id_aplicada_hora = ahd.id_aplicada_hora AND ah.gestion = in_gestion AND ah.id_mes = in_id_mes AND ah.estado = 2
INNER JOIN legajos.funcionarios f ON ahd.id_funcionario = f.id_funcionario AND f.estado_funcionario
INNER JOIN legajos.oficinas o ON o.id_oficina = ahd.id_oficina
INNER JOIN --salarios_contratados.funcionarios_contratos fc ON fc.id_funcionario = ahd.id_funcionario AND fc.gestion = in_gestion and fc.estado and fc.percibe_ra
		(SELECT a.*, fc.objeto_gasto,
		fc.nro_contrato,
		fc.categoria,
		fc.porcentaje_iva, fc.porcentaje_retencion
		FROM
		(SELECT fc.id_funcionario, max(fc.id_funcionario_contrato) as id_funcionario_contrato
		FROM salarios_contratados.funcionarios_contratos fc
		WHERE fc.gestion = in_gestion 
		AND fc.percibe_ra
		AND extract (month from fc.hasta)>= in_id_mes
		GROUP BY fc.id_funcionario) a
		LEFT JOIN  salarios_contratados.funcionarios_contratos fc ON (fc.id_funcionario_contrato = a.id_funcionario_contrato)
		) fc ON fc.id_funcionario = ahd.id_funcionario
WHERE ah.id_administracion = in_id_administracion
AND ahd.horas_ra > 0
AND ahd.id_aplicada_hora_detalle NOT IN (SELECT x.id_aplicada_hora_detalle 
                                         FROM salarios_contratados.planillas_ra_detalles x
                                         INNER JOIN salarios_contratados.planillas_ra y ON x.id_planilla_ra = y.id_planilla_ra
                                         WHERE  y.gestion = in_gestion AND y.id_mes = in_id_mes
                                         AND NOT (x.id_aplicada_hora_detalle isnull))
AND ahd.id_funcionario IN (SELECT a.id_funcionario
			   FROM salarios_contratados.planillas_salarios_detalles a
			   INNER JOIN salarios_contratados.planillas_salarios b ON (b.id_planilla_salario = a.id_planilla_salario)
			   WHERE b.gestion = in_gestion
			   AND b.id_mes = in_id_mes
			   GROUP BY a.id_funcionario)

ORDER BY o.nivel1,o.nivel2,o.nivel3,o.nivel4,o.nivel5,ape_nom_funcionario;

END;
]]></definition>
</function>

<function name="calculo_ra_funcionarios_old"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="1000">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<parameter name="id_oficina">
		<type name="integer"/>
	</parameter>
	<parameter name="nombre">
		<type name="character varying"/>
	</parameter>
	<parameter name="nivel1">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel2">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel3">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel4">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel5">
		<type name="integer"/>
	</parameter>
	<parameter name="id_funcionario">
		<type name="integer"/>
	</parameter>
	<parameter name="cedula">
		<type name="character varying"/>
	</parameter>
	<parameter name="funcionario">
		<type name="character varying"/>
	</parameter>
	<parameter name="id_mes">
		<type name="integer"/>
	</parameter>
	<parameter name="gestion">
		<type name="numeric"/>
	</parameter>
	<parameter name="monto">
		<type name="integer"/>
	</parameter>
	<parameter name="monto_percibido">
		<type name="numeric"/>
	</parameter>
	<parameter name="importe_iva">
		<type name="numeric"/>
	</parameter>
	<parameter name="cantidad_horas">
		<type name="numeric"/>
	</parameter>
	<parameter name="id_aplicada_hora_detalle">
		<type name="integer"/>
	</parameter>
	</return-type>
	<parameter name="in_id_mes" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_gestion" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_id_planilla_ra" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_id_administracion" in="true">
		<type name="integer"/>
	</parameter>
	<definition><![CDATA[
BEGIN
/*
  * Funcion para obtener planilla de RE de funcionarios contratados
  * Fecha: 2012-05-08
  * Autor: Lic. José Cabrera
  * Modificado por marioca
  * Parametros:
  *            in_id_mes mes de proceso
  *            in_gestion ejercicio aplicado
  *	       in_id_planilla_ra
  *            in_id_administracion, identificador de la administracion 
  * 
  * Descripcion:  Calcular el monto de re por cada funcionario teniendo 
  * ------------  en cuenta el iva y la cantidad de horas trabajadas
  */

RETURN QUERY 
  Select 
ahd.id_oficina, 
o.nombre, 
o.nivel1, 
o.nivel2, 
o.nivel3, 
o.nivel4, 
o.nivel5, 
ahd.id_funcionario, 
f.cedula_funcionario AS cedula, 
f.ape_nom_funcionario AS funcionario, 
ah.id_mes, 
ah.gestion,
fc.monto_contrato,
(salarios_contratados.obtener_monto_ra(f.id_funcionario, in_id_mes, in_gestion, in_id_planilla_ra)::double precision*ahd.horas_ra::double precision)::numeric AS monto,

(salarios_contratados.funcion_obtener_retencion((salarios_contratados.obtener_monto_ra(f.id_funcionario, in_id_mes, in_gestion, in_id_planilla_ra)::double precision*ahd.horas_ra::double precision)::numeric, i.porcentaje_iva, i.retencion_iva)) as importe_iva,

ahd.horas_ra AS cantidad_horas,
ahd.id_aplicada_hora_detalle
FROM control.aplicadas_horas_detalle ahd
INNER JOIN control.aplicadas_horas ah ON ah.id_aplicada_hora = ahd.id_aplicada_hora AND ah.gestion = in_gestion AND ah.id_mes = in_id_mes
INNER JOIN legajos.funcionarios f ON ahd.id_funcionario = f.id_funcionario
LEFT JOIN legajos.oficinas o ON o.id_oficina = ahd.id_oficina
left join legajos.datos_administrativos da on da.id_funcionario = f.id_funcionario
left join legajos.funcionarios_contratados fc on da.id_dato_administrativo = fc.id_dato_administrativo
left join legajos.funcionarios_iva fi on f.id_funcionario = fi.id_funcionario
left join legajos.iva i on fi.id_iva = i.id_iva
AND o.gestion = in_gestion
WHERE f.estado_funcionario
and fc.contrato_actual
ORDER BY ahd.id_oficina;

END;
]]></definition>
</function>

<function name="calculo_re_funcionarios"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="1000">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<parameter name="id_oficina">
		<type name="integer"/>
	</parameter>
	<parameter name="nombre">
		<type name="character varying"/>
	</parameter>
	<parameter name="nivel1">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel2">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel3">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel4">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel5">
		<type name="integer"/>
	</parameter>
	<parameter name="id_funcionario">
		<type name="integer"/>
	</parameter>
	<parameter name="cedula">
		<type name="character varying"/>
	</parameter>
	<parameter name="funcionario">
		<type name="character varying"/>
	</parameter>
	<parameter name="id_mes">
		<type name="integer"/>
	</parameter>
	<parameter name="gestion">
		<type name="numeric"/>
	</parameter>
	<parameter name="monto">
		<type name="numeric"/>
	</parameter>
	<parameter name="monto_percibido">
		<type name="numeric"/>
	</parameter>
	<parameter name="importe_iva">
		<type name="numeric"/>
	</parameter>
	<parameter name="cantidad_horas">
		<type name="numeric"/>
	</parameter>
	<parameter name="id_aplicada_hora_detalle">
		<type name="integer"/>
	</parameter>
	<parameter name="objeto_gasto">
		<type name="integer"/>
	</parameter>
	<parameter name="nro_contrato">
		<type name="character varying"/>
	</parameter>
	<parameter name="categoria">
		<type name="character varying"/>
	</parameter>
	</return-type>
	<parameter name="in_id_mes" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_gestion" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_id_planilla_re" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_id_administracion" in="true">
		<type name="integer"/>
	</parameter>
	<definition><![CDATA[
BEGIN
/*
  * Funcion para obtener planilla de RE de funcionarios contratados
  * Fecha: 2012-05-08
  * Autor: Lic. José Cabrera
  * Modificado por marioca
  * Parametros:
  *            in_id_mes mes de proceso
  *            in_gestion ejercicio aplicado
  *	       in_id_planilla_re
  *            in_id_administracion, identificador de la administracion 
  * 
  * Descripcion:  Calcular el monto de re por cada funcionario teniendo 
  * ------------  en cuenta el iva y la cantidad de horas trabajadas
  */

RETURN QUERY 
  Select 
ahd.id_oficina, 
o.nombre, 
o.nivel1, 
o.nivel2, 
o.nivel3, 
o.nivel4, 
o.nivel5, 
ahd.id_funcionario, 
f.cedula_funcionario AS cedula, 
f.ape_nom_funcionario AS funcionario, 
ah.id_mes, 
ah.gestion,
fc.monto_contrato,
-- ((salarios_contratados.obtener_monto_re(f.id_funcionario, in_id_mes, in_gestion, in_id_planilla_re)::double precision*ahd.horas_re::double precision)::int)::numeric AS monto,
-- (salarios_contratados.funcion_obtener_retencion((salarios_contratados.obtener_monto_re(f.id_funcionario, in_id_mes, in_gestion, in_id_planilla_re)::double precision*ahd.horas_re::double precision)::numeric, fc.porcentaje_iva, fc.porcentaje_retencion)) as importe_iva,
-- ahd.horas_re AS cantidad_horas,
-- 28022014 AJUSTES EN EL REDONDEO DE HORAS
((salarios_contratados.obtener_monto_re(f.id_funcionario, in_id_mes, in_gestion, in_id_planilla_re)::double precision*ahd.horas_re::int)::int)::numeric AS monto,
(salarios_contratados.funcion_obtener_retencion((salarios_contratados.obtener_monto_re(f.id_funcionario, in_id_mes, in_gestion, in_id_planilla_re)::double precision*ahd.horas_re::int)::numeric, fc.porcentaje_iva, fc.porcentaje_retencion)) as importe_iva,
(ahd.horas_re::int)::numeric AS cantidad_horas,
ahd.id_aplicada_hora_detalle, 
fc.objeto_gasto,
fc.nro_contrato,
fc.categoria
FROM control.aplicadas_horas_detalle ahd
INNER JOIN control.aplicadas_horas ah ON ah.id_aplicada_hora = ahd.id_aplicada_hora AND ah.gestion = in_gestion AND ah.id_mes = in_id_mes AND ah.estado = 2
INNER JOIN legajos.funcionarios f ON ahd.id_funcionario = f.id_funcionario
LEFT JOIN legajos.oficinas o ON o.id_oficina = ahd.id_oficina
LEFT JOIN salarios_contratados.funcionarios_contratos fc ON ahd.id_funcionario = fc.id_funcionario
AND o.gestion = in_gestion
WHERE f.estado_funcionario
and ah.id_administracion = in_id_administracion
and fc.estado
and fc.percibe_re
ORDER BY ahd.id_oficina;

END;
]]></definition>
</function>

<function name="calculo_re_funcionarios2"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="1000">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<parameter name="id_aplicada_hora_detalle">
		<type name="integer"/>
	</parameter>
	<parameter name="id_funcionario">
		<type name="integer"/>
	</parameter>
	<parameter name="cantidad_horas">
		<type name="numeric"/>
	</parameter>
	<parameter name="id_mes">
		<type name="integer"/>
	</parameter>
	<parameter name="gestion">
		<type name="numeric"/>
	</parameter>
	<parameter name="cedula">
		<type name="character varying"/>
	</parameter>
	<parameter name="funcionario">
		<type name="character varying"/>
	</parameter>
	<parameter name="objeto_gasto">
		<type name="integer"/>
	</parameter>
	<parameter name="nro_contrato">
		<type name="character varying"/>
	</parameter>
	<parameter name="categoria">
		<type name="character varying"/>
	</parameter>
	<parameter name="id_oficina">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel1">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel2">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel3">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel4">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel5">
		<type name="integer"/>
	</parameter>
	<parameter name="oficina">
		<type name="character varying"/>
	</parameter>
	<parameter name="monto_percibido">
		<type name="numeric"/>
	</parameter>
	<parameter name="importe_iva">
		<type name="numeric"/>
	</parameter>
	</return-type>
	<parameter name="in_id_mes" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_gestion" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_id_planilla_re" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_id_administracion" in="true">
		<type name="integer"/>
	</parameter>
	<definition><![CDATA[
BEGIN
/*
  * Funcion para obtener planilla de RE de funcionarios contratados
  * Fecha: 2012-05-08
  * Autor: Lic. José Cabrera
  * Fecha: 2017-03-02
  * Modificado por dmao
  * Parametros:
  *            in_id_mes mes de proceso
  *            in_gestion ejercicio aplicado
  *	       in_id_planilla_re
  *            in_id_administracion, identificador de la administracion 
  * 
  * Descripcion:  Calcular el monto de re por cada funcionario teniendo 
  * ------------  en cuenta el iva y la cantidad de horas trabajadas
  */

RETURN QUERY 
SELECT
ahd.id_aplicada_hora_detalle,
ahd.id_funcionario,
(ahd.horas_re::int)::numeric AS cantidad_horas,
ah.id_mes, 
ah.gestion,
f.cedula_funcionario, 
f.ape_nom_funcionario,
fc.objeto_gasto,
fc.nro_contrato,
fc.categoria,
ahd.id_oficina,  
o.nivel1,o.nivel2,o.nivel3,o.nivel4,o.nivel5,
o.nombre as oficina,
((salarios_contratados.obtener_monto_re2(fc.id_funcionario_contrato, in_id_mes, in_gestion, in_id_planilla_re)::double precision*ahd.horas_re::int)::int)::numeric AS monto,
(salarios_contratados.funcion_obtener_retencion((salarios_contratados.obtener_monto_re2(fc.id_funcionario_contrato, in_id_mes, in_gestion, in_id_planilla_re)::double precision*ahd.horas_re::int)::numeric, fc.porcentaje_iva, fc.porcentaje_retencion)) as importe_iva
FROM control.aplicadas_horas_detalle ahd
INNER JOIN control.aplicadas_horas ah ON ah.id_aplicada_hora = ahd.id_aplicada_hora AND ah.gestion = in_gestion AND ah.id_mes = in_id_mes AND ah.estado = 2
INNER JOIN legajos.funcionarios f ON ahd.id_funcionario = f.id_funcionario AND f.estado_funcionario
INNER JOIN legajos.oficinas o ON o.id_oficina = ahd.id_oficina
INNER JOIN --salarios_contratados.funcionarios_contratos fc ON fc.id_funcionario = ahd.id_funcionario AND fc.gestion = in_gestion and fc.estado and fc.percibe_re
(SELECT a.*, fc.objeto_gasto,
		fc.nro_contrato,
		fc.categoria,
		fc.porcentaje_iva, fc.porcentaje_retencion
		FROM
		(SELECT fc.id_funcionario, max(fc.id_funcionario_contrato) as id_funcionario_contrato
		FROM salarios_contratados.funcionarios_contratos fc
		WHERE fc.gestion = in_gestion 
		AND fc.percibe_re
		AND extract (month from fc.hasta)>= in_id_mes
		GROUP BY fc.id_funcionario) a
		LEFT JOIN  salarios_contratados.funcionarios_contratos fc ON (fc.id_funcionario_contrato = a.id_funcionario_contrato)
		) fc ON fc.id_funcionario = ahd.id_funcionario
WHERE ah.id_administracion = in_id_administracion
AND ahd.horas_re > 0
AND ahd.id_aplicada_hora_detalle NOT IN (SELECT x.id_aplicada_hora_detalle 
                                         FROM salarios_contratados.planillas_re_detalles x
                                         INNER JOIN salarios_contratados.planillas_re y ON x.id_planilla_re = y.id_planilla_re
                                         WHERE  y.gestion = in_gestion AND y.id_mes = in_id_mes
                                         AND NOT (x.id_aplicada_hora_detalle isnull))
AND ahd.id_funcionario IN (SELECT a.id_funcionario
			   FROM salarios_contratados.planillas_salarios_detalles a
			   INNER JOIN salarios_contratados.planillas_salarios b ON (b.id_planilla_salario = a.id_planilla_salario)
			   WHERE b.gestion = in_gestion
			   AND b.id_mes = in_id_mes
			   GROUP BY a.id_funcionario)

ORDER BY o.nivel1,o.nivel2,o.nivel3,o.nivel4,o.nivel5,ape_nom_funcionario;

END;
]]></definition>
</function>

<function name="cgr_informe_liquidaciones_funcionarios_contratados"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="1000">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<parameter name="id_funcionario">
		<type name="integer"/>
	</parameter>
	<parameter name="cedula">
		<type name="text"/>
	</parameter>
	<parameter name="nombres">
		<type name="text"/>
	</parameter>
	<parameter name="apellidos">
		<type name="text"/>
	</parameter>
	<parameter name="n1">
		<type name="integer"/>
	</parameter>
	<parameter name="n2">
		<type name="integer"/>
	</parameter>
	<parameter name="n3">
		<type name="integer"/>
	</parameter>
	<parameter name="n4">
		<type name="integer"/>
	</parameter>
	<parameter name="n5">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel1">
		<type name="text"/>
	</parameter>
	<parameter name="nivel2">
		<type name="text"/>
	</parameter>
	<parameter name="nivel3">
		<type name="text"/>
	</parameter>
	<parameter name="nivel4">
		<type name="text"/>
	</parameter>
	<parameter name="nivel5">
		<type name="text"/>
	</parameter>
	<parameter name="ret_iva">
		<type name="integer"/>
	</parameter>
	<parameter name="categoria">
		<type name="text"/>
	</parameter>
	<parameter name="cargo">
		<type name="text"/>
	</parameter>
	<parameter name="objeto_gasto">
		<type name="text"/>
	</parameter>
	<parameter name="id_funcionario_contratado">
		<type name="integer"/>
	</parameter>
	<parameter name="pres">
		<type name="integer"/>
	</parameter>
	<parameter name="deve">
		<type name="integer"/>
	</parameter>
	<parameter name="rext">
		<type name="integer"/>
	</parameter>
	<parameter name="radi">
		<type name="integer"/>
	</parameter>
	<parameter name="subs">
		<type name="integer"/>
	</parameter>
	<parameter name="goca">
		<type name="integer"/>
	</parameter>
	<parameter name="total">
		<type name="integer"/>
	</parameter>
	</return-type>
	<parameter name="in_id_administracion" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_id_mes" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_gestion" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_id_funcionario" in="true">
		<type name="text"/>
	</parameter>
	<definition><![CDATA[
BEGIN
/*
  * Funcion para generar un listado de las liquidaciones de los funcionarios contratados por mes y gestion
  * Creado    : 2014-01-19 13:37:00
  * Modificado: 2014-02-21 15:13:48
  * Autor: Lic. Gustavo Eloy Alcaraz Bogado
  * Parametros:
  *            in_id_administracion administración del proceso		
  *            in_id_mes            mes de proceso
  *            in_gestion           ejercicio aplicado 
  * 
  * Descripcion:  Genera un listado de los funcionarios contratados referentes a las liquidaciones el mes y la gestion ingresado
  * ------------  
  */
RETURN QUERY 
SELECT
  f.id_funcionario,
  f.cedula_funcionario::text,
  f.nombre_funcionario::text,
  f.apellido_funcionario::text,
  ocd.nivel1,
  ocd.nivel2,
  ocd.nivel3,
  ocd.nivel4,
  ocd.nivel5,
  ocd.nombre_nivel1::text,
  ocd.nombre_nivel2::text,
  ocd.nombre_nivel3::text,
  ocd.nombre_nivel4::text,
  ocd.nombre_nivel5::text,
  fc2.porcentaje_retencion::int as por_iva,
  fc2.categoria::text,
  lf.descripcion_funcion::text,
  fc2.objeto_gasto::text,
  fc2.id_funcionario_contratado,
  COALESCE(s.presupuestado::int,0::int) as presupuestado,
  COALESCE(s.devengado::int,0::int) as devengado,
  COALESCE(re.devengado::int,0::int) as re,
  COALESCE(ra.devengado::int,0::int) as ra,
  COALESCE(sub.presupuestado::int,0::int) as sub,
  COALESCE(goc.presupuestado::int,0::int) as goc,
  (
  COALESCE(s.devengado::int,0::int)+
  COALESCE(re.devengado::int,0::int)+
  COALESCE(ra.devengado::int,0::int)+
  COALESCE(sub.devengado::int,0::int)+
  COALESCE(goc.devengado::int,0::int)
  ) as total
FROM
  salarios_contratados.funcionarios_contratos fc2
  LEFT JOIN legajos.funcionarios f ON f.id_funcionario=fc2.id_funcionario
  LEFT JOIN (
     -- ===========================================
     -- SALARIOS
     -- ===========================================
     SELECT
        psd.id_funcionario as id_funcionario,
        psd.monto_presupuestado as presupuestado,
        psd.monto_devengado as devengado,
        lf.descripcion_funcion
     FROM legajos.funcionarios fun
        LEFT JOIN salarios_contratados.planillas_salarios_detalles psd ON psd.id_funcionario=fun.id_funcionario
        LEFT JOIN salarios_contratados.planillas_salarios           ps ON ps.id_planilla_salario=psd.id_planilla_salario
        LEFT JOIN legajos.oficinas_con_descripciones               ocd ON ocd.id_oficina=psd.id_oficina
        LEFT JOIN salarios_contratados.funcionarios_contratos       fc ON fc.id_funcionario_contrato = psd.id_funcionario_contrato
        LEFT JOIN legajos.funcionarios_contratados                 lfc ON lfc.id_funcionario_contratado = psd.id_funcionario_contrato
        LEFT JOIN legajos.funciones                                 lf ON lf.id_funcion = lfc.id_funcion
     WHERE
        ps.id_administracion=in_id_administracion AND 
        ps.gestion=in_gestion AND 
        ps.id_mes=in_id_mes AND
        ps.id_estado=1 AND
        CASE
           WHEN 
              in_id_funcionario='0' 
           THEN 
              psd.id_funcionario>0
           ELSE 
              psd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[])
        END 
  ) s ON s.id_funcionario=fc2.id_funcionario
  LEFT JOIN (
     -- ===========================================
     -- REMUNERACIÓN EXTRAORDINARIA
     -- ===========================================
     SELECT
        max(dpre.id_funcionario) as id_funcionario,-- 0
        ('RE ('||sum(dpre.cantidad_horas)||' h.)')::text as concepto,-- 1
        max(dpre.objeto_gasto) as og,-- 2
        sum(dpre.monto) as presupuestado,-- 3
        sum(dpre.monto) as devengado-- 4
     FROM  
        salarios_contratados.planillas_re_detalles dpre
        LEFT JOIN salarios_contratados.planillas_re pre on pre.id_planilla_re=dpre.id_planilla_re
        LEFT JOIN legajos.oficinas_con_descripciones ocd on ocd.id_oficina=dpre.id_oficina
     WHERE
        pre.id_administracion=in_id_administracion AND 
        pre.gestion=in_gestion AND 
        pre.id_mes=in_id_mes AND
        pre.estado=1 AND
        CASE
           WHEN 
              in_id_funcionario='0' 
           THEN 
              dpre.id_funcionario>0
           ELSE 
              dpre.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[])
        END 
     GROUP BY
        dpre.id_funcionario 
  ) re ON re.id_funcionario=fc2.id_funcionario
  LEFT JOIN (
     -- ===========================================
     -- REMUNERACIÓN ADICIONAL
     -- ===========================================
     SELECT
        max(dpra.id_funcionario) as id_funcionario,-- 0
        ('RA ('||sum(dpra.cantidad_horas)||' h.)')::text as concepto,
        max(dpra.objeto_gasto) as og,
        sum(dpra.monto) as presupuestado,
        sum(dpra.monto) as devengado
     FROM
        salarios_contratados.planillas_ra_detalles dpra
        LEFT JOIN salarios_contratados.planillas_ra pra on pra.id_planilla_ra=dpra.id_planilla_ra
        LEFT JOIN legajos.oficinas_con_descripciones ocd on ocd.id_oficina=dpra.id_oficina
     WHERE
        pra.id_administracion=in_id_administracion AND 
        pra.gestion=in_gestion AND 
        pra.id_mes=in_id_mes AND
        pra.estado=0 AND
        CASE
           WHEN 
              in_id_funcionario='0' 
           THEN 
              dpra.id_funcionario>0
           ELSE 
              dpra.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[])
        END 
     GROUP BY
        dpra.id_funcionario 
  ) ra ON ra.id_funcionario=fc2.id_funcionario
  LEFT JOIN (
     -- ===========================================
     -- SUBSIDIOS
     -- ===========================================
     SELECT
        max(fun.id_funcionario) as id_funcionario,-- 0
        max(s.descripcion)||(CASE WHEN sum(dpsub.cantidad)>1 THEN ' ('||sum(dpsub.cantidad)||')' ELSE '' END )::text as concepto,
        max(ocd.nombre_nivel1) as nivel,
        max(dpsub.objeto_gasto)||' - '||max(s.descripcion)::text as objeto_gasto,
        max(dpsub.objeto_gasto) as og,
        sum(dpsub.importe_subsidio) as presupuestado,
        sum(dpsub.importe_subsidio) as devengado
    FROM  
        salarios_contratados.planillas_subsidios_detalles dpsub
        LEFT JOIN salarios_contratados.planillas_subsidios     psub ON psub.id_planilla_subsidio = dpsub.id_planilla_subsidio
        -- LEFT JOIN salarios_contratados.funcionarios_subsidios    fs ON fs.id_funcionario= dpsub.id_funcionario AND fs.gestion=2013 AND fs.id_mes=1
        LEFT JOIN salarios_contratados.funcionarios_subsidios    fs ON fs.id_funcionario_subsidio= dpsub.id_funcionario_subsidio AND fs.gestion=in_gestion AND fs.id_mes=in_id_mes
        LEFT JOIN salarios_contratados.subsidios                  s ON s.id_subsidio = fs.id_subsidio
        LEFT JOIN legajos.oficinas_con_descripciones            ocd ON ocd.id_oficina = dpsub.id_oficina
        LEFT JOIN legajos.funcionarios                          fun ON fun.id_funcionario= fs.id_funcionario
WHERE
   psub.id_administracion=in_id_administracion AND 
   psub.gestion=in_gestion AND 
   psub.id_mes=in_id_mes AND
   psub.estado=1 AND
   CASE
      WHEN 
         in_id_funcionario='0' 
      THEN 
         fs.id_funcionario>0
      ELSE 
         fs.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[])
   END 
GROUP BY
   fs.id_funcionario
  ) sub ON sub.id_funcionario=fc2.id_funcionario
LEFT JOIN (
   -- ===========================================
   -- GRATIFICACION OCASIONAL
   -- ===========================================
   SELECT
      max(dpgo.id_funcionario) as id_funcionario,-- 0
      ('GRATIFICACION OCASIONAL')::text as concepto,
      max(ocd.nombre_nivel1) as nivel,
      max(dpgo.objeto_gasto) as og,
      sum(dpgo.importe_gratificacion) as presupuestado,
      sum(dpgo.importe_gratificacion) as devengado
   FROM
      salarios_contratados.planillas_gratificaciones_ocasionales_detalles dpgo
      LEFT JOIN salarios_contratados.planillas_gratificaciones_ocasionales  pgo ON pgo.id_planilla_gratificacion_ocasional=dpgo.id_planilla_gratificacion_ocasional
      LEFT JOIN legajos.oficinas_con_descripciones                          ocd ON ocd.id_oficina=dpgo.id_oficina
   WHERE
      pgo.id_administracion=in_id_administracion AND 
      pgo.gestion=in_gestion AND 
      pgo.id_mes=in_id_mes AND
      pgo.estado=1 AND
      CASE
         WHEN 
            in_id_funcionario='0' 
         THEN 
            dpgo.id_funcionario>0
         ELSE 
            dpgo.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[])
      END 
   GROUP BY
      dpgo.id_funcionario
) goc ON goc.id_funcionario=fc2.id_funcionario
LEFT JOIN legajos.oficinas_con_descripciones ocd ON ocd.id_oficina=fc2.id_oficina
LEFT JOIN legajos.funcionarios_contratados   lfc ON lfc.id_funcionario_contratado = fc2.id_funcionario_contratado
LEFT JOIN legajos.funciones                   lf ON lf.id_funcion = lfc.id_funcion
WHERE
  fc2.id_administracion=in_id_administracion AND
  extract(year from fc2.desde)=in_gestion AND
  extract(month from fc2.desde)=in_id_mes AND
  CASE
     WHEN 
        in_id_funcionario='0' 
     THEN 
        fc2.id_funcionario>0
     ELSE 
        fc2.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[])
  END 
ORDER BY 
  f.cedula_funcionario::int;
END;
]]></definition>
</function>

<function name="copiar_planilla_para_aguinaldo_contratado"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="1000">
	<schema name="salarios_contratados"/>
	<role name="mcaniza"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="integer"/>
	</return-type>
	<parameter name="in_n_tabla">
		<type name="character varying"/>
	</parameter>
	<parameter name="in_valor_id_cabecera">
		<type name="integer"/>
	</parameter>
	<parameter name="in_n_campo_monto">
		<type name="character varying"/>
	</parameter>
	<parameter name="in_id_administracion">
		<type name="character varying"/>
	</parameter>
	<parameter name="in_usuario">
		<type name="character varying"/>
	</parameter>
	<parameter name="in_ip_usuario">
		<type name="character varying"/>
	</parameter>
	<definition><![CDATA[
DECLARE
    sql text;
    c_origen_detalle_tabla character varying;
    c_origen_detalle_id character varying;
    c_origen_cabecera_tabla character varying;
    c_origen_cabecera_id character varying;
    n_id_tipo_aguinaldo integer;
    cantidad_registros integer;
    --Para obtener id_funcionario
    vconsulta text;
    vretorna text;
    vtablaref text;
    vcamporef text;
    
BEGIN
/*
  * Funcion para copiar detalles de salarios en la tabla funcionarios_aguinaldo
  * Fecha: 2013-08-28
  * Autor: Lic. José Cabrera
  * Modificado: Lic. Mario Cañiza
  * Fecha: 2013-08-28
  * Parametros:
  *            in_n_tabla corresponde al nombre de tabla de la cabecera 
  *            in_valor_id_cabecera corresponde al valor del id de la cabecera
  *            in_n_campo_monto corresponde al nombre del campo del monto pagado
  *	       in_id_administracion la administracion utilizada
  *	       in_usuario el usuario que realiza la operacion
  *	       in_ip_usuario el ip desde donde se realiza la operacion
  * 
  * Descripcion:  Arma el sql para realizar la insercion completa de la planilla correspondiente
  */
  
-- Se obtiene del nombre de la tabla que se recibe como parametro los datos de la tabla tipos_aguinaldos
	SELECT INTO n_id_tipo_aguinaldo, c_origen_detalle_tabla, c_origen_detalle_id, c_origen_cabecera_tabla, c_origen_cabecera_id
	id_tipo_aguinaldo, origen_detalle_tabla, origen_detalle_id, origen_cabecera_tabla, origen_cabecera_id
	FROM salarios_contratados.tipos_aguinaldos
	WHERE TRIM(UPPER(origen_cabecera_tabla))=TRIM(UPPER(in_n_tabla));
	
	IF (n_id_tipo_aguinaldo IS NULL) THEN
		cantidad_registros:=-9;
		RAISE EXCEPTION 'No se puede obtener el tipo de aguinaldo.  La tabla % No existe',in_n_tabla;
	ELSE
		vconsulta := '';
		vtablaref := '';
		vcamporef := '';
		/*
		-- Si la tabla no tiene id_funcionario directamente debe obtener de la tabla asociada a la tabla en cuestion
		-- Las siguientes tablas no contienen id_funcionario:
		-- ....PLANILLA_GASTO_REPRESENTACION_DETALLE, 
		-- ....DETALLES_PLANILLAS_BONIFICACIONES, 
		-- ....DETALLE_PLANILLAS_PROFESIONALES,
		-- ....DETALLE_PLANILLAS_SUBSIDIOS
		IF (upper(c_origen_detalle_tabla) in ('PLANILLA_GASTO_REPRESENTACION_DETALLE', 'DETALLES_PLANILLAS_BONIFICACIONES', 'DETALLE_PLANILLAS_PROFESIONALES', 'DETALLE_PLANILLAS_SUBSIDIOS')  ) THEN
			IF (upper(c_origen_detalle_tabla) in ('DETALLES_PLANILLAS_BONIFICACIONES')) THEN
			   vtablaref := 'salarios.funcionarios_bonificaciones';
			   vcamporef := 'id_funcionario_bonificacion';
			ELSIF (upper(c_origen_detalle_tabla) in ('PLANILLA_GASTO_REPRESENTACION_DETALLE')) THEN
			   vtablaref := 'salarios.funcionarios_representaciones';
			   vcamporef := 'id_funcionario_representacion';
			ELSIF (upper(c_origen_detalle_tabla) in ('DETALLE_PLANILLAS_PROFESIONALES')) THEN
			   vtablaref := 'salarios.funcionarios_profesionales';
			   vcamporef := 'id_funcionario_profesional';
			ELSIF (upper(c_origen_detalle_tabla) in ('DETALLE_PLANILLAS_SUBSIDIOS')) THEN
			   vtablaref := 'salarios.funcionarios_subsidios';
			   vcamporef := 'id_funcionario_subsidio';
			END IF;
			vconsulta = ' FROM salarios.'||c_origen_detalle_tabla||' d '||
			' INNER JOIN '||vtablaref||' w ON w.'||vcamporef||'= d.'||vcamporef||
			' INNER JOIN salarios.'||c_origen_cabecera_tabla ||' c ON c.'||c_origen_cabecera_id ||' = d.'||c_origen_cabecera_id ||
			' WHERE  c.'||c_origen_cabecera_id ||'='||in_valor_id_cabecera; 
		ELSE 
		*/
		-- Las siguientes tablas si contienen id_funcionario:
		-- ....planillas_gratificaciones_ocasionales_detalles,
		-- ....planillas_ra_detalles,
		-- ....planillas_re_detalles,
		-- ....planillas_salarios_detalles,
		    vconsulta = ' FROM salarios_contratados.'||c_origen_detalle_tabla||' d '||
			' INNER JOIN salarios_contratados.'||c_origen_cabecera_tabla ||' c ON c.'||c_origen_cabecera_id ||' = d.'||c_origen_cabecera_id ||
			' WHERE  c.'||c_origen_cabecera_id ||'='||in_valor_id_cabecera;  

		--END IF;
		
		-- Se concatena el insert into select
		sql = 'INSERT INTO salarios_contratados.funcionarios_aguinaldos( '
		    ||'id_administracion, id_funcionario, gestion, id_mes, '
		    ||'id_oficina, id_tipo_aguinaldo, monto, id_detalle_planilla, objeto_gasto,'
		    ||'estado, usu_alta, fec_alta, ip_alta) '
		    ||'SELECT '||in_id_administracion||',id_funcionario, c.gestion, c.id_mes, '
		    ||'d.id_oficina,'||n_id_tipo_aguinaldo||','||in_n_campo_monto||','||c_origen_detalle_id||',d.objeto_gasto'||
		    ',0,'||E'\''||in_usuario||E'\',now(),'||E'\''||in_ip_usuario||E'\' ';

	        sql = sql || vconsulta;

	        execute sql;

	        GET DIAGNOSTICS cantidad_registros = ROW_COUNT;
		IF cantidad_registros = 0 THEN
		   RAISE EXCEPTION 'No se copio ningun registro de la tabla % ',c_origen_detalle_tabla;
		END IF;
 	END IF; 

	
            
RETURN NEXT cantidad_registros;
END;
]]></definition>
</function>

<function name="deshacer_aplicacion_de_descuentos_varios_v2"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="void"/>
	</return-type>
	<parameter name="in_id_planilla_salario">
		<type name="integer"/>
	</parameter>
	<definition><![CDATA[
DECLARE

rDtosJudiciales RECORD;

ADMINISTRACION INTEGER := 0;
GESTION1 INTEGER := 0;
MES INTEGER := 0;

BEGIN

Select id_administracion,
gestion,
id_mes
INTO 
ADMINISTRACION, 
GESTION1, 
MES
from salarios_contratados.planillas_salarios 
where id_planilla_salario=IN_ID_PLANILLA_SALARIO;

-- Para deshacer los efectos de la aplicación de descuentos de un mes:

-- reiniciar el saldo en los descuentos judiciales:
FOR rDtosJudiciales IN
	Select 
		v.id_judicial,
		v.monto
	from salarios_contratados.descuentos_judiciales v
	where v.id_mes = MES
	and v.gestion = GESTION1
	and v.id_administracion = ADMINISTRACION
	and v.id_tipo_descuento = (Select id_tipo_descuento from salarios.tipos_descuentos where abreviatura='DJCG')
LOOP
	UPDATE salarios_contratados.judiciales 
	   SET monto_saldo = monto_saldo + rDtosJudiciales.monto,
		estado=0, 
	       usu_modi=user::varchar(30), 
		fec_modi=now(), 
		ip_modi=inet_client_addr()::varchar(30)
	where id_judicial = rDtosJudiciales.id_judicial
	;
END LOOP;

-- cambiar estado a los descuentos_judiciales a ser aplicados
-- solamente a los que fueron afectados en esta planilla de descuentos:
UPDATE salarios_contratados.descuentos_judiciales
   SET estado=0,
usu_modi=current_user::varchar(30), fec_modi=now(), ip_modi=inet_client_addr()::varchar(30)
WHERE id_descuento_judicial in (
Select z.id_descuento_judicial
FROM salarios_contratados.planillas_descuentos_detalles z
WHERE z.id_planilla_descuento = (Select a.id_planilla_descuento 
				from salarios_contratados.planillas_descuentos a
				where a.id_planilla_salario = IN_ID_PLANILLA_SALARIO)
AND z.id_descuento_judicial is not null
)
 ;

UPDATE salarios_contratados.descuentos_aso
   SET estado = 0,
usu_modi=current_user::varchar(30), fec_modi=now(), ip_modi=inet_client_addr()::varchar(30)
WHERE id_descuento_aso in (
Select z.id_descuento_aso
FROM salarios_contratados.planillas_descuentos_detalles z
WHERE z.id_planilla_descuento = (Select a.id_planilla_descuento 
				from salarios_contratados.planillas_descuentos a
				where a.id_planilla_salario=IN_ID_PLANILLA_SALARIO)
AND z.id_descuento_aso is not null
)
;


-- borrar el detalle de la planilla de descuento
DELETE FROM salarios_contratados.planillas_descuentos_detalles
WHERE id_planilla_descuento = (Select a.id_planilla_descuento 
				from salarios_contratados.planillas_descuentos a
				where a.id_planilla_salario=IN_ID_PLANILLA_SALARIO)
;

DELETE FROM salarios_contratados.planillas_descuentos
WHERE id_planilla_descuento = (Select a.id_planilla_descuento 
				from salarios_contratados.planillas_descuentos a
				where a.id_planilla_salario=IN_ID_PLANILLA_SALARIO)
;


-- poner a cero los datos en el detalle de la planilla de salario
UPDATE salarios_contratados.planillas_salarios_detalles
   SET 
        importe_liquido_sin_descuentos_varios=0, 
	importe_descuentos_varios_solicitado=0, 
        importe_descuentos_varios_aplicado=0, 
	importe_descuentos_varios_diferencia=0, 
        importe_liquido_con_descuentos_varios=0,
        monto_multa=monto_multa-COALESCE(monto_horas_no_compensadas,0),
	--monto_multa=0, 
	--monto_total_aporte=(monto_presupuestado-monto_devengado)+monto_aporte, 
	usu_modi=current_user::varchar(30), 
	fec_modi=now(), ip_modi=inet_client_addr()::varchar(30)
where id_planilla_salario=IN_ID_PLANILLA_SALARIO;

-- poner a cero los totales en la cabecera de la planilla de salario
-- cambiar a estado 0 (creado) a la planilla de salario
UPDATE salarios_contratados.planillas_salarios
   SET id_estado=0,
	usu_modi=current_user::varchar(30), fec_modi=now(), ip_modi=inet_client_addr()::varchar(30)
where id_planilla_salario=IN_ID_PLANILLA_SALARIO;


DELETE FROM salarios_contratados.multas_aplicadas_detalles
WHERE id_multa_aplicada = (
Select y.id_multa_aplicada
from salarios_contratados.multas_aplicadas y
where y.id_planilla_salario=IN_ID_PLANILLA_SALARIO
);

UPDATE salarios_contratados.multas_solicitadas 
SET estado=0,
       usu_modi=user::varchar(30), 
	fec_modi=now(), 
	ip_modi=inet_client_addr()::varchar(30)
WHERE
id_multa_solicitada=(Select id_multa_solicitada 
from salarios_contratados.multas_aplicadas 
where id_planilla_salario=IN_ID_PLANILLA_SALARIO)
;

DELETE FROM salarios_contratados.multas_aplicadas
where id_planilla_salario=IN_ID_PLANILLA_SALARIO;
-- DESHACER MULTAS POR HORAS NO COMPENSADAS
-- 11.10.2016 11:10
-- Se agrega llamada a la función deshacer_horas_no_compensadas_aplicadas_contratados
PERFORM salarios_contratados.deshacer_horas_no_compensadas_aplicadas_contratados(IN_ID_PLANILLA_SALARIO);
RETURN;
END;
]]></definition>
</function>

<function name="deshacer_horas_no_compensadas_aplicadas_contratados"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="1000">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<parameter name="id_funcionario_hnc">
		<type name="integer"/>
	</parameter>
	<parameter name="id_detalle_planilla_salario_hnc">
		<type name="integer"/>
	</parameter>
	</return-type>
	<parameter name="in_id_planilla_salario" in="true">
		<type name="integer"/>
	</parameter>
	<definition><![CDATA[
DECLARE
-- --------------------------------------------------------------------------------------   
-- Almacena la estructura de filas obtenido a partir de la funcion de calculo de multas por horas no compensadas:
   rHorasNoCompensadasAplicadas RECORD;
-- --------------------------------------------------------------------------------------
BEGIN
-- --------------------------------------------------------------------------------------
--   Objetivo: Deshacer las multas por horas no compensadas a funcionarios contratados aplicados.
--     Creado: 19/09/2016 09:44:40
-- Modificado: 
--      Autor: Lic. Gustavo Eloy Alcaráz Bogado
-- --------------------------------------------------------------------------------------

   FOR rHorasNoCompensadasAplicadas IN
      SELECT 
         hnc.id_funcionario, -- 1
         hnc.id_detalle_planilla_salario -- 2
      FROM 
         salarios_contratados.horas_no_compensadas hnc
         LEFT JOIN salarios_contratados.planillas_salarios_detalles psd ON psd.id_planilla_salario_detalle=hnc.id_detalle_planilla_salario
         INNER JOIN salarios_contratados.planillas_salarios ps ON ps.id_planilla_salario=psd.id_planilla_salario AND ps.id_planilla_salario=IN_ID_PLANILLA_SALARIO
      WHERE
         hnc.estado=1
   LOOP
      -- --------------------------------------------------------------------------------------
      -- ACTUALIZA LA TABLA salarios_contratados.detalles_planillas_salarios_contratados
      UPDATE salarios_contratados.planillas_salarios_detalles
      SET 
         horas_no_compensadas = 0, -- 1
         monto_horas_no_compensadas = 0, -- 2
         usu_modi=current_user::varchar(30), 
         fec_modi=now(), 
         ip_modi=inet_client_addr()::varchar(30)
      WHERE 
         id_planilla_salario_detalle = rHorasNoCompensadasAplicadas.id_detalle_planilla_salario;
      -- --------------------------------------------------------------------------------------   
      -- ACTUALIZA LA TABLA salarios_contratados.horas_no_compensadas
      UPDATE salarios_contratados.horas_no_compensadas
      SET
         id_detalle_planilla_salario = 0,
	 estado = 0,
         usu_modi=current_user::varchar(30), 
         fec_modi=now(), 
         ip_modi=inet_client_addr()::varchar(30)
      WHERE 
         id_detalle_planilla_salario = rHorasNoCompensadasAplicadas.id_detalle_planilla_salario AND estado=1;
      -- -------------------------------------------------------------------------------------- 
      -- RETORNA VALORES DE LA FUNCION ACTUAL 
      id_funcionario_hnc := rHorasNoCompensadasAplicadas.id_funcionario;
      id_detalle_planilla_salario_hnc := rHorasNoCompensadasAplicadas.id_detalle_planilla_salario;
      -- --------------------------------------------------------------------------------------
      RETURN NEXT;
   END LOOP;
END;
]]></definition>
</function>

<function name="estimacion_sueldo_re_ra"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="1000">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<parameter name="id_funcionario">
		<type name="integer"/>
	</parameter>
	<parameter name="cedula_funcionario">
		<type name="text"/>
	</parameter>
	<parameter name="ape_nom_funcionario">
		<type name="text"/>
	</parameter>
	<parameter name="monto_contrato">
		<type name="integer"/>
	</parameter>
	<parameter name="sueldo_remunerado">
		<type name="integer"/>
	</parameter>
	<parameter name="sueldo_estimado">
		<type name="integer"/>
	</parameter>
	<parameter name="total_sueldo_temporal">
		<type name="integer"/>
	</parameter>
	<parameter name="monto_extra_tope">
		<type name="integer"/>
	</parameter>
	<parameter name="monto_extra_remunerado">
		<type name="integer"/>
	</parameter>
	<parameter name="monto_extra_diferencia">
		<type name="integer"/>
	</parameter>
	<parameter name="hs_extras_hecha">
		<type name="integer"/>
	</parameter>
	<parameter name="hs_extras_tope">
		<type name="numeric"/>
	</parameter>
	</return-type>
	<parameter name="in_id_administracion" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_mes_corte" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_gestion" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_id_funcionario" in="true">
		<type name="text"/>
	</parameter>
	<parameter name="in_porcentaje_tope" in="true">
		<type name="double precision"/>
	</parameter>
	<parameter name="in_constante_calculo_re_ra" in="true">
		<type name="double precision"/>
	</parameter>
	<definition><![CDATA[
BEGIN
/*
  * Funcion para generar un listado de las liquidaciones de los funcionarios contratados por mes y gestion sobre
  * su sueldo, re y ra
  * Creado    : 2014-10-07 17:33:00
  * Modificado: 2014-10-08 14:14:00
  * Autor: Lic. Gustavo Eloy Alcaraz Bogado
  * Parametros:
  *            in_id_administracion administración del proceso		
  *            in_mes_corte         mes de corte de consulta
  *            in_gestion           ejercicio aplicado 
  *            in_id_funcionario    '0' trae todos los funcionarios contratados o '902,687' personalizado
  *            in_porcentaje_tope   porcentaje tope de cobro
  *	       in_constante_re_ra   factor de calculo fijo de hs. extras
  * Descripcion:  Genera un listado detalles para otra función que la invoca
  * ------------  
  */
RETURN QUERY 
SELECT
   estimado.id_funcionario::integer,--1
   estimado.cedula_funcionario::text,--2
   estimado.ape_nom_funcionario::text,--3
   estimado.monto_contrato::integer,--4
   estimado.total_anual_sueldo::integer AS sueldo_remunerado,--5
   estimado.monto_estimado::integer AS sueldo_estimado,--6
   (estimado.total_anual_sueldo+estimado.monto_estimado)::integer AS total_sueldo_temporal,--7
   ((estimado.monto_estimado+estimado.total_anual_sueldo)*in_porcentaje_tope*0.01)::integer AS monto_extra_tope,--8
   (total_anual_extra)::integer AS monto_extra_remunerado,--9
   (((estimado.monto_estimado+estimado.total_anual_sueldo)*in_porcentaje_tope*0.01)::numeric(12,0)-(total_anual_extra))::integer AS monto_extra_diferencia,--10
   total_anual_hs::integer AS hs_extras_hecha,--11
   (((((estimado.monto_estimado+estimado.total_anual_sueldo)*in_porcentaje_tope*0.01)::numeric(12,0)-(total_anual_extra))::integer)::numeric(12,1)/((CASE WHEN estimado.monto_contrato::integer>0 THEN estimado.monto_contrato::integer ELSE 1 END)*in_constante_calculo_re_ra))::NUMERIC(12,2) AS hs_extras_tope--12
FROM
   (
	SELECT
	   *,
	   (anual.ene_rem+ anual.feb_rem+ anual.mar_rem+ anual.abr_rem+ anual.may_rem+anual.jun_rem+
	    anual.jul_rem+anual.ago_rem+anual.sep_rem+anual.oct_rem+anual.nov_rem+anual.dic_rem) AS total_anual_sueldo,
	    (anual.ene_extra+ anual.feb_extra+ anual.mar_extra+ anual.abr_extra+ anual.may_extra+anual.jun_extra+
	    anual.jul_extra+anual.ago_extra+anual.sep_extra+anual.oct_extra+anual.nov_extra+anual.dic_extra) AS total_anual_extra,
	   (anual.ene_monto+anual.feb_monto+anual.mar_monto+anual.abr_monto+anual.may_monto+anual.jun_monto+
	    anual.jul_monto+anual.ago_monto+anual.sep_monto+anual.oct_monto+anual.nov_monto+anual.dic_monto) AS total_anual_monto,
	   (anual.ene_hs+anual.feb_hs+anual.mar_hs+anual.abr_hs+anual.may_hs+jun_hs+
	    anual.jul_hs+anual.ago_hs+anual.sep_hs+anual.oct_hs+anual.nov_hs+dic_hs) total_anual_hs
	FROM
	(
	SELECT
	   f.id_funcionario,
	   trim(replace(to_char(f.cedula_funcionario::numeric,'999,999,999,999'),',','.')) as cedula_funcionario,
	   f.ape_nom_funcionario,
	   --MONTO CONTRATO
	   contrato.monto_contrato,
	   --ENERO
	   COALESCE((ene.monto_devengado+ene.monto_multa),0) as ene_rem,
	   COALESCE((ene.monto_re+ene.monto_ra),0) as ene_extra,
	   COALESCE((ene.monto_devengado+ene.monto_multa+ene.monto_re+ene.monto_ra),0) as ene_monto,
	   COALESCE((ene.horas_re+ene.horas_ra),0) as ene_hs,
	   --FEBRERO
	   COALESCE((feb.monto_devengado+feb.monto_multa),0) as feb_rem,
	   COALESCE((feb.monto_re+feb.monto_ra),0) as feb_extra,
	   COALESCE((feb.monto_devengado+feb.monto_multa+feb.monto_re+feb.monto_ra),0) as feb_monto,
	   COALESCE((feb.horas_re+feb.horas_ra),0) as feb_hs,
	   --MARZO
	   COALESCE((mar.monto_devengado+mar.monto_multa),0) as mar_rem,
	   COALESCE((mar.monto_re+mar.monto_ra),0) as mar_extra,
	   COALESCE((mar.monto_devengado+mar.monto_multa+mar.monto_re+mar.monto_ra),0) as mar_monto,
	   COALESCE((mar.horas_re+mar.horas_ra),0) as mar_hs,
	   --ABRIL
	   COALESCE((abr.monto_devengado+abr.monto_multa),0) as abr_rem,
	   COALESCE((abr.monto_re+abr.monto_ra),0) as abr_extra,
	   COALESCE((abr.monto_devengado+abr.monto_multa+abr.monto_re+abr.monto_ra),0) as abr_monto,
	   COALESCE((abr.horas_re+abr.horas_ra),0) as abr_hs,
	   --MAYO
	   COALESCE((may.monto_devengado+may.monto_multa),0) as may_rem,
	   COALESCE((may.monto_re+may.monto_ra),0) as may_extra,
	   COALESCE((may.monto_devengado+may.monto_multa+may.monto_re+may.monto_ra),0) as may_monto,
	   COALESCE((may.horas_re+may.horas_ra),0) as may_hs,
	   --JUNIO
	   COALESCE((jun.monto_devengado+jun.monto_multa),0) as jun_rem,
	   COALESCE((jun.monto_re+jun.monto_ra),0) as jun_extra,
	   COALESCE((jun.monto_devengado+jun.monto_multa+jun.monto_re+jun.monto_ra),0) as jun_monto,
	   COALESCE((jun.horas_re+jun.horas_ra),0) as jun_hs,
	   --JULIO
	   COALESCE((jul.monto_devengado+jul.monto_multa),0) as jul_rem,
	   COALESCE((jul.monto_re+jul.monto_ra),0) as jul_extra,
	   COALESCE((jul.monto_devengado+jul.monto_multa+jul.monto_re+jul.monto_ra),0) as jul_monto,
	   COALESCE((jul.horas_re+jul.horas_ra),0) as jul_hs,
	   --AGOSTO
	   COALESCE((ago.monto_devengado+ago.monto_multa),0) as ago_rem,
	   COALESCE((ago.monto_re+ago.monto_ra),0) as ago_extra,
	   COALESCE((ago.monto_devengado+ago.monto_multa+ago.monto_re+ago.monto_ra),0) as ago_monto,
	   COALESCE((ago.horas_re+ago.horas_ra),0) as ago_hs,
	   --SEPTIEMBRE
	   COALESCE((sep.monto_devengado+sep.monto_multa),0) as sep_rem,
	   COALESCE((sep.monto_re+sep.monto_ra),0) as sep_extra,
	   COALESCE((sep.monto_devengado+sep.monto_multa+sep.monto_re+sep.monto_ra),0) as sep_monto,
	   COALESCE((sep.horas_re+sep.horas_ra),0) as sep_hs,
	   --OCTUBRE
	   COALESCE((oct.monto_devengado+oct.monto_multa),0) as oct_rem,
	   COALESCE((oct.monto_re+oct.monto_ra),0) as oct_extra,
	   COALESCE((oct.monto_devengado+oct.monto_multa+oct.monto_re+oct.monto_ra),0) as oct_monto,
	   COALESCE((oct.horas_re+oct.horas_ra),0) as oct_hs,
	   --NOVIEMBRE
	   COALESCE((nov.monto_devengado+nov.monto_multa),0) as nov_rem,
	   COALESCE((nov.monto_re+nov.monto_ra),0) as nov_extra,
	   COALESCE((nov.monto_devengado+nov.monto_multa+nov.monto_re+nov.monto_ra),0) as nov_monto,
	   COALESCE((nov.horas_re+nov.horas_ra),0) as nov_hs,
	   --DICIEMBRE
	   COALESCE((dic.monto_devengado+dic.monto_multa),0) as dic_rem,
	   COALESCE((dic.monto_re+dic.monto_ra),0) as dic_extra,
	   COALESCE((dic.monto_devengado+dic.monto_multa+dic.monto_re+dic.monto_ra),0) as dic_monto,
	   COALESCE((dic.horas_re+dic.horas_ra),0) as dic_hs,
	      --ESTIMACION
	   (EXTRACT(MONTH FROM contrato.hasta)-in_mes_corte)*contrato.monto_contrato as monto_estimado
	FROM
	   legajos.funcionarios f
	   --LEFT JOIN legajos.situacion_administrativa_actual saa ON saa.id_funcionario=f.id_funcionario
	   LEFT JOIN (select distinct x.id_funcionario,x.id_tipo_funcionario from legajos.situacion_administrativa_actual x) saa ON saa.id_funcionario=f.id_funcionario
	   LEFT JOIN (SELECT * FROM salarios_contratados.estimacion_sueldo_re_ra_detalles(in_id_administracion, CASE WHEN in_mes_corte>= 1 THEN  1 ELSE 0 END,in_gestion,'0')) ene ON ene.id_funcionario=f.id_funcionario
	   LEFT JOIN (SELECT * FROM salarios_contratados.estimacion_sueldo_re_ra_detalles(in_id_administracion, CASE WHEN in_mes_corte>= 2 THEN  2 ELSE 0 END,in_gestion,'0')) feb ON feb.id_funcionario=f.id_funcionario
	   LEFT JOIN (SELECT * FROM salarios_contratados.estimacion_sueldo_re_ra_detalles(in_id_administracion, CASE WHEN in_mes_corte>= 3 THEN  3 ELSE 0 END,in_gestion,'0')) mar ON mar.id_funcionario=f.id_funcionario
	   LEFT JOIN (SELECT * FROM salarios_contratados.estimacion_sueldo_re_ra_detalles(in_id_administracion, CASE WHEN in_mes_corte>= 4 THEN  4 ELSE 0 END,in_gestion,'0')) abr ON abr.id_funcionario=f.id_funcionario
	   LEFT JOIN (SELECT * FROM salarios_contratados.estimacion_sueldo_re_ra_detalles(in_id_administracion, CASE WHEN in_mes_corte>= 5 THEN  5 ELSE 0 END,in_gestion,'0')) may ON may.id_funcionario=f.id_funcionario
	   LEFT JOIN (SELECT * FROM salarios_contratados.estimacion_sueldo_re_ra_detalles(in_id_administracion, CASE WHEN in_mes_corte>= 6 THEN  6 ELSE 0 END,in_gestion,'0')) jun ON jun.id_funcionario=f.id_funcionario
	   LEFT JOIN (SELECT * FROM salarios_contratados.estimacion_sueldo_re_ra_detalles(in_id_administracion, CASE WHEN in_mes_corte>= 7 THEN  7 ELSE 0 END,in_gestion,'0')) jul ON jul.id_funcionario=f.id_funcionario
	   LEFT JOIN (SELECT * FROM salarios_contratados.estimacion_sueldo_re_ra_detalles(in_id_administracion, CASE WHEN in_mes_corte>= 8 THEN  8 ELSE 0 END,in_gestion,'0')) ago ON ago.id_funcionario=f.id_funcionario
	   LEFT JOIN (SELECT * FROM salarios_contratados.estimacion_sueldo_re_ra_detalles(in_id_administracion, CASE WHEN in_mes_corte>= 9 THEN  9 ELSE 0 END,in_gestion,'0')) sep ON sep.id_funcionario=f.id_funcionario
	   LEFT JOIN (SELECT * FROM salarios_contratados.estimacion_sueldo_re_ra_detalles(in_id_administracion, CASE WHEN in_mes_corte>=10 THEN 10 ELSE 0 END,in_gestion,'0')) oct ON oct.id_funcionario=f.id_funcionario
	   LEFT JOIN (SELECT * FROM salarios_contratados.estimacion_sueldo_re_ra_detalles(in_id_administracion, CASE WHEN in_mes_corte>=11 THEN 11 ELSE 0 END,in_gestion,'0')) nov ON nov.id_funcionario=f.id_funcionario
	   LEFT JOIN (SELECT * FROM salarios_contratados.estimacion_sueldo_re_ra_detalles(in_id_administracion, CASE WHEN in_mes_corte>=12 THEN 12 ELSE 0 END,in_gestion,'0')) dic ON dic.id_funcionario=f.id_funcionario
	   INNER JOIN (
		   SELECT 
		   fc.id_funcionario,
		   fc.id_tipo_contrato,
		   tc.descripcion_tipo,
		   fc.desde,
		   fc.hasta,
		   fc.monto_contrato::numeric(12,0)
		FROM 
		   salarios_contratados.funcionarios_contratos fc
		   LEFT JOIN legajos.tipo_contrato tc ON tc.id_tipo_contrato=fc.id_tipo_contrato
		WHERE
		   fc.estado AND
		   fc.id_administracion=in_id_administracion AND
		   --fc.id_tipo_contrato=1 AND
		   fc.gestion=in_gestion AND
		   in_mes_corte between EXTRACT(MONTH FROM fc.desde) AND EXTRACT(MONTH FROM fc.hasta)
	   ) contrato ON contrato.id_funcionario=f.id_funcionario
	WHERE
	   f.estado_funcionario AND
	   saa.id_tipo_funcionario='CON' AND
	   f.id_administracion IN(0,in_id_administracion) AND
           CASE
              WHEN 
	         in_id_funcionario='0' 
              THEN 
	         f.id_funcionario>0
              ELSE 
	         f.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[])
              END 
   ) anual
) estimado;
END;
]]></definition>
</function>

<function name="estimacion_sueldo_re_ra_detalles"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="1000">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<parameter name="id_funcionario">
		<type name="integer"/>
	</parameter>
	<parameter name="monto_devengado">
		<type name="numeric"/>
	</parameter>
	<parameter name="monto_multa">
		<type name="numeric"/>
	</parameter>
	<parameter name="monto_re">
		<type name="numeric"/>
	</parameter>
	<parameter name="horas_re">
		<type name="integer"/>
	</parameter>
	<parameter name="monto_ra">
		<type name="numeric"/>
	</parameter>
	<parameter name="horas_ra">
		<type name="integer"/>
	</parameter>
	</return-type>
	<parameter name="in_id_administracion" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_id_mes" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_gestion" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_id_funcionario" in="true">
		<type name="text"/>
	</parameter>
	<definition><![CDATA[
BEGIN
/*
  * Funcion para generar un listado de las liquidaciones de los funcionarios contratados por mes y gestion sobre
  * su sueldo, re y ra
  * Creado    : 2014-10-06 17:33:00
  * Modificado: 2014-10-06 18:15:00
  * Autor: Lic. Gustavo Eloy Alcaraz Bogado
  * Parametros:
  *            in_id_administracion administración del proceso		
  *            in_id_mes            mes de proceso
  *            in_gestion           ejercicio aplicado 
  *            in_id_funcionario    '0' trae todos los funcionarios contratados o '902,687' personalizado
  * Descripcion:  Genera un listado detalles para otra función que la invoca
  * ------------  
  */
RETURN QUERY 
--SALARIOS [DEVENGADO-MULTAS]
SELECT
   psd.id_funcionario,
   COALESCE(sum(psd.monto_devengado)::numeric(12,0),0) as monto_devengado,
   COALESCE(sum(psd.monto_multa)::numeric(12,0),0) as monto_multa,
   COALESCE(sum(re.monto_re)::numeric(12,0),0) as monto_re,
   COALESCE(sum(re.cantidad_horas)::integer,0) as cantidad_horas_re,
   COALESCE(sum(ra.monto_ra)::numeric(12,0),0) as monto_ra,
   COALESCE(sum(ra.cantidad_horas)::integer,0) as cantidad_horas_ra
FROM
   salarios_contratados.planillas_salarios ps
   LEFT JOIN salarios_contratados.planillas_salarios_detalles psd ON psd.id_planilla_salario=ps.id_planilla_salario
   LEFT JOIN(
	--RE
	SELECT
	   pred.id_funcionario,
	   sum(pred.monto)::integer as monto_re,
	   sum(pred.cantidad_horas)::integer as cantidad_horas
	FROM
	   salarios_contratados.planillas_re pre
	   LEFT JOIN salarios_contratados.planillas_re_detalles pred ON pred.id_planilla_re=pre.id_planilla_re
	WHERE
	   pre.id_mes=in_id_mes AND
	   pre.gestion=in_gestion AND
	   pre.estado=1 AND
	   pre.id_administracion=in_id_administracion   
	GROUP BY 
	   pred.id_funcionario
   ) re ON re.id_funcionario=psd.id_funcionario
   LEFT JOIN(
	--RA
	SELECT
	   prad.id_funcionario,
	   sum(prad.monto)::integer as monto_ra,
	   sum(prad.cantidad_horas)::integer as cantidad_horas
	FROM
	   salarios_contratados.planillas_ra pra
	   LEFT JOIN salarios_contratados.planillas_ra_detalles prad ON prad.id_planilla_ra=pra.id_planilla_ra
	WHERE
	   pra.id_mes=in_id_mes AND
	   pra.gestion=in_gestion AND
	   pra.estado=1 AND
	   pra.id_administracion=in_id_administracion   
	GROUP BY 
	   prad.id_funcionario
   ) ra ON ra.id_funcionario=psd.id_funcionario   
WHERE
   ps.id_mes=in_id_mes AND
   ps.gestion=in_gestion AND
   ps.id_estado=1 AND
   ps.id_administracion=in_id_administracion AND
   --ps.id_tipo_contrato=1 AND
   CASE
      WHEN 
	 in_id_funcionario='0' 
      THEN 
	 psd.id_funcionario>0
      ELSE 
	 psd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[])
   END    
GROUP BY 
   psd.id_funcionario;
END;
]]></definition>
</function>

<function name="funcion_auditoria_descuentos_aso"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="trigger"/>
	</return-type>
	<definition><![CDATA[ 
DECLARE 
BEGIN 
-- Crea un registro en usuario_audit para reflejar las operaciones 
-- realizadas en usuario utiliza las variables especiales TG_OP para efectuar la operacion
IF (TG_OP = 'DELETE') THEN 
INSERT INTO auditoria_salarios_contratados.descuentos_aso 
SELECT 
OLD.id_descuentos_aso, 
OLD.id_administracion, 
OLD.id_funcionario, 
OLD.id_mes,
OLD.gestion,
OLD.id_tipo_descuento,
OLD.monto,
OLD.ejecutado, 
OLD.usu_alta, 
OLD.fec_alta, 
OLD.usu_modi, 
OLD.fec_modi, 
OLD.ip_alta, 
OLD.ip_modi,
'D',  user, now(); 
RETURN OLD; 
ELSIF (TG_OP = 'UPDATE') THEN 
INSERT INTO auditoria_salarios_contratados.descuentos_aso 
SELECT 
NEW.id_descuentos_aso, 
NEW.id_administracion, 
NEW.id_funcionario, 
NEW.id_mes, 
NEW.gestion,
NEW.id_tipo_descuento,
NEW.monto,
new.ejecutado,
NEW.usu_alta, 
NEW.fec_alta, 
NEW.usu_modi, 
NEW.fec_modi, 
NEW.ip_alta, 
NEW.ip_modi,
'U',  user, now();
RETURN NEW;
ELSIF (TG_OP = 'INSERT') THEN 
INSERT INTO auditoria_salarios_contratados.descuentos_aso 
SELECT 
NEW.id_descuentos_aso, 
NEW.id_administracion, 
NEW.id_funcionario, 
NEW.id_mes, 
NEW.gestion,
NEW.id_tipo_descuento,
NEW.monto,
new.ejecutado,
NEW.usu_alta, 
NEW.fec_alta, 
NEW.usu_modi, 
NEW.fec_modi, 
NEW.ip_alta, 
NEW.ip_modi,
'I',  user, now(); 
RETURN NEW; 
END IF; 
RETURN NULL; -- el resultado es ignorado puesto que este es un trigger AFTER 
END;
]]></definition>
</function>

<function name="funcion_auditoria_descuentos_judiciales"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="trigger"/>
	</return-type>
	<definition><![CDATA[ 
DECLARE 
BEGIN 
-- Crea un registro en usuario_audit para reflejar las operaciones 
-- realizadas en usuario utiliza las variables especiales TG_OP para efectuar la operacion
IF (TG_OP = 'DELETE') THEN 
INSERT INTO auditoria_salarios_contratados.descuentos_judiciales 
SELECT 
OLD.id_descuento_judicial,
OLD.id_administracion,
OLD.id_tipo_descuento,
OLD.id_judicial,
OLD.id_funcionario,
OLD.id_mes,
OLD.gestion,
OLD.monto,
OLD.ejecutado,
OLD.usu_alta, 
OLD.fec_alta, 
OLD.usu_modi, 
OLD.fec_modi, 
OLD.ip_alta, 
OLD.ip_modi,
'D',  user, now(); 
RETURN OLD; 
ELSIF (TG_OP = 'UPDATE') THEN 
INSERT INTO auditoria_salarios_contratados.descuentos_judiciales 
SELECT 
NEW.id_descuentos_judiciales,
NEW.id_administracion,
NEW.id_tipo_descuento,
NEW.id_judicial,
NEW.id_funcionario,
NEW.id_mes,
NEW.gestion,
NEW.monto,
NEW.ejecutado,
NEW.usu_alta, 
NEW.fec_alta, 
NEW.usu_modi, 
NEW.fec_modi, 
NEW.ip_alta, 
NEW.ip_modi, 
'U',  user, now();
RETURN NEW;
ELSIF (TG_OP = 'INSERT') THEN 
INSERT INTO auditoria_salarios_contratados.descuentos_judiciales 
SELECT 
NEW.id_descuentos_judiciales,
NEW.id_administracion,
NEW.id_tipo_descuento,
NEW.id_judicial,
NEW.id_funcionario,
NEW.id_mes,
NEW.gestion,
NEW.monto,
NEW.ejecutado,
NEW.usu_alta, 
NEW.fec_alta, 
NEW.usu_modi, 
NEW.fec_modi, 
NEW.ip_alta, 
NEW.ip_modi, 
'I',  user, now(); 
RETURN NEW; 
END IF; 
RETURN NULL; -- el resultado es ignorado puesto que este es un trigger AFTER 
END; 
]]></definition>
</function>

<function name="funcion_auditoria_detalle_planilla_gratificacion_ocacional"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="trigger"/>
	</return-type>
	<definition><![CDATA[ 
DECLARE 
BEGIN 
IF (TG_OP = 'DELETE') THEN 
INSERT INTO auditoria_salarios_contratados.detalle_planilla_gratificacion_ocacional(
	id_detalle_planilla_gratificacion_ocacional, 
	id_administracion, 
	id_oficina, 
	id_planilla_gratificacion_ocacional, 
	id_funcionario, 
	importe_gratificacion,
	importe_iva, 
	usu_alta, 
	fec_alta, 
	usu_modi, 
	fec_modi, 
	ip_alta, 
	ip_modi, 
	operacion_auditoria, 
	usuario_auditoria, 
	fecha_auditoria
)
    VALUES (
	OLD.id_detalle_planilla_gratificacion_ocacional, 
	OLD.id_administracion, 
	OLD.id_oficina, 
	OLD.id_planilla_gratificacion_ocacional, 
	OLD.id_funcionario, 
	OLD.importe_gratificacion,
	OLD.importe_iva,  
	OLD.usu_alta, 
	OLD.fec_alta, 
	OLD.usu_modi, 
	OLD.fec_modi, 
	OLD.ip_alta, 
	OLD.ip_modi, 
	'D', 
	current_user, 
	now())
;

RETURN OLD;

ELSIF (TG_OP = 'UPDATE') THEN 

INSERT INTO auditoria_salarios_contratados.detalle_planilla_gratificacion_ocacional(
	id_detalle_planilla_gratificacion_ocacional, 
	id_administracion, 
	id_oficina, 
	id_planilla_gratificacion_ocacional, 
	id_funcionario, 
	importe_gratificacion,
	importe_iva,  
	usu_alta, 
	fec_alta, 
	usu_modi, 
	fec_modi, 
	ip_alta, 
	ip_modi, 
	operacion_auditoria, 
	usuario_auditoria, 
	fecha_auditoria
)
    VALUES (
	NEW.id_detalle_planilla_gratificacion_ocacional, 
	NEW.id_administracion, 
	NEW.id_oficina, 
	NEW.id_planilla_gratificacion_ocacional, 
	NEW.id_funcionario, 
	NEW.importe_gratificacion,
	NEW.importe_iva,
	NEW.usu_alta, 
	NEW.fec_alta, 
	NEW.usu_modi, 
	NEW.fec_modi, 
	NEW.ip_alta, 
	NEW.ip_modi, 
	'U', 
	current_user, 
	now())
;

RETURN NEW;

ELSIF (TG_OP = 'INSERT') THEN 

INSERT INTO auditoria_salarios_contratados.detalle_planilla_gratificacion_ocacional(
	id_detalle_planilla_gratificacion_ocacional, 
	id_administracion, 
	id_oficina, 
	id_planilla_gratificacion_ocacional, 
	id_funcionario, 
	importe_gratificacion,
	importe_iva, 
	usu_alta, 
	fec_alta, 
	usu_modi, 
	fec_modi, 
	ip_alta, 
	ip_modi, 
	operacion_auditoria, 
	usuario_auditoria, 
	fecha_auditoria
)
    VALUES (
	NEW.id_detalle_planilla_gratificacion_ocacional, 
	NEW.id_administracion, 
	NEW.id_oficina, 
	NEW.id_planilla_gratificacion_ocacional, 
	NEW.id_funcionario, 
	NEW.importe_gratificacion,
	new.importe_iva, 
	NEW.usu_alta, 
	NEW.fec_alta, 
	NEW.usu_modi, 
	NEW.fec_modi, 
	NEW.ip_alta, 
	NEW.ip_modi, 
	'I', 
	current_user, 
	now())
;

RETURN NEW;

END IF; 

END; 
]]></definition>
</function>

<function name="funcion_auditoria_detalles_planillas_salarios"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="trigger"/>
	</return-type>
	<definition><![CDATA[ 
DECLARE 
BEGIN 
-- Crea un registro en usuario_audit para reflejar las operaciones 
-- realizadas en usuario utiliza las variables especiales TG_OP para efectuar la operacion
IF (TG_OP = 'DELETE') THEN 
INSERT INTO auditoria_salarios_contratados.detalles_planillas_salarios(
            id_detalle_planilla_salario, id_administracion, id_oficina, id_funcionario, 
            id_planilla_salario, dias_trabajados, monto_presupuestado, monto_devengado, 
            monto_multa, monto_iva, importe_liquido_sin_descuentos_varios, importe_descuentos_varios_solicitado,
	importe_descuentos_varios_aplicado, importe_descuentos_varios_diferencia,
	importe_liquido_con_descuentos_varios, usu_alta, fec_alta, usu_modi, fec_modi, 
            ip_alta, ip_modi, operacion_auditoria, usuario_auditoria, fecha_auditoria) 
VALUES( 
OLD.id_detalle_planilla_salario,
OLD.id_administracion,
OLD.id_oficina,
OLD.id_funcionario,
OLD.id_planilla_salario,
OLD.dias_trabajados,
OLD.monto_presupuestado,
OLD.monto_devengado,
OLD.monto_multa,
OLD.monto_iva,
OLD.importe_liquido_sin_descuentos_varios,
OLD.importe_descuentos_varios_solicitado,
OLD.importe_descuentos_varios_aplicado,
OLD.importe_descuentos_varios_diferencia,
OLD.importe_liquido_con_descuentos_varios,
OLD.usu_alta, 
OLD.fec_alta, 
OLD.usu_modi, 
OLD.fec_modi, 
OLD.ip_alta, 
OLD.ip_modi,
'D',  user, now()); 
RETURN OLD; 
ELSIF (TG_OP = 'UPDATE') THEN 
INSERT INTO auditoria_salarios_contratados.detalles_planillas_salarios(
            id_detalle_planilla_salario, id_administracion, id_oficina, id_funcionario, 
            id_planilla_salario, dias_trabajados, monto_presupuestado, monto_devengado, 
            monto_multa, monto_iva, importe_liquido_sin_descuentos_varios, importe_descuentos_varios_solicitado,
	importe_descuentos_varios_aplicado, importe_descuentos_varios_diferencia,
	importe_liquido_con_descuentos_varios, usu_alta, fec_alta, usu_modi, fec_modi, 
            ip_alta, ip_modi, operacion_auditoria, usuario_auditoria, fecha_auditoria) 
VALUES( 
NEW.id_detalle_planilla_salario,
NEW.id_administracion,
NEW.id_oficina,
NEW.id_funcionario,
NEW.id_planilla_salario,
NEW.dias_trabajados,
NEW.monto_presupuestado,
NEW.monto_devengado,
NEW.monto_multa,
NEW.monto_iva,
NEW.importe_liquido_sin_descuentos_varios,
NEW.importe_descuentos_varios_solicitado,
NEW.importe_descuentos_varios_aplicado,
NEW.importe_descuentos_varios_diferencia,
NEW.importe_liquido_con_descuentos_varios,
NEW.usu_alta, 
NEW.fec_alta, 
NEW.usu_modi, 
NEW.fec_modi, 
NEW.ip_alta, 
NEW.ip_modi, 
'U',  user, now());
RETURN NEW;
ELSIF (TG_OP = 'INSERT') THEN 
INSERT INTO auditoria_salarios_contratados.detalles_planillas_salarios(
            id_detalle_planilla_salario, id_administracion, id_oficina, id_funcionario, 
            id_planilla_salario, dias_trabajados, monto_presupuestado, monto_devengado, 
            monto_multa, monto_iva, importe_liquido_sin_descuentos_varios, importe_descuentos_varios_solicitado,
	importe_descuentos_varios_aplicado, importe_descuentos_varios_diferencia,
	importe_liquido_con_descuentos_varios, usu_alta, fec_alta, usu_modi, fec_modi, 
            ip_alta, ip_modi, operacion_auditoria, usuario_auditoria, fecha_auditoria) 
VALUES( 
NEW.id_detalle_planilla_salario,
NEW.id_administracion,
NEW.id_oficina,
NEW.id_funcionario,
NEW.id_planilla_salario,
NEW.dias_trabajados,
NEW.monto_presupuestado,
NEW.monto_devengado,
NEW.monto_multa,
NEW.monto_iva,
NEW.importe_liquido_sin_descuentos_varios,
NEW.importe_descuentos_varios_solicitado,
NEW.importe_descuentos_varios_aplicado,
NEW.importe_descuentos_varios_diferencia,
NEW.importe_liquido_con_descuentos_varios,
NEW.usu_alta, 
NEW.fec_alta, 
NEW.usu_modi, 
NEW.fec_modi, 
NEW.ip_alta, 
NEW.ip_modi,  
'I',  user, now()); 
RETURN NEW; 
END IF; 
RETURN NULL; -- el resultado es ignorado puesto que este es un trigger AFTER 
END; 
]]></definition>
</function>

<function name="funcion_auditoria_funcionarios_contratos"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="trigger"/>
	</return-type>
	<definition><![CDATA[ 
DECLARE 
BEGIN 
-- Crea un registro en usuario_audit para reflejar las operaciones 
-- realizadas en usuario utiliza las variables especiales TG_OP para efectuar la operacion
IF (TG_OP = 'DELETE') THEN 
INSERT INTO auditoria_salarios_contratados.funcionarios_contratos(
	id_funcionario_contrato, 
	id_oficina, 
	gestion, 
	id_administracion, 
	id_funcionario, 
	nro_contrato, 
	monto_contrato, 
	percibe_re, 
	percibe_ra, 
	percibe_aguinaldo, 
	percibe_premio, 
	porcentaje_iva, 
	porcentaje_retencion, 
	iva, 
	ruc, 
	desde, 
	hasta, 
	objeto_gasto,
	estado,
	id_oficina_presta,
	categoria,
	usu_alta, 
	fec_alta, 
	usu_modi, 
	fec_modi, 
	ip_alta, 
	ip_modi, 
	operacion_auditoria, 
	usuario_auditoria, 
	fecha_auditoria)
VALUES (
	OLD.id_funcionario_contrato, 
	OLD.id_oficina, 
	OLD.gestion, 
	OLD.id_administracion, 
	OLD.id_funcionario, 
	OLD.nro_contrato, 
	OLD.monto_contrato, 
	OLD.percibe_re, 
	OLD.percibe_ra, 
	OLD.percibe_aguinaldo, 
	OLD.percibe_premio, 
	OLD.porcentaje_iva, 
	OLD.porcentaje_retencion, 
	OLD.iva, 
	OLD.ruc, 
	OLD.desde, 
	OLD.hasta, 
	OLD.objeto_gasto,
	OLD.estado,  
	OLD.id_oficina_presta,
	OLD.categoria,
	OLD.usu_alta, 
	OLD.fec_alta, 
	OLD.usu_modi, 
	OLD.fec_modi, 
	OLD.ip_alta, 
	OLD.ip_modi, 
	'D',
	user,
	now()); 
RETURN OLD; 
ELSIF (TG_OP = 'UPDATE') THEN
INSERT INTO auditoria_salarios_contratados.funcionarios_contratos(
	id_funcionario_contrato, 
	id_oficina, 
	gestion, 
	id_administracion, 
	id_funcionario, 
	nro_contrato, 
	monto_contrato, 
	percibe_re, 
	percibe_ra, 
	percibe_aguinaldo, 
	percibe_premio, 
	porcentaje_iva, 
	porcentaje_retencion, 
	iva, 
	ruc, 
	desde, 
	hasta, 
	objeto_gasto,
	estado, 
	id_oficina_presta,
	categoria,
	usu_alta, 
	fec_alta, 
	usu_modi, 
	fec_modi, 
	ip_alta, 
	ip_modi, 
	operacion_auditoria, 
	usuario_auditoria, 
	fecha_auditoria)
VALUES (
	NEW.id_funcionario_contrato, 
	NEW.id_oficina, 
	NEW.gestion, 
	NEW.id_administracion, 
	NEW.id_funcionario, 
	NEW.nro_contrato, 
	NEW.monto_contrato, 
	NEW.percibe_re, 
	NEW.percibe_ra, 
	NEW.percibe_aguinaldo, 
	NEW.percibe_premio, 
	NEW.porcentaje_iva, 
	NEW.porcentaje_retencion, 
	NEW.iva, 
	NEW.ruc, 
	NEW.desde, 
	NEW.hasta, 
	NEW.objeto_gasto,
	NEW.estado,
	NEW.id_oficina_presta, 
	NEW.categoria,
	NEW.usu_alta, 
	NEW.fec_alta, 
	NEW.usu_modi, 
	NEW.fec_modi, 
	NEW.ip_alta, 
	NEW.ip_modi, 
	'U',
	user,
	now()); 
RETURN NEW;
ELSIF (TG_OP = 'INSERT') THEN
INSERT INTO auditoria_salarios_contratados.funcionarios_contratos(
	id_funcionario_contrato, 
	id_oficina, 
	gestion, 
	id_administracion, 
	id_funcionario, 
	nro_contrato, 
	monto_contrato, 
	percibe_re, 
	percibe_ra, 
	percibe_aguinaldo, 
	percibe_premio, 
	porcentaje_iva, 
	porcentaje_retencion, 
	iva, 
	ruc, 
	desde, 
	hasta, 
	objeto_gasto,
	estado,
	id_oficina_presta, 
	categoria,
	usu_alta, 
	fec_alta, 
	usu_modi, 
	fec_modi, 
	ip_alta, 
	ip_modi, 
	operacion_auditoria, 
	usuario_auditoria, 
	fecha_auditoria)
VALUES (
	NEW.id_funcionario_contrato, 
	NEW.id_oficina, 
	NEW.gestion, 
	NEW.id_administracion, 
	NEW.id_funcionario, 
	NEW.nro_contrato, 
	NEW.monto_contrato, 
	NEW.percibe_re, 
	NEW.percibe_ra, 
	NEW.percibe_aguinaldo, 
	NEW.percibe_premio, 
	NEW.porcentaje_iva, 
	NEW.porcentaje_retencion, 
	NEW.iva, 
	NEW.ruc, 
	NEW.desde, 
	NEW.hasta, 
	NEW.objeto_gasto,
	NEW.estado,
	NEW.id_oficina_presta,
	NEW.categoria,
	NEW.usu_alta, 
	NEW.fec_alta, 
	NEW.usu_modi, 
	NEW.fec_modi, 
	NEW.ip_alta, 
	NEW.ip_modi, 
	'I',
	user,
	now()); 
RETURN NEW;
END IF; 
RETURN NULL; -- el resultado es ignorado puesto que este es un trigger AFTER 
END; 
]]></definition>
</function>

<function name="funcion_auditoria_funcionarios_gratificaciones_ocasionales"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="trigger"/>
	</return-type>
	<definition><![CDATA[ 
DECLARE 
BEGIN 
	IF (TG_OP = 'DELETE') THEN 
		INSERT INTO auditoria_salarios_contratados.funcionarios_gratificaciones_ocasionales(
			id_funcionario_gratificacion_ocasional,
			id_administracion,
			gestion,
			id_mes,
			cedula,
			monto,
			usu_alta, 
			fec_alta, 
			usu_modi, 
			fec_modi, 
			ip_alta, 
			ip_modi,
			operacion_auditoria,
			usuario_auditoria,
			fecha_auditoria)
		SELECT 
			OLD.id_funcionario_gratificacion_ocasional,
			OLD.id_administracion,
			OLD.gestion,
			OLD.id_mes,
			OLD.cedula,
			OLD.monto,
			OLD.usu_alta, 
			OLD.fec_alta, 
			OLD.usu_modi, 
			OLD.fec_modi, 
			OLD.ip_alta, 
			OLD.ip_modi,
			'D',  user, now(); 
		RETURN OLD; 
	ELSIF (TG_OP = 'UPDATE') THEN 
		INSERT INTO auditoria_salarios_contratados.funcionarios_gratificaciones_ocasionales(
			id_funcionario_gratificacion_ocasional,
			id_administracion,
			gestion,
			id_mes,
			cedula,
			monto,
			usu_alta, 
			fec_alta, 
			usu_modi, 
			fec_modi, 
			ip_alta, 
			ip_modi,
			operacion_auditoria,
			usuario_auditoria,
			fecha_auditoria)
		SELECT 
			NEW.id_funcionario_gratificacion_ocasional,
			NEW.id_administracion,
			NEW.gestion,
			NEW.id_mes,
			NEW.cedula,
			NEW.monto,
			NEW.usu_alta, 
			NEW.fec_alta, 
			NEW.usu_modi, 
			NEW.fec_modi, 
			NEW.ip_alta, 
			NEW.ip_modi,
			'U',  user, now();

		RETURN NEW;
		
	ELSIF (TG_OP = 'INSERT') THEN 
		INSERT INTO auditoria_salarios_contratados.funcionarios_gratificaciones_ocasionales(
			id_funcionario_gratificacion_ocasional,
			id_administracion,
			gestion,
			id_mes,
			cedula,
			monto,
			usu_alta, 
			fec_alta, 
			usu_modi, 
			fec_modi, 
			ip_alta, 
			ip_modi,
			operacion_auditoria,
			usuario_auditoria,
			fecha_auditoria)
		SELECT 
			NEW.id_funcionario_gratificacion_ocasional,
			NEW.id_administracion,
			NEW.gestion,
			NEW.id_mes,
			NEW.cedula,
			NEW.monto,
			NEW.usu_alta, 
			NEW.fec_alta, 
			NEW.usu_modi, 
			NEW.fec_modi, 
			NEW.ip_alta, 
			NEW.ip_modi,
			'I',  user, now(); 

		RETURN NEW; 
	END IF; 
	RETURN NULL; 
END; 
]]></definition>
</function>

<function name="funcion_auditoria_funcionarios_subsidios"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="trigger"/>
	</return-type>
	<definition><![CDATA[ 
DECLARE 
BEGIN 
-- Crea un registro en usuario_audit para reflejar las operaciones 
-- realizadas en usuario utiliza las variables especiales TG_OP para efectuar la operacion
IF (TG_OP = 'DELETE') THEN 
INSERT INTO auditoria_salarios_contratados.funcionarios_subsidios 
SELECT 
OLD.id_funcionario_subsidio,
OLD.id_administracion,
OLD.id_oficina,
OLD.id_funcionario,
OLD.id_mes,
OLD.gestion,
OLD.id_subsidio,
OLD.importe,
OLD.estado,
OLD.usu_alta, 
OLD.fec_alta, 
OLD.usu_modi, 
OLD.fec_modi, 
OLD.ip_alta, 
OLD.ip_modi,
'D',  user, now(); 
RETURN OLD; 
ELSIF (TG_OP = 'UPDATE') THEN 
INSERT INTO auditoria_salarios_contratados.funcionarios_subsidios 
SELECT 
NEW.id_funcionarios_subsidios,
NEW.id_administracion,
NEW.id_oficina,
NEW.id_funcionario,
NEW.id_mes,
NEW.gestion,
NEW.id_subsidio,
NEW.importe,
NEW.estado,
NEW.usu_alta, 
NEW.fec_alta, 
NEW.usu_modi, 
NEW.fec_modi, 
NEW.ip_alta, 
NEW.ip_modi, 
'U',  user, now();
RETURN NEW;
ELSIF (TG_OP = 'INSERT') THEN 
INSERT INTO auditoria_salarios_contratados.funcionarios_subsidios 
SELECT 
NEW.id_funcionarios_subsidios,
NEW.id_administracion,
NEW.id_oficina,
NEW.id_funcionario,
NEW.id_mes,
NEW.gestion,
NEW.id_subsidio,
NEW.importe,
NEW.estado,
NEW.usu_alta, 
NEW.fec_alta, 
NEW.usu_modi, 
NEW.fec_modi, 
NEW.ip_alta, 
NEW.ip_modi,  
'I',  user, now(); 
RETURN NEW; 
END IF; 
RETURN NULL; -- el resultado es ignorado puesto que este es un trigger AFTER 
END; 
]]></definition>
</function>

<function name="funcion_auditoria_multas_solicitadas"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="trigger"/>
	</return-type>
	<definition><![CDATA[ 
DECLARE 
BEGIN 
-- Crea un registro en usuario_audit para reflejar las operaciones 
-- realizadas en usuario utiliza las variables especiales TG_OP para efectuar la operacion
IF (TG_OP = 'DELETE') THEN 
INSERT INTO auditoria_salarios_contratados.multas_solicitadas 
SELECT 
OLD.id_multa_solicitada,
OLD.id_administracion,
OLD.id_multa_resolucion_contratado,
OLD.gestion,
OLD.id_mes,
OLD.fecha,
OLD.total_multa,
OLD.estado,
OLD.usu_alta, 
OLD.fec_alta, 
OLD.usu_modi, 
OLD.fec_modi, 
OLD.ip_alta, 
OLD.ip_modi,
'D',  user, now(); 
RETURN OLD; 
ELSIF (TG_OP = 'UPDATE') THEN 
INSERT INTO auditoria_salarios_contratados.multas_solicitadas 
SELECT 
NEW.id_multa_solicitada,
NEW.id_administracion,
NEW.id_multa_resolucion_contratado,
NEW.gestion,
NEW.id_mes,
NEW.fecha,
NEW.total_multa,
NEW.estado,
NEW.usu_alta, 
NEW.fec_alta, 
NEW.usu_modi, 
NEW.fec_modi, 
NEW.ip_alta, 
NEW.ip_modi,  
'U',  user, now();
RETURN NEW;
ELSIF (TG_OP = 'INSERT') THEN 
INSERT INTO auditoria_salarios_contratados.multas_solicitadas 
SELECT 
NEW.id_multa_solicitada,
NEW.id_administracion,
NEW.id_multa_resolucion_contratado,
NEW.gestion,
NEW.id_mes,
NEW.fecha,
NEW.total_multa,
NEW.estado,
NEW.usu_alta, 
NEW.fec_alta, 
NEW.usu_modi, 
NEW.fec_modi, 
NEW.ip_alta, 
NEW.ip_modi,
'I',  user, now(); 
RETURN NEW; 
END IF; 
RETURN NULL; -- el resultado es ignorado puesto que este es un trigger AFTER 
END; 
]]></definition>
</function>

<function name="funcion_auditoria_planilla_gratificacion_ocacional"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="trigger"/>
	</return-type>
	<definition><![CDATA[ 
DECLARE 
BEGIN 
-- Crea un registro de auditoria para reflejar las operaciones 
-- realizadas utilizando las variables especiales TG_OP para identificar el tipo de operacion
IF (TG_OP = 'DELETE') THEN 
INSERT INTO auditoria_salarios_contratados.planilla_gratificacion_ocacional(
            id_planilla_gratificacion_ocacional, 
            id_administracion, 
            id_mes, 
            gestion, 
            fecha, 
            monto_total,
            monto_iva,
            estado, 
            usu_alta, 
            fec_alta, 
            usu_modi, 
            fec_modi, 
            ip_alta, 
            ip_modi, 
            operacion_auditoria, 
            usuario_auditoria, 
            fecha_auditoria
)
    VALUES (
	    old.id_planilla_gratificacion_ocacional, 
            old.id_administracion, 
            old.id_mes, 
            old.gestion, 
            old.fecha, 
            old.monto_total,
            old.monto_iva,
            old.estado, 
            old.usu_alta, 
            old.fec_alta, 
            old.usu_modi, 
            old.fec_modi, 
            old.ip_alta, 
            old.ip_modi, 
            'D', 
	    current_user, 
	    now())
;
RETURN OLD; 

ELSIF (TG_OP = 'UPDATE') THEN
INSERT INTO auditoria_salarios_contratados.planilla_gratificacion_ocacional(
            id_planilla_gratificacion_ocacional, 
            id_administracion, 
            id_mes, 
            gestion, 
            fecha, 
            monto_total,
            monto_iva, 
            estado, 
            usu_alta, 
            fec_alta, 
            usu_modi, 
            fec_modi, 
            ip_alta, 
            ip_modi, 
            operacion_auditoria, 
            usuario_auditoria, 
            fecha_auditoria
)
    VALUES (
	    new.id_planilla_gratificacion_ocacional, 
            new.id_administracion, 
            new.id_mes, 
            new.gestion, 
            new.fecha, 
            new.monto_total,
            new.monto_iva, 
            new.estado, 
            new.usu_alta, 
            new.fec_alta, 
            new.usu_modi, 
            new.fec_modi, 
            new.ip_alta, 
            new.ip_modi, 
            'U', 
	    current_user, 
	    now())
;
RETURN NEW; 

ELSIF (TG_OP = 'INSERT') THEN
INSERT INTO auditoria_salarios_contratados.planilla_gratificacion_ocacional(
            id_planilla_gratificacion_ocacional, 
            id_administracion, 
            id_mes, 
            gestion, 
            fecha, 
            monto_total, 
            monto_iva,
            estado, 
            usu_alta, 
            fec_alta, 
            usu_modi, 
            fec_modi, 
            ip_alta, 
            ip_modi, 
            operacion_auditoria, 
            usuario_auditoria, 
            fecha_auditoria
)
    VALUES (
	    new.id_planilla_gratificacion_ocacional, 
            new.id_administracion, 
            new.id_mes, 
            new.gestion, 
            new.fecha, 
            new.monto_total, 
            new.monto_iva,
            new.estado, 
            new.usu_alta, 
            new.fec_alta, 
            new.usu_modi, 
            new.fec_modi, 
            new.ip_alta, 
            new.ip_modi, 
            'I', 
	    current_user, 
	    now())
;
RETURN NEW; 

END IF; 

END; 
]]></definition>
</function>

<function name="funcion_auditoria_planilla_re_ra_temporales"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="trigger"/>
	</return-type>
	<definition><![CDATA[ 
DECLARE 
BEGIN 
-- Crea un registro en auditoria para reflejar las operaciones 
-- realizadas en xx utiliza las variables especiales TG_OP 
-- para efectuar la operacion 
IF (TG_OP = 'DELETE') THEN 
INSERT INTO auditoria_salarios_contratados.planilla_re_ra_temporales 
SELECT 
OLD.id_planilla_re_ra_temporales,
OLD.id_administracion,
OLD.id_oficina,
OLD.id_mes,
OLD.gestion,
OLD.cantidad_horas_re,
OLD.cantidad_horas_ra,
OLD.usu_alta, 
OLD.fec_alta, 
OLD.usu_modi, 
OLD.fec_modi, 
OLD.ip_alta, 
OLD.ip_modi,
old.cedula,
old.justificacion,
'D',  user, now(); 
RETURN OLD; 
ELSIF (TG_OP = 'UPDATE') THEN 
INSERT INTO auditoria_salarios_contratados.planilla_re_ra_temporales 
SELECT 
NEW.id_planilla_re_ra_temporales,
NEW.id_administracion,
NEW.id_oficina,
NEW.id_mes,
NEW.gestion,
NEW.cantidad_horas_re,
NEW.cantidad_horas_ra,
NEW.usu_alta, 
NEW.fec_alta, 
NEW.usu_modi, 
NEW.fec_modi, 
NEW.ip_alta, 
NEW.ip_modi,
new.cedula,
new.justificacion,
'U',  user, now();
RETURN NEW;
ELSIF (TG_OP = 'INSERT') THEN 
INSERT INTO auditoria_salarios_contratados.planilla_re_ra_temporales 
SELECT 
NEW.id_planilla_re_ra_temporales,
NEW.id_administracion,
NEW.id_oficina,
NEW.id_mes,
NEW.gestion,
NEW.cantidad_horas_re,
NEW.cantidad_horas_ra,
NEW.usu_alta, 
NEW.fec_alta, 
NEW.usu_modi, 
NEW.fec_modi, 
NEW.ip_alta, 
NEW.ip_modi, 
new.cedula,
new.justificacion,
'I',  user, now(); 
RETURN NEW; 
END IF; 
RETURN NULL; -- el resultado es ignorado puesto que este es un trigger AFTER 
END; 
]]></definition>
</function>

<function name="funcion_auditoria_planillas_descuentos"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="trigger"/>
	</return-type>
	<definition><![CDATA[ 
DECLARE 
BEGIN 
-- Crea un registro en usuario_audit para reflejar las operaciones 
-- realizadas en usuario utiliza las variables especiales TG_OP para efectuar la operacion
IF (TG_OP = 'DELETE') THEN 
INSERT INTO auditoria_salarios_contratados.planillas_descuentos 
	( id_planilla_descuento, 
	id_administracion, 
	gestion, 
	id_mes, 
	id_parametro, 
	fecha, 
	total_descuento, 
        total_importe_solicitado,
        id_planilla_salario,
        estado,
	usu_alta, 
	fec_alta, 
	usu_modi, 
	fec_modi, 
	ip_alta, 
	ip_modi, 
	operacion_auditoria, 
	usuario_auditoria, 
	fecha_auditoria
	)
VALUES
(OLD.id_planilla_descuento,
OLD.id_administracion,
OLD.gestion,
OLD.id_mes,
OLD.id_parametro,
OLD.fecha,
OLD.total_descuento,
OLD.total_importe_solicitado,
OLD.id_planilla_salario,
OLD.estado,
OLD.usu_alta, 
OLD.fec_alta, 
OLD.usu_modi, 
OLD.fec_modi, 
OLD.ip_alta, 
OLD.ip_modi,
'D', 
user, 
now()
); 

RETURN OLD; 
ELSIF (TG_OP = 'UPDATE') THEN 
INSERT INTO auditoria_salarios_contratados.planillas_descuentos 
	( id_planilla_descuento, 
	id_administracion, 
	gestion, 
	id_mes, 
	id_parametro, 
	fecha, 
	total_descuento, 
        total_importe_solicitado,
	id_planilla_salario,
        estado, 
	usu_alta, 
	fec_alta, 
	usu_modi, 
	fec_modi, 
	ip_alta, 
	ip_modi, 
	operacion_auditoria, 
	usuario_auditoria, 
	fecha_auditoria
	)
VALUES
(NEW.id_planilla_descuento,
NEW.id_administracion,
NEW.gestion,
NEW.id_mes,
NEW.id_parametro,
NEW.fecha,
NEW.total_descuento,
NEW.total_importe_solicitado,
NEW.id_planilla_salario,
NEW.estado,
NEW.usu_alta, 
NEW.fec_alta, 
NEW.usu_modi, 
NEW.fec_modi, 
NEW.ip_alta, 
NEW.ip_modi, 
'U', 
user, 
now()
);

RETURN NEW;
ELSIF (TG_OP = 'INSERT') THEN 
INSERT INTO auditoria_salarios_contratados.planillas_descuentos 
	( id_planilla_descuento, 
	id_administracion, 
	gestion, 
	id_mes, 
	id_parametro, 
	fecha, 
	total_descuento, 
        total_importe_solicitado,
	id_planilla_salario,
        estado,
	usu_alta, 
	fec_alta, 
	usu_modi, 
	fec_modi, 
	ip_alta, 
	ip_modi, 
	operacion_auditoria, 
	usuario_auditoria, 
	fecha_auditoria
	)
VALUES
(NEW.id_planilla_descuento,
NEW.id_administracion,
NEW.gestion,
NEW.id_mes,
NEW.id_parametro,
NEW.fecha,
NEW.total_descuento,
NEW.total_importe_solicitado,
NEW.id_planilla_salario,
NEW.estado,
NEW.usu_alta, 
NEW.fec_alta, 
NEW.usu_modi, 
NEW.fec_modi, 
NEW.ip_alta, 
NEW.ip_modi,  
'I',  
user, 
now()
); 
RETURN NEW; 
END IF; 

END; 
]]></definition>
</function>

<function name="funcion_auditoria_planillas_ra"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="trigger"/>
	</return-type>
	<definition><![CDATA[ 
DECLARE 
BEGIN 
-- Crea un registro de auditoria para reflejar las operaciones 
-- realizadas utilizando las variables especiales TG_OP para identificar el tipo de operacion
IF (TG_OP = 'DELETE') THEN 
INSERT INTO auditoria_salarios_contratados.planillas_ra(
	id_planilla_ra, 
	id_parametro_calculo_re_ra, 
	id_administracion, 
	id_parametro, 
	gestion, 
	id_mes, 
	fecha, 
	monto_total_ra, 
	monto_total_iva, 
	item, 
	estado, 
	usu_alta, 
	fec_alta, 
	usu_modi, 
	fec_modi, 
	ip_alta, 
	ip_modi, 
	operacion_auditoria, 
	usuario_auditoria, 
	fecha_auditoria)
VALUES (
	old.id_planilla_ra, 
	old.id_parametro_calculo_re_ra, 
	old.id_administracion, 
	old.id_parametro, 
	old.gestion, 
	old.id_mes, 
	old.fecha, 
	old.monto_total_ra, 
	old.monto_total_iva, 
	old.item, 
	old.estado, 
	old.usu_alta, 
	old.fec_alta, 
	old.usu_modi, 
	old.fec_modi, 
	old.ip_alta, 
	old.ip_modi, 
	'D', 
	current_user, 
	now())
;
RETURN OLD; 
ELSIF (TG_OP = 'UPDATE') THEN
INSERT INTO auditoria_salarios_contratados.planillas_ra(
	id_planilla_ra, 
	id_parametro_calculo_re_ra, 
	id_administracion, 
	id_parametro, 
	gestion, 
	id_mes, 
	fecha, 
	monto_total_ra, 
	monto_total_iva, 
	item, 
	estado, 
	usu_alta, 
	fec_alta, 
	usu_modi, 
	fec_modi, 
	ip_alta, 
	ip_modi, 
	operacion_auditoria, 
	usuario_auditoria, 
	fecha_auditoria)
VALUES (
	new.id_planilla_ra, 
	new.id_parametro_calculo_re_ra, 
	new.id_administracion, 
	new.id_parametro, 
	new.gestion, 
	new.id_mes, 
	new.fecha, 
	new.monto_total_ra, 
	new.monto_total_iva, 
	new.item, 
	new.estado, 
	new.usu_alta, 
	new.fec_alta, 
	new.usu_modi, 
	new.fec_modi, 
	new.ip_alta, 
	new.ip_modi, 
	'U', 
	current_user, 
	now())
;
RETURN NEW; 

ELSIF (TG_OP = 'INSERT') THEN

INSERT INTO auditoria_salarios_contratados.planillas_ra(
	id_planilla_ra, 
	id_parametro_calculo_re_ra, 
	id_administracion, 
	id_parametro, 
	gestion, 
	id_mes, 
	fecha, 
	monto_total_ra, 
	monto_total_iva, 
	item, 
	estado, 
	usu_alta, 
	fec_alta, 
	usu_modi, 
	fec_modi, 
	ip_alta, 
	ip_modi, 
	operacion_auditoria, 
	usuario_auditoria, 
	fecha_auditoria)
VALUES (
	new.id_planilla_ra, 
	new.id_parametro_calculo_re_ra, 
	new.id_administracion, 
	new.id_parametro, 
	new.gestion, 
	new.id_mes, 
	new.fecha, 
	new.monto_total_ra, 
	new.monto_total_iva, 
	new.item, 
	new.estado, 
	new.usu_alta, 
	new.fec_alta, 
	new.usu_modi, 
	new.fec_modi, 
	new.ip_alta, 
	new.ip_modi, 
	'I', 
	current_user, 
	now())
;
RETURN NEW; 
END IF; 
END; 
]]></definition>
</function>

<function name="funcion_auditoria_planillas_salarios"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="trigger"/>
	</return-type>
	<definition><![CDATA[ 
DECLARE 
BEGIN 
-- Crea un registro de auditoria para reflejar las operaciones 
-- realizadas utilizando las variables especiales TG_OP para identificar el tipo de operacion
IF (TG_OP = 'DELETE') THEN 
INSERT INTO auditoria_salarios_contratados.planillas_salarios(
	id_planilla_salario, 
	id_administracion, 
	id_mes, 
	id_parametro, 
	gestion, 
	item, 
	fecha, 
	total_presupuestado, 
	total_devengado, 
	total_monto_iva, 
	total_multa, 
	id_estado,	
	usu_alta, 
	fec_alta, 
	usu_modi, 
	fec_modi, 
	ip_alta, 
	ip_modi, 
	operacion_auditoria, 
	usuario_auditoria, 
	fecha_auditoria)
VALUES (
	old.id_planilla_salario, 
	old.id_administracion, 
	old.id_mes, 
	old.id_parametro, 
	old.gestion, 
	old.item, 
	old.fecha, 
	old.total_presupuestado, 
	old.total_devengado, 
	old.total_monto_iva, 
	old.total_multa, 
	old.id_estado,	
	old.usu_alta, 
	old.fec_alta, 
	old.usu_modi, 
	old.fec_modi, 
	old.ip_alta, 
	old.ip_modi, 
	'D', 
	current_user, 
	now())
;
RETURN OLD; 
ELSIF (TG_OP = 'UPDATE') THEN
INSERT INTO auditoria_salarios_contratados.planillas_salarios(
	id_planilla_salario, 
	id_administracion, 
	id_mes, 
	id_parametro, 
	gestion, 
	item, 
	fecha, 
	total_presupuestado, 
	total_devengado, 
	total_monto_iva, 
	total_multa, 
	id_estado,	
	usu_alta, 
	fec_alta, 
	usu_modi, 
	fec_modi, 
	ip_alta, 
	ip_modi, 
	operacion_auditoria, 
	usuario_auditoria, 
	fecha_auditoria)
VALUES (
	NEW.id_planilla_salario, 
	NEW.id_administracion, 
	NEW.id_mes, 
	NEW.id_parametro, 
	NEW.gestion, 
	NEW.item, 
	NEW.fecha, 
	NEW.total_presupuestado, 
	NEW.total_devengado, 
	NEW.total_monto_iva, 
	NEW.total_multa, 
	NEW.id_estado,	
	NEW.usu_alta, 
	NEW.fec_alta, 
	NEW.usu_modi, 
	NEW.fec_modi, 
	NEW.ip_alta, 
	NEW.ip_modi, 
	'U', 
	current_user, 
	now())
;
RETURN NEW; 
ELSIF (TG_OP = 'INSERT') THEN
INSERT INTO auditoria_salarios_contratados.planillas_salarios(
	id_planilla_salario, 
	id_administracion, 
	id_mes, 
	id_parametro, 
	gestion, 
	item, 
	fecha, 
	total_presupuestado, 
	total_devengado, 
	total_monto_iva, 
	total_multa, 
	id_estado,	
	usu_alta, 
	fec_alta, 
	usu_modi, 
	fec_modi, 
	ip_alta, 
	ip_modi, 
	operacion_auditoria, 
	usuario_auditoria, 
	fecha_auditoria)
VALUES (
	NEW.id_planilla_salario, 
	NEW.id_administracion, 
	NEW.id_mes, 
	NEW.id_parametro, 
	NEW.gestion, 
	NEW.item, 
	NEW.fecha, 
	NEW.total_presupuestado, 
	NEW.total_devengado, 
	NEW.total_monto_iva, 
	NEW.total_multa, 
	NEW.id_estado,	
	NEW.usu_alta, 
	NEW.fec_alta, 
	NEW.usu_modi, 
	NEW.fec_modi, 
	NEW.ip_alta, 
	NEW.ip_modi, 
	'I', 
	current_user, 
	now())
;
RETURN NEW; 
END IF; 
END; 
]]></definition>
</function>

<usertype name="registro_funcionarios_aguinaldos" configuration="composite">
	<schema name="public"/>
	<role name="jcabrera"/>
	<typeattrib name="id_funcionario">
		<type name="integer"/>
	</typeattrib>
	<typeattrib name="cedula_funcionario">
		<type name="character varying"/>
	</typeattrib>
	<typeattrib name="ape_nom_funcionario">
		<type name="character varying"/>
	</typeattrib>
	<typeattrib name="detalles_ids">
		<type name="text"/>
	</typeattrib>
	<typeattrib name="detalles_meses">
		<type name="text"/>
	</typeattrib>
	<typeattrib name="detalles_montos">
		<type name="text"/>
	</typeattrib>
	<typeattrib name="detalles_oficinas">
		<type name="text"/>
	</typeattrib>
	<typeattrib name="ultimo_id_oficina">
		<type name="integer"/>
	</typeattrib>
	<typeattrib name="monto_total">
		<type name="numeric" length="15" precision="2"/>
	</typeattrib>
	<typeattrib name="cantidad">
		<type name="integer"/>
	</typeattrib>
</usertype>

<function name="funcion_funcionarios_contratados_aguinaldos"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="1000">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="public.registro_funcionarios_aguinaldos"/>
	</return-type>
	<parameter name="in_gestion">
		<type name="integer"/>
	</parameter>
	<parameter name="in_id_administracion">
		<type name="integer"/>
	</parameter>
	<parameter name="in_id_tipo_aguinaldo">
		<type name="integer"/>
	</parameter>
	<definition><![CDATA[ 
DECLARE   returnrec registro_funcionarios_aguinaldos; 

/*
--Definicion de registro_reporte
DROP TYPE registro_funcionarios_aguinaldos;
CREATE TYPE registro_funcionarios_aguinaldos AS ( 
				id_funcionario integer, 
				cedula_funcionario varchar, 
				ape_nom_funcionario varchar, 
				detalles_ids text,
				detalles_meses text,
				detalles_montos text,
				detalles_oficinas text,
				ultimo_id_oficina integer,
				monto_total numeric(15,2),
				cantidad integer);
*/
DECLARE 
  v_id_func_agu integer;
  v_id_ofic integer;
  v_id_mes integer;
  v_monto numeric(12,2);
  

BEGIN 
/*
  * Funcion para obtener funcionarios_aguinaldos para el detalle de aguinaldos 
  * Fecha: 2012-10-27
  * Autor: Lic. José Cabrera
  * Parametros:
  *            in_gestion ejercicio aplicado
  *            in_id_administracion, identificador de la administracion
  *            in_id_tipo_aguinaldo, identificador del tipo de aguinaldo solicitado 
  * 
  * Descripcion:  Obtener funcionarios agrupando los detalles de los montos percibidos en los meses
  * ------------   
  *               
  */  
       
	FOR returnrec IN 
		SELECT a.id_funcionario, b.cedula_funcionario, b.ape_nom_funcionario, null, null, null, null, null, sum(monto) as monto_total, count(monto) as cantidad
		FROM salarios_contratados.funcionarios_aguinaldos a
		INNER JOIN legajos.funcionarios b ON a.id_funcionario = b.id_funcionario
		WHERE a.id_administracion = in_id_administracion and a.gestion = in_gestion and a.id_tipo_aguinaldo=in_id_tipo_aguinaldo and a.estado = 0
		GROUP BY a.id_funcionario, b.cedula_funcionario, b.ape_nom_funcionario
		ORDER BY a.id_funcionario
	LOOP  
		FOR v_id_func_agu,v_id_ofic, v_id_mes, v_monto  IN 
		SELECT t2.id_funcionario_aguinaldo, t2.id_oficina, t2.id_mes, t2.monto
		FROM salarios_contratados.funcionarios_aguinaldos t2
		WHERE t2.id_administracion = in_id_administracion and t2.gestion = in_gestion AND t2.id_tipo_aguinaldo=in_id_tipo_aguinaldo AND t2.estado = 0 AND t2.id_funcionario = returnrec.id_funcionario
		ORDER BY t2.id_mes
		LOOP
			IF returnrec.detalles_ids isnull THEN
			   returnrec.detalles_ids := v_id_func_agu::text;
			   returnrec.detalles_meses := v_id_mes::text;
			   returnrec.detalles_montos := v_monto::text;
			   returnrec.detalles_oficinas := v_id_ofic::text;
			ELSE
			   returnrec.detalles_ids := returnrec.detalles_ids||' - '|| v_id_func_agu::text;
			   returnrec.detalles_meses := returnrec.detalles_meses||' - '||v_id_mes::text;
			   returnrec.detalles_montos := returnrec.detalles_montos||' - '||v_monto::text;
			   returnrec.detalles_oficinas := returnrec.detalles_oficinas||' - '||v_id_ofic::text;
			END IF;
			returnrec.ultimo_id_oficina = v_id_ofic;
			--returnrec.ultimo_nivel1 = v_nivel1;
		END LOOP;
	        
		RETURN NEXT returnrec;     
	END LOOP; 
		
END; 
]]></definition>
</function>

<usertype name="registro_funcionarios_aguinaldos2" configuration="composite">
	<schema name="public"/>
	<role name="dalcaraz"/>
	<typeattrib name="id_funcionario">
		<type name="integer"/>
	</typeattrib>
	<typeattrib name="cedula_funcionario">
		<type name="character varying"/>
	</typeattrib>
	<typeattrib name="ape_nom_funcionario">
		<type name="character varying"/>
	</typeattrib>
	<typeattrib name="detalles_ids">
		<type name="text"/>
	</typeattrib>
	<typeattrib name="detalles_meses">
		<type name="text"/>
	</typeattrib>
	<typeattrib name="detalles_montos">
		<type name="text"/>
	</typeattrib>
	<typeattrib name="detalles_oficinas">
		<type name="text"/>
	</typeattrib>
	<typeattrib name="ultimo_id_oficina">
		<type name="integer"/>
	</typeattrib>
	<typeattrib name="monto_total">
		<type name="numeric" length="15" precision="2"/>
	</typeattrib>
	<typeattrib name="cantidad">
		<type name="integer"/>
	</typeattrib>
	<typeattrib name="objeto_gasto">
		<type name="integer"/>
	</typeattrib>
</usertype>

<function name="funcion_funcionarios_contratados_aguinaldos2"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="1000">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="public.registro_funcionarios_aguinaldos2"/>
	</return-type>
	<parameter name="in_gestion">
		<type name="integer"/>
	</parameter>
	<parameter name="in_id_administracion">
		<type name="integer"/>
	</parameter>
	<parameter name="in_id_tipo_aguinaldo">
		<type name="integer"/>
	</parameter>
	<definition><![CDATA[ 
DECLARE   returnrec registro_funcionarios_aguinaldos2; 

/*
--Definicion de registro_reporte
DROP TYPE registro_funcionarios_aguinaldos2;
CREATE TYPE registro_funcionarios_aguinaldos2 AS ( 
				id_funcionario integer, 
				cedula_funcionario varchar, 
				ape_nom_funcionario varchar, 
				detalles_ids text,
				detalles_meses text,
				detalles_montos text,
				detalles_oficinas text,
				ultimo_id_oficina integer,
				monto_total numeric(15,2),
				cantidad integer,
				objeto_gasto integer);
*/
DECLARE 
  v_id_func_agu integer;
  v_id_ofic integer;
  v_id_mes integer;
  v_monto numeric(12,2);  
  

BEGIN 
/*
  * Funcion para obtener funcionarios_aguinaldos para el detalle de aguinaldos 
  * Fecha: 2012-10-27
  * Autor: Lic. José Cabrera
  * Parametros:
  *            in_gestion ejercicio aplicado
  *            in_id_administracion, identificador de la administracion
  *            in_id_tipo_aguinaldo, identificador del tipo de aguinaldo solicitado 
  * 
  * Descripcion:  Obtener funcionarios agrupando los detalles de los montos percibidos en los meses
  * ------------   
  *               
  */  
       
	FOR returnrec IN 
		SELECT 
			a.id_funcionario, 
			b.cedula_funcionario, 
			b.ape_nom_funcionario, 
			null, 
			null, 
			null, 
			null, 
			null, 
			sum(monto) as monto_total, 
			count(monto) as cantidad,
			a.objeto_gasto
		FROM salarios_contratados.funcionarios_aguinaldos a
		INNER JOIN legajos.funcionarios b ON a.id_funcionario = b.id_funcionario
		WHERE a.id_administracion = in_id_administracion 
		AND a.gestion = in_gestion 
		AND a.id_tipo_aguinaldo=in_id_tipo_aguinaldo 
		AND a.estado = 0
		GROUP BY a.id_funcionario, b.cedula_funcionario, b.ape_nom_funcionario,a.objeto_gasto
		ORDER BY a.id_funcionario
	LOOP  
		FOR v_id_func_agu,v_id_ofic, v_id_mes, v_monto IN 
		SELECT t2.id_funcionario_aguinaldo, t2.id_oficina, t2.id_mes, t2.monto, t2.objeto_gasto
		FROM salarios_contratados.funcionarios_aguinaldos t2
		WHERE t2.id_administracion = in_id_administracion 
		and t2.gestion = in_gestion 
		AND t2.id_tipo_aguinaldo=in_id_tipo_aguinaldo 
		AND t2.estado = 0 
		AND t2.id_funcionario = returnrec.id_funcionario
		AND t2.objeto_gasto = returnrec.objeto_gasto
		ORDER BY t2.id_mes
		LOOP
			IF returnrec.detalles_ids isnull THEN
			   returnrec.detalles_ids := v_id_func_agu::text;
			   returnrec.detalles_meses := v_id_mes::text;
			   returnrec.detalles_montos := v_monto::text;
			   returnrec.detalles_oficinas := v_id_ofic::text;			   
			ELSE
			   returnrec.detalles_ids := returnrec.detalles_ids||' - '|| v_id_func_agu::text;
			   returnrec.detalles_meses := returnrec.detalles_meses||' - '||v_id_mes::text;
			   returnrec.detalles_montos := returnrec.detalles_montos||' - '||v_monto::text;
			   returnrec.detalles_oficinas := returnrec.detalles_oficinas||' - '||v_id_ofic::text;			   
			END IF;
			returnrec.ultimo_id_oficina = v_id_ofic;
			--returnrec.ultimo_nivel1 = v_nivel1;
		END LOOP;
	        
		RETURN NEXT returnrec;     
	END LOOP; 
		
END; 
]]></definition>
</function>

<function name="funcion_obtener_retencion"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="numeric"/>
	</return-type>
	<parameter name="in_monto">
		<type name="numeric"/>
	</parameter>
	<parameter name="in_iva">
		<type name="integer"/>
	</parameter>
	<parameter name="in_retencion">
		<type name="integer"/>
	</parameter>
	<definition><![CDATA[
DECLARE
    monto_retencion numeric;
BEGIN

  monto_retencion := round(in_monto/(1+(in_iva/100.0))*(in_iva/100.0)*(in_retencion/100.0),0);

  IF monto_retencion isnull THEN
     monto_retencion := 0;
  END IF;

  return monto_retencion;
END;
]]></definition>
</function>

<function name="funcionarios_contratados_normal"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="1000">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<parameter name="id_administracion">
		<type name="integer"/>
	</parameter>
	<parameter name="id_oficina">
		<type name="integer"/>
	</parameter>
	<parameter name="nombre">
		<type name="character varying"/>
	</parameter>
	<parameter name="nivel1">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel2">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel3">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel4">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel5">
		<type name="integer"/>
	</parameter>
	<parameter name="id_funcionario">
		<type name="integer"/>
	</parameter>
	<parameter name="cedula">
		<type name="character varying"/>
	</parameter>
	<parameter name="funcionario">
		<type name="character varying"/>
	</parameter>
	<parameter name="fecha_desde">
		<type name="date"/>
	</parameter>
	<parameter name="fecha_hasta">
		<type name="date"/>
	</parameter>
	<parameter name="monto_contrato">
		<type name="integer"/>
	</parameter>
	<parameter name="id_mes">
		<type name="integer"/>
	</parameter>
	<parameter name="gestion">
		<type name="numeric"/>
	</parameter>
	<parameter name="dias_trabajados">
		<type name="integer"/>
	</parameter>
	<parameter name="monto_presupuestado">
		<type name="numeric"/>
	</parameter>
	<parameter name="monto_devengado">
		<type name="numeric"/>
	</parameter>
	<parameter name="monto_multa">
		<type name="numeric"/>
	</parameter>
	<parameter name="ruc_funcion">
		<type name="character varying"/>
	</parameter>
	<parameter name="nro_idap">
		<type name="character varying"/>
	</parameter>
	<parameter name="porcentaje_iva">
		<type name="integer"/>
	</parameter>
	<parameter name="retencion_iva">
		<type name="integer"/>
	</parameter>
	<parameter name="monto_retencion_iva">
		<type name="numeric"/>
	</parameter>
	</return-type>
	<parameter name="in_id_mes" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_gestion" in="true">
		<type name="integer"/>
	</parameter>
	<definition><![CDATA[
BEGIN
RETURN QUERY 
Select 
	fc.id_administracion,
	fc.id_oficina_presta,
	o.nombre,
	o.nivel1,
	o.nivel2,
	o.nivel3,
	o.nivel4,
	o.nivel5,
	da.id_funcionario,
	f.cedula_funcionario AS cedula, 
	f.ape_nom_funcionario AS funcionario,
	fc.fecha_desde,
	fc.fecha_hasta,
	fc.monto_contrato,
	sp.id_mes, 
	sp.gestion::numeric,
	--sp ==>> situacion_personal
	CASE WHEN dsp.dias_trabajados IS NULL THEN ( SELECT pmt.cantidad_dias_pa_hallar_importe_diario
							FROM parametros pmt
							WHERE pmt.estado = true)
	ELSE dsp.dias_trabajados
	END AS dias_trabajados, 
	--cim ==>> contrato importe mensual
	fc.monto_contrato::numeric AS monto_presupuestado, 
	round(fc.monto_contrato::numeric / 
	(( SELECT pmt.cantidad_dias_pa_hallar_importe_diario::numeric 
		FROM parametros pmt 
		WHERE pmt.estado = true))::numeric * 
	CASE WHEN dsp.dias_trabajados IS NULL THEN 
		(SELECT pmt.cantidad_dias_pa_hallar_importe_diario::numeric 
		  FROM parametros pmt 
		  WHERE pmt.estado = true)
	ELSE dsp.dias_trabajados
	END::numeric,0) - (CASE WHEN dma.importe_aplicado IS NULL THEN 0::numeric
	ELSE dma.importe_aplicado
	END) AS monto_devengado, 
	CASE WHEN dma.importe_aplicado IS NULL THEN 0::numeric
	ELSE dma.importe_aplicado
	END AS importe_aplicado,
	case when fi.ruc_funcion is null then '---' else fi.ruc_funcion end as ruc_numero,
	--case when dp.ruc_numero is null then '---' else dp.ruc_numero end as ruc_numero,
	case when fi.nro_idap is null then '0' else fi.nro_idap end as nro_idap,
	case when iv.porcentaje_iva is null then 0 else iv.porcentaje_iva end as porcentaje_iva,
	case when iv.retencion_iva is null then 0 else iv.retencion_iva end as retencion_iva,
	salarios_contratados.funcion_obtener_retencion(round(fc.monto_contrato::numeric / 
							(( SELECT pmt.cantidad_dias_pa_hallar_importe_diario::numeric 
								FROM parametros pmt 
								WHERE pmt.estado = true))::numeric * 
							CASE WHEN dsp.dias_trabajados IS NULL THEN 
								(SELECT pmt.cantidad_dias_pa_hallar_importe_diario::numeric 
								  FROM parametros pmt 
								  WHERE pmt.estado = true)
							ELSE dsp.dias_trabajados
							END::numeric,0)-(CASE WHEN dma.importe_aplicado IS NULL THEN 0::numeric
									ELSE dma.importe_aplicado
									END),
							case when iv.porcentaje_iva is null then 0 else iv.porcentaje_iva end,
							case when iv.retencion_iva is null then 0 else iv.retencion_iva end) as monto_retencion_iva
FROM legajos.funcionarios_contratados fc
INNER JOIN legajos.datos_administrativos da on (fc.id_dato_administrativo = da.id_dato_administrativo)
INNER JOIN legajos.funcionarios f on (da.id_funcionario = f.id_funcionario)
LEFT JOIN legajos.datos_personales dp on (dp.id_funcionario = f.id_funcionario)
LEFT JOIN legajos.funcionarios_iva fi on fi.id_funcionario = f.id_funcionario
LEFT JOIN legajos.iva iv on fi.id_iva = iv.id_iva
LEFT JOIN salarios_contratados.detalle_situacion_personal dsp on dsp.id_funcionario = f.id_funcionario
      AND dsp.id_situacion_personal in (select sp.id_situacion_personal from salarios_contratados.situacion_personal sp WHERE sp.id_situacion_personal = sp.id_situacion_personal and sp.id_mes = in_id_mes and sp.gestion = in_gestion)

LEFT JOIN salarios_contratados.situacion_personal sp ON sp.id_situacion_personal = sp.id_situacion_personal and sp.id_mes = in_id_mes and sp.gestion = in_gestion /*ORIGINAL*/
--inner JOIN salarios_contratados.situacion_personal sp ON sp.id_situacion_personal = sp.id_situacion_personal and sp.id_mes = in_id_mes and sp.gestion = in_gestion
INNER JOIN legajos.oficinas o ON o.id_oficina = fc.id_oficina_presta and o.gestion = in_gestion
LEFT JOIN salarios_contratados.detalles_multas_aplicadas dma ON dma.id_funcionario = f.id_funcionario
      AND dma.id_multas_aplicadas in (select ma.id_multas_aplicadas from salarios_contratados.multas_aplicadas ma  WHERE ma.id_multas_aplicadas = dma.id_multas_aplicadas AND ma.id_mes = in_id_mes AND ma.gestion = in_gestion)
LEFT JOIN salarios_contratados.multas_aplicadas ma ON ma.id_multas_aplicadas = dma.id_multas_aplicadas AND ma.id_mes = in_id_mes AND ma.gestion = in_gestion

WHERE fc.contrato_actual
ORDER BY fc.id_oficina_presta;
END;
]]></definition>
</function>

<function name="hoja_liquidacion_salario_contratado"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="1000">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<parameter name="concepto">
		<type name="text"/>
	</parameter>
	<parameter name="contratado">
		<type name="character varying"/>
	</parameter>
	<parameter name="cedula">
		<type name="character varying"/>
	</parameter>
	<parameter name="ruc">
		<type name="character varying"/>
	</parameter>
	<parameter name="id_funcionario">
		<type name="integer"/>
	</parameter>
	<parameter name="nro_contrato">
		<type name="character varying"/>
	</parameter>
	<parameter name="monto_contrato">
		<type name="numeric"/>
	</parameter>
	<parameter name="porcentaje_iva">
		<type name="integer"/>
	</parameter>
	<parameter name="porcentaje_retencion">
		<type name="integer"/>
	</parameter>
	<parameter name="id_funcionario_contratado">
		<type name="integer"/>
	</parameter>
	<parameter name="objeto_gasto">
		<type name="integer"/>
	</parameter>
	<parameter name="categoria">
		<type name="character varying"/>
	</parameter>
	<parameter name="id_oficina_presta">
		<type name="integer"/>
	</parameter>
	<parameter name="dias_trabajados">
		<type name="numeric"/>
	</parameter>
	<parameter name="dias_multas">
		<type name="numeric"/>
	</parameter>
	<parameter name="monto_presupuestado">
		<type name="numeric"/>
	</parameter>
	<parameter name="c1_monto">
		<type name="numeric"/>
	</parameter>
	<parameter name="monto_multa">
		<type name="numeric"/>
	</parameter>
	<parameter name="c2_iva">
		<type name="numeric"/>
	</parameter>
	<parameter name="c3_subtotal">
		<type name="numeric"/>
	</parameter>
	<parameter name="importe_descuentos_varios_solicitado">
		<type name="numeric"/>
	</parameter>
	<parameter name="importe_descuentos_varios_aplicado">
		<type name="numeric"/>
	</parameter>
	<parameter name="importe_descuentos_varios_diferencia">
		<type name="numeric"/>
	</parameter>
	<parameter name="importe_liquido_con_descuentos_varios">
		<type name="numeric"/>
	</parameter>
	<parameter name="nivel1">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel2">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel3">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel4">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel5">
		<type name="integer"/>
	</parameter>
	<parameter name="nombre_nivel1">
		<type name="character varying"/>
	</parameter>
	<parameter name="nombre_nivel2">
		<type name="character varying"/>
	</parameter>
	<parameter name="nombre_nivel3">
		<type name="character varying"/>
	</parameter>
	<parameter name="nombre_nivel4">
		<type name="character varying"/>
	</parameter>
	<parameter name="nombre_nivel5">
		<type name="character varying"/>
	</parameter>
	<parameter name="nomenclatura">
		<type name="bigint"/>
	</parameter>
	<parameter name="agrupador">
		<type name="text"/>
	</parameter>
	<parameter name="cargo">
		<type name="character varying"/>
	</parameter>
	</return-type>
	<parameter name="in_id_mes" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_gestion" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_id_funcionario" in="true">
		<type name="integer"/>
	</parameter>
	<definition><![CDATA[
BEGIN
/*
  * Funcion para generar la hoja de liquidación del funcionario contratado
  * Fecha: 2013-05-13
  * Modificado: 2014-02-17 09:18:40 
  * Modificado: 2014-09-11 15:30:59
  * Modificado: 2015-02-09 10:06:14
  * Modificado: 2015-08-04 13:47:14 (se cambia id_oficina por id_oficina_presta)
  * Modificado: 2017-03-31 09:53:26 (se incorpora pago de excedentes y recargos nocturnos)
  * Modificado: 2017-03-31 11:15:50 (se incorpora pago de bonificaciones)
  * Autor: GEAB
  * Parametros:
  *            in_id_mes mes de proceso
  *            in_gestion ejercicio aplicado
  *            in_id_funcionario, identificador del funcionario 
  * 
  * Descripcion:  Genera la hoja de liquidación del funcionario contratado
  * ------------  
  */
	RETURN QUERY 
--SALARIO CONTRATADO
 (SELECT
	'SALARIO CONTRATADO'::text as concepto,--c1
	--f.id_funcionario as ID,
	f.ape_nom_funcionario as contratado,--c2
	f.cedula_funcionario as cedula,--c3
	fc.ruc,--c4
	f.id_funcionario,--c5
	fc.nro_contrato,--c6
	fc.monto_contrato,--c7
	fc.porcentaje_iva,--c8
	fc.porcentaje_retencion,--c9
	fc2.id_funcionario_contratado,--c10
	fc.objeto_gasto,--c11
	fc.categoria,--c12
	fc.id_oficina_presta,--c13
	psd.dias_trabajados::numeric,--c14
	psd.cantidad_dias::numeric as dias_multas,--c15
	psd.monto_presupuestado,--c16
	psd.monto_devengado as C1_monto,--c17
	psd.monto_multa,--c18
	psd.monto_iva as C2_iva,--c19
	psd.importe_liquido_sin_descuentos_varios as C3_subtotal,--c20
	psd.importe_descuentos_varios_solicitado,--c21
	psd.importe_descuentos_varios_aplicado,--c22
	psd.importe_descuentos_varios_diferencia,--c23
	psd.importe_liquido_con_descuentos_varios,--c24
	ocd.nivel1,--c25
	ocd.nivel2,--c26
	ocd.nivel3,--c27
	ocd.nivel4,--c28
	ocd.nivel5,--c29
	ocd.nombre_nivel1,--c30
	coalesce(ocd.nombre_nivel2, ' '),--c31
	coalesce(ocd.nombre_nivel3, ' '),--c32
	coalesce(ocd.nombre_nivel4, ' '),--c33
	coalesce(ocd.nombre_nivel5, ' '),--c34
	1 as nomenclatura,--c35
	'C' as agrupador, --c36
	fun.descripcion_funcion --c37
FROM salarios_contratados.planillas_salarios ps
	LEFT JOIN salarios_contratados.planillas_salarios_detalles psd ON psd.id_planilla_salario=ps.id_planilla_salario
	LEFT JOIN legajos.funcionarios f ON f.id_funcionario=psd.id_funcionario
	LEFT JOIN salarios_contratados.funcionarios_contratos fc ON fc.id_funcionario_contrato=psd.id_funcionario_contrato
--	LEFT JOIN salarios_contratados.funcionarios_contratos fc ON fc.id_funcionario_contrato=psd.id_funcionario_contrato and fc.estado is true
--	LEFT JOIN legajos.oficinas_con_descripciones ocd ON ocd.id_oficina=fc.id_oficina_presta
	--  2015-08-04 13:47:14 (se cambia id_oficina por id_oficina_presta)
	LEFT JOIN legajos.oficinas_con_descripciones ocd ON ocd.id_oficina=fc.id_oficina_presta --and ocd.estado is true  
	LEFT JOIN legajos.funcionarios_contratados fc2 ON fc2.id_funcionario_contratado=fc.id_funcionario_contratado -- and fc.estado is true
	LEFT JOIN legajos.funciones fun ON fun.id_funcion=fc2.id_funcion
WHERE f.id_funcionario=in_id_funcionario and ps.gestion=in_gestion and ps.id_mes=in_id_mes 
ORDER BY 11 ASC,
	 30,31,32,33,34 ASC,
	 7 DESC,
	 2 ASC)
UNION
--ESPACIO EN BLANCO
 (SELECT
	'',--c1
	'',--c2
	'',--c3
	'',--c4
	0,--c5
	'',--c6
	0,--c7
	0,--c8
	0,--c9
	0,--c10
	0,--c11
	'',--c12
	0,--c13
	0,--c14
	0,--c15
	0,--c16
	0,--c17
	0,--c18
	0,--c19
	0,--c20
	0,--c21
	0,--c22
	0,--c23
	0,--c24
	0,--c25
	0,--c26
	0,--c27
	0,--c28
	0,--c29
	'',--c30
	'',--c31
	'',--c32
	'',--c33
	'',--c34
	2,--c35
	'E', --c36
	'' --c37
)
UNION
--DESCUENTOS VARIOS
 (SELECT
	'DESCUENTOS VARIOS',--c1
	'',--c2
	'',--c3
	'',--c4
	0,--c5
	'',--c6
	0,--c7
	0,--c8
	0,--c9
	0,--c10
	0,--c11
	'',--c12
	0,--c13
	0,--c14
	0,--c15
	0,--c16
	0,--c17
	0,--c18
	0,--c19
	0,--c20
	0,--c21
	0,--c22
	0,--c23
	0,--c24
	0,--c25
	0,--c26
	0,--c27
	0,--c28
	0,--c29
	'',--c30
	'',--c31
	'',--c32
	'',--c33
	'',--c34
	3,--c35
	'T', --c36
	'' --c37
)
UNION
--DESCUENTOS JUDICIALES
(SELECT
	td.descripcion,--c1
	f.ape_nom_funcionario,--c2
	f.cedula_funcionario,--c3
	'',--c4
	0,--c5
	'',--c6
	0,--c7
	0,--c8
	0,--c9
	0,--c10
	0,--c11
	'',--c12
	0,--c13
	0,--c14
	0,--c15
	0,--c16
	pdd.monto_descuento,--c17
	0,--c18
	0,--c19
	pdd.monto_descuento,--c20
	0,--c21
	0,--c22
	0,--c23
	0,--c24
	0,--c25
	0,--c26
	0,--c27
	0,--c28
	0,--c29
	'',--c30
	'',--c31
	'',--c32
	'',--c33
	'',--c34
	(row_number() over())+10,--c35
	'B', --c36
	'' --c37
FROM salarios_contratados.planillas_descuentos pd
	LEFT JOIN salarios_contratados.planillas_descuentos_detalles pdd ON pdd.id_planilla_descuento=pd.id_planilla_descuento
	LEFT JOIN salarios_contratados.descuentos_judiciales dj ON dj.id_descuento_judicial=pdd.id_descuento_judicial
	LEFT JOIN salarios.tipos_descuentos td ON td.id_tipo_descuento=dj.id_tipo_descuento
	LEFT JOIN legajos.funcionarios f ON f.id_funcionario=pdd.id_funcionario
	--LEFT JOIN salarios_contratados.funcionarios_contratos fc ON fc.id_funcionario_contrato=pdd.id_funcionario_contrato
	--LEFT JOIN legajos.oficinas_con_descripciones ocd ON ocd.id_oficina=fc.id_oficina_presta
WHERE f.id_funcionario=in_id_funcionario and pdd.id_descuento_judicial is not null and pd.gestion=in_gestion and pd.id_mes=in_id_mes 
ORDER BY td.orden)
UNION
--DESCUENTOS ASOCIACION
(SELECT
	td.descripcion,--c1
	f.ape_nom_funcionario,--c2
	f.cedula_funcionario,--c3
	'',--c4
	0,--c5
	'',--c6
	0,--c7
	0,--c8
	0,--c9
	0,--c10
	0,--c11
	'',--c12
	0,--c13
	0,--c14
	0,--c15
	0,--c16
	pdd.monto_descuento,--c17
	0,--c18
	0,--c19
	pdd.monto_descuento,--c20
	0,--c21
	0,--c22
	0,--c23
	0,--c24
	0,--c25
	0,--c26
	0,--c27
	0,--c28
	0,--c29
	'',--c30
	'',--c31
	'',--c32
	'',--c33
	'',--c34
	(row_number() over())+30,--c35
	'B',--c36
	'' --c37
FROM salarios_contratados.planillas_descuentos pd
	LEFT JOIN salarios_contratados.planillas_descuentos_detalles pdd ON pdd.id_planilla_descuento=pd.id_planilla_descuento
	LEFT JOIN salarios_contratados.descuentos_aso da ON da.id_descuento_aso=pdd.id_descuento_aso
	LEFT JOIN salarios.tipos_descuentos td ON td.id_tipo_descuento=da.id_tipo_descuento
	LEFT JOIN legajos.funcionarios f ON f.id_funcionario=pdd.id_funcionario
WHERE f.id_funcionario=in_id_funcionario and pdd.id_descuento_aso is not null and pd.gestion=in_gestion and pd.id_mes=in_id_mes AND pdd.monto_descuento>0
ORDER BY td.orden)
UNION
--SALARIO CONTRATADO
 (SELECT
	'LIQUIDO SALARIO CONTRATADO',--c1
	f.ape_nom_funcionario,--c2
	f.cedula_funcionario,--c3
	'',--c4
	0,--c5
	'',--c6
	0,--c7
	0,--c8
	0,--c9
	0,--c10
	0,--c11
	'',--c12
	0,--c13
	0,--c14
	0,--c15
	0,--c16
	0,--c17
	0,--c18
	0,--c19
	psd.importe_liquido_con_descuentos_varios,--c20
	0,--c21
	0,--c22
	0,--c23
	0,--c24
	0,--c25
	0,--c26
	0,--c27
	0,--c28
	0,--c29
	'',--c30
	'',--c31
	'',--c32
	'',--c33
	'',--c34
	41,--c35
	'L', --c36
	'' --c37
FROM salarios_contratados.planillas_salarios ps
	LEFT JOIN salarios_contratados.planillas_salarios_detalles psd ON psd.id_planilla_salario=ps.id_planilla_salario AND ps.id_estado=1
	LEFT JOIN legajos.funcionarios f ON f.id_funcionario=psd.id_funcionario
	--LEFT JOIN salarios_contratados.funcionarios_contratos fc ON fc.id_funcionario_contrato=psd.id_funcionario_contrato
	--LEFT JOIN legajos.oficinas_con_descripciones ocd ON ocd.id_oficina=fc.id_oficina_presta
WHERE f.id_funcionario=in_id_funcionario and ps.gestion=in_gestion and ps.id_mes=in_id_mes 
ORDER BY 11 ASC,
	 30,31,32,33,34 ASC,
	 7 DESC,
	 2 ASC)
UNION
--ESPACIO EN BLANCO
 (SELECT
	'',--c1
	'',--c2
	'',--c3
	'',--c4
	0,--c5
	'',--c6
	0,--c7
	0,--c8
	0,--c9
	0,--c10
	0,--c11
	'',--c12
	0,--c13
	0,--c14
	0,--c15
	0,--c16
	0,--c17
	0,--c18
	0,--c19
	0,--c20
	0,--c21
	0,--c22
	0,--c23
	0,--c24
	0,--c25
	0,--c26
	0,--c27
	0,--c28
	0,--c29
	'',--c30
	'',--c31
	'',--c32
	'',--c33
	'',--c34
	42,--c35
	'E',--c36
	'' --c37
)
UNION
--OTROS INGRESOS
 (SELECT
	'OTROS INGRESOS'::text,--c1
	'',--c2
	'',--c3
	'',--c4
	0,--c5
	'',--c6
	0,--c7
	0,--c8
	0,--c9
	0,--c10
	0,--c11
	'',--c12
	0,--c13
	0,--c14
	0,--c15
	0,--c16
	0,--c17
	0,--c18
	0,--c19
	0,--c20
	0,--c21
	0,--c22
	0,--c23
	0,--c24
	0,--c25
	0,--c26
	0,--c27
	0,--c28
	0,--c29
	'',--c30
	'',--c31
	'',--c32
	'',--c33
	'',--c34
	43,--c35
	'T',--c36
	'' --c37
)
UNION
--RE
(SELECT
	'REMUNERACIÓN EXTRAORDINARIA ('||sum(pred.cantidad_horas)||' hs)',--c1
	max(f.ape_nom_funcionario),--c2
	max(f.cedula_funcionario),--c3
	'',--c4
	0,--c5
	'',--c6
	0,--c7
	0,--c8
	0,--c9
	0,--c10
	0,--c11
	'',--c12
	0,--c13
	sum(pred.cantidad_horas),--c14
	0,--c15
	0,--c16
	sum(pred.monto),--c17
	0,--c18
	sum(pred.monto_iva),--c19
	(sum(pred.monto)-sum(pred.monto_iva)),--c20
	0,--c21
	0,--c22
	0,--c23
	0,--c24
	0,--c25
	0,--c26
	0,--c27
	0,--c28
	0,--c29
	'',--c30
	'',--c31
	'',--c32
	'',--c33
	'',--c34
	50 as nomenclatura,--c35
	'C',--c36
	'' --c37
FROM salarios_contratados.planillas_re pre
	LEFT JOIN salarios_contratados.planillas_re_detalles pred ON pred.id_planilla_re=pre.id_planilla_re AND pre.estado=1
	LEFT JOIN legajos.funcionarios f ON f.id_funcionario=pred.id_funcionario
	--LEFT JOIN salarios_contratados.funcionarios_contratos fc ON fc.id_funcionario_contrato=psd.id_funcionario_contrato
	--LEFT JOIN legajos.oficinas_con_descripciones ocd ON ocd.id_oficina=fc.id_oficina_presta
WHERE f.id_funcionario=in_id_funcionario and pre.gestion=in_gestion and pre.id_mes=in_id_mes
GROUP BY  nomenclatura
)
UNION
--RA
(SELECT
	'REMUNERACIÓN ADICIONAL ('||sum(prad.cantidad_horas)||' hs)',--c1
	max(f.ape_nom_funcionario),--c2
	max(f.cedula_funcionario),--c3
	'',--c4
	0,--c5
	'',--c6
	0,--c7
	0,--c8
	0,--c9
	0,--c10
	0,--c11
	'',--c12
	0,--c13
	sum(prad.cantidad_horas),--c14
	0,--c15
	0,--c16
	sum(prad.monto),--c17
	0,--c18
	sum(prad.monto_iva),--c19
	(sum(prad.monto)-sum(prad.monto_iva)),--c20
	0,--c21
	0,--c22
	0,--c23
	0,--c24
	0,--c25
	0,--c26
	0,--c27
	0,--c28
	0,--c29
	'',--c30
	'',--c31
	'',--c32
	'',--c33
	'',--c34
	60 as nomenclatura,--c35
	'C',--c36
	'' --c37
FROM salarios_contratados.planillas_ra pra
	LEFT JOIN salarios_contratados.planillas_ra_detalles prad ON prad.id_planilla_ra=pra.id_planilla_ra AND pra.estado=1
	LEFT JOIN legajos.funcionarios f ON f.id_funcionario=prad.id_funcionario
	--LEFT JOIN salarios_contratados.funcionarios_contratos fc ON fc.id_funcionario_contrato=psd.id_funcionario_contrato
	--LEFT JOIN legajos.oficinas_con_descripciones ocd ON ocd.id_oficina=fc.id_oficina_presta
WHERE f.id_funcionario=in_id_funcionario and pra.gestion=in_gestion and pra.id_mes=in_id_mes
GROUP BY nomenclatura 
)
UNION
--EXCEDENTE/RECARGO NOCTURNO
(SELECT
	(CASE WHEN ps.id_tipo_pago=1 THEN 'EXCEDENTE '::text ELSE 'RECARGO NOCTURNO '::text END)||'('||sum(psd.horas)||' HS.)',--c1
	max(f.ape_nom_funcionario),--c2
	max(f.cedula_funcionario),--c3
	'',--c4
	0,--c5
	'',--c6
	0,--c7
	0,--c8
	0,--c9
	0,--c10
	0,--c11
	'',--c12
	0,--c13
	sum(psd.horas),--c14
	0,--c15
	0,--c16
	sum(psd.importe),--c17
	0,--c18
	sum(psd.importe_iva),--c19
	(sum(psd.importe)-sum(psd.importe_iva)),--c20
	0,--c21
	0,--c22
	0,--c23
	0,--c24
	0,--c25
	0,--c26
	0,--c27
	0,--c28
	0,--c29
	'',--c30
	'',--c31
	'',--c32
	'',--c33
	'',--c34
	70 as nomenclatura,--c35
	'C',--c36
	'' --c37
FROM salarios_contratados.planillas_serenos_detalles psd
     LEFT JOIN salarios_contratados.planillas_serenos ps ON ps.id_planilla_sereno=psd.id_planilla_sereno AND ps.estado=1
    LEFT JOIN legajos.funcionarios f ON f.id_funcionario=psd.id_funcionario
	--LEFT JOIN salarios_contratados.funcionarios_contratos fc ON fc.id_funcionario_contrato=psd.id_funcionario_contrato
	--LEFT JOIN legajos.oficinas_con_descripciones ocd ON ocd.id_oficina=fc.id_oficina_presta
WHERE f.id_funcionario=in_id_funcionario and ps.gestion=in_gestion and ps.id_mes=in_id_mes
GROUP BY ps.id_tipo_pago,nomenclatura 
)
UNION
--BONIFICACIONES
(SELECT
	'BONIFICACIONES'::text,--c1
	max(f.ape_nom_funcionario),--c2
	max(f.cedula_funcionario),--c3
	'',--c4
	0,--c5
	'',--c6
	0,--c7
	0,--c8
	0,--c9
	0,--c10
	0,--c11
	'',--c12
	0,--c13
	0,--c14
	0,--c15
	0,--c16
	sum(pbd.importe),--c17
	0,--c18
	sum(pbd.importe_iva),--c19
	(sum(pbd.importe)-sum(pbd.importe_iva)),--c20
	0,--c21
	0,--c22
	0,--c23
	0,--c24
	0,--c25
	0,--c26
	0,--c27
	0,--c28
	0,--c29
	'',--c30
	'',--c31
	'',--c32
	'',--c33
	'',--c34
	100 as nomenclatura,--c35
	'C',--c36
	'' --c37
FROM salarios_contratados.planillas_bonificaciones_detalles pbd
     LEFT JOIN salarios_contratados.planillas_bonificaciones pb ON pb.id_planilla_bonificacion=pbd.id_planilla_bonificacion AND pb.estado=1
    LEFT JOIN legajos.funcionarios f ON f.id_funcionario=pbd.id_funcionario
	--LEFT JOIN salarios_contratados.funcionarios_contratos fc ON fc.id_funcionario_contrato=psd.id_funcionario_contrato
	--LEFT JOIN legajos.oficinas_con_descripciones ocd ON ocd.id_oficina=fc.id_oficina_presta
WHERE f.id_funcionario=in_id_funcionario and pb.gestion=in_gestion and pb.id_mes=in_id_mes
GROUP BY nomenclatura 
)
UNION
--GRATIFICACIÓN OCASIONAL
(SELECT
	'GRATIFICACIÓN OCASIONAL',--c1
	f.ape_nom_funcionario,--c2
	f.cedula_funcionario,--c3
	'',--c4
	0,--c5
	'',--c6
	0,--c7
	0,--c8
	0,--c9
	0,--c10
	0,--c11
	'',--c12
	0,--c13
	0,--c14
	0,--c15
	0,--c16
	pgod.importe_gratificacion,--c17
	0,--c18
	pgod.importe_iva,--c19
	(pgod.importe_gratificacion-pgod.importe_iva),--c20
	0,--c21
	0,--c22
	0,--c23
	0,--c24
	0,--c25
	0,--c26
	0,--c27
	0,--c28
	0,--c29
	'',--c30
	'',--c31
	'',--c32
	'',--c33
	'',--c34
	80,--c35
	'C',--c36
	'' --c37
FROM salarios_contratados.planillas_gratificaciones_ocasionales pgo
	LEFT JOIN salarios_contratados.planillas_gratificaciones_ocasionales_detalles pgod ON pgod.id_planilla_gratificacion_ocasional=pgo.id_planilla_gratificacion_ocasional AND pgo.estado=1
	LEFT JOIN legajos.funcionarios f ON f.id_funcionario=pgod.id_funcionario
	--LEFT JOIN salarios_contratados.funcionarios_contratos fc ON fc.id_funcionario_contrato=psd.id_funcionario_contrato
	--LEFT JOIN legajos.oficinas_con_descripciones ocd ON ocd.id_oficina=fc.id_oficina_presta
WHERE f.id_funcionario=in_id_funcionario and pgo.gestion=in_gestion and pgo.id_mes=in_id_mes 
)
UNION
--SUBSIDIOS
(SELECT
	s.descripcion||' ('||psd.cantidad||')',--c1
	f.ape_nom_funcionario,--c2
	f.cedula_funcionario,--c3
	'',--c4
	0,--c5
	'',--c6
	0,--c7
	0,--c8
	0,--c9
	0,--c10
	0,--c11
	'',--c12
	0,--c13
	0,--c14
	psd.cantidad,--c15
	0,--c16
	psd.importe_subsidio,--c17
	0,--c18
	psd.importe_iva,--c19
	(psd.importe_subsidio-psd.importe_iva),--c20
	0,--c21
	0,--c22
	0,--c23
	0,--c24
	0,--c25
	0,--c26
	0,--c27
	0,--c28
	0,--c29
	'',--c30
	'',--c31
	'',--c32
	'',--c33
	'',--c34
	(row_number() over())+90,--c35
	'C',--c36
	'' --c37
FROM salarios_contratados.planillas_subsidios ps
	LEFT JOIN salarios_contratados.planillas_subsidios_detalles psd ON psd.id_planilla_subsidio=ps.id_planilla_subsidio AND ps.estado=1
	LEFT JOIN salarios_contratados.funcionarios_subsidios fs ON fs.id_funcionario_subsidio=psd.id_funcionario_subsidio
	LEFT JOIN legajos.funcionarios f ON f.id_funcionario=fs.id_funcionario
	LEFT JOIN salarios_contratados.subsidios s ON s.id_subsidio=fs.id_subsidio
	--LEFT JOIN legajos.oficinas_con_descripciones ocd ON ocd.id_oficina=fc.id_oficina_presta
	WHERE f.id_funcionario=in_id_funcionario and ps.gestion=in_gestion and ps.id_mes=in_id_mes and fs.gestion=in_gestion and fs.id_mes=in_id_mes  
)
UNION
--ESPACIO EN BLANCO
 (SELECT
	'',--c1
	'',--c2
	'',--c3
	'',--c4
	0,--c5
	'',--c6
	0,--c7
	0,--c8
	0,--c9
	0,--c10
	0,--c11
	'',--c12
	0,--c13
	0,--c14
	0,--c15
	0,--c16
	0,--c17
	0,--c18
	0,--c19
	0,--c20
	0,--c21
	0,--c22
	0,--c23
	0,--c24
	0,--c25
	0,--c26
	0,--c27
	0,--c28
	0,--c29
	'',--c30
	'',--c31
	'',--c32
	'',--c33
	'',--c34
	100,--c35
	'E',--c36
	'' --c37
)
ORDER BY 35;

END;
]]></definition>
</function>

<function name="importes_de_salario_por_dia"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="1000">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<parameter name="cedula_funcionario">
		<type name="character varying"/>
	</parameter>
	<parameter name="descripcion_tipo">
		<type name="character varying"/>
	</parameter>
	<parameter name="id_tipo_contrato">
		<type name="integer"/>
	</parameter>
	<parameter name="nro_disposicion">
		<type name="character varying"/>
	</parameter>
	<parameter name="nro_contrato">
		<type name="character varying"/>
	</parameter>
	<parameter name="monto_contrato">
		<type name="numeric"/>
	</parameter>
	<parameter name="importe_diario">
		<type name="numeric"/>
	</parameter>
	<parameter name="funcion">
		<type name="text"/>
	</parameter>
	</return-type>
	<parameter name="in_id_funcionario" in="true">
		<type name="integer"/>
	</parameter>
	<definition><![CDATA[
BEGIN

RETURN QUERY SELECT
	c.cedula_funcionario,
	d.descripcion_tipo,
	a.id_tipo_contrato,
	--a.fecha_desde, 
	--a.fecha_hasta, 	
	a.nro_disposicion, 
	a.nro_contrato, 
	--a.activo,
	a.monto_contrato::numeric,
	(a.monto_contrato::numeric / (select cantidad_dias_pa_hallar_importe_diario from parametros where estado)) as importe_diario,
	a.funcion
FROM legajos.funcionarios_contratados a
left join legajos.datos_administrativos b on (a.id_dato_administrativo = b.id_dato_administrativo)
left join legajos.funcionarios c on (b.id_funcionario = c.id_funcionario)
left join legajos.tipo_contrato d on (a.id_tipo_contrato = d.id_tipo_contrato)
WHERE
--	a.id_mes = in_id_mes
	b.id_funcionario = in_id_funcionario;
END;
]]></definition>
</function>

<function name="importes_por_unidad_de_tiempo"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="1000">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<parameter name="id_funcionario">
		<type name="integer"/>
	</parameter>
	<parameter name="importe_mensual">
		<type name="integer"/>
	</parameter>
	<parameter name="funcion">
		<type name="text"/>
	</parameter>
	<parameter name="importe_diario">
		<type name="numeric"/>
	</parameter>
	<parameter name="importe_por_hora">
		<type name="numeric"/>
	</parameter>
	</return-type>
	<parameter name="in_id_funcionario" in="true">
		<type name="integer"/>
	</parameter>
	<definition><![CDATA[
BEGIN
--funcion para realizar el calculo de importe de salarios a contratados por dia
--por hora para las remuneraciones complementarias.-
RETURN QUERY SELECT
	c.id_funcionario,
	a.monto_contrato as importe_mensual,
        a.funcion,
        round(
        a.monto_contrato/(
			SELECT cantidad_dias_pa_hallar_importe_diario
			FROM parametros
			where estado is true limit 1
        ))::numeric as importe_diario, --para el calculo de salario por día.-
	round(
		((1.5::numeric(12,2)*a.monto_contrato))/176::numeric(12,2)
		)::numeric as importe_por_hora --para realizar el calculo para las horas adicionales por hora.-

FROM legajos.funcionarios_contratados a
left join legajos.datos_administrativos b on a.id_dato_administrativo = b.id_dato_administrativo
left join legajos.funcionarios c on b.id_funcionario = c.id_funcionario
WHERE
	a.contrato_actual = true
	and c.id_funcionario = in_id_funcionario;
END;
]]></definition>
</function>

<function name="obtener_cedula_nombre_para_pedidofondo"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<comment><![CDATA[Retorna cedula y nombre para mostrar en pedido fondo]]></comment>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="text"/>
	</return-type>
	<parameter name="in_tabla_detalle">
		<type name="text"/>
	</parameter>
	<parameter name="in_id_detalle_planilla">
		<type name="text"/>
	</parameter>
	<parameter name="in_id_detalle_planilla_valor">
		<type name="integer"/>
	</parameter>
	<definition><![CDATA[
DECLARE
    vconsulta text;
    vretorna text;
    vtablaref text;
    vcamporef text;
BEGIN
/*
  * Funcion para obtener cedula y nombre de funcionario a partir del id de detalle de las tablas asociadas a un pedido fondo
  * Fecha: 2012-09-03
  * Autor: Lic. José Cabrera
  * Parametros:
  *            in_tabla_detalle corresponde al nombre de tabla detalle en cuestion 
  *            in_id_detalle_planilla corresponde al nombre del campo del id del detalle
  *            in_id_detalle_planilla_valor corresponde al valor del id del detalle 
  * 
  * Descripcion:  Dependiendo de la tabla detalle obtiene el id_funcionario con ese valor asocia para  
  * ------------  concatenar la cedula y nombre del funcionario
  */
	vconsulta := '';
	vtablaref := '';
	vcamporef := '';
	--raise notice 'Tabla %',$1;
	-- Si la tabla no tiene id_funcionario directamente debe obtener de la tabla asociada a la tabla en cuestion
	-- Las siguientes tablas no contienen id_funcionario:
	-- ....PLANILLAS_SUBSIDIOS, 
	IF (upper(in_tabla_detalle) in ('PLANILLAS_SUBSIDIOS_DETALLES', 'PLANILLAS_AGUINALDOS_DETALLES')  ) THEN
		IF (upper(in_tabla_detalle) in ('PLANILLAS_SUBSIDIOS_DETALLES')) THEN
		   vtablaref := 'salarios_contratados.funcionarios_subsidios';
		   vcamporef := 'id_funcionario_subsidio';				
		ELSIF (upper(in_tabla_detalle) in ('PLANILLAS_AGUINALDOS_DETALLES')) THEN
		   vtablaref := 'salarios_contratados.funcionarios_aguinaldos';
		   vcamporef := 'id_funcionario_aguinaldo';
		END IF;
		vconsulta = 'SELECT trim(f.cedula_funcionario)|| '||E'\''||' - '||E'\'' ||'||'||  
		'trim(ape_nom_funcionario)'||
		' FROM salarios_contratados.'||$1||' t '||
		' INNER JOIN '||vtablaref||' w ON w.'||vcamporef||'=t.'||vcamporef||
		' INNER JOIN legajos.funcionarios f ON w.id_funcionario = f.id_funcionario WHERE  t.'||$2||'='||$3; 
	ELSE 
	-- Las siguientes tablas si contienen id_funcionario:
	-- ....planilla_gratificacion_ocacional_detalles,
	-- ....planillas_ra_detalles,
	-- ....planillas_re_detalles,
	-- ....detalles_planillas_salarios_contratados,
	    vconsulta = 'SELECT trim(f.cedula_funcionario)|| '||E'\''||' - '||E'\'' ||'||'||  
	    'trim(ape_nom_funcionario)'||
	    ' FROM salarios_contratados.'||$1||' t '||
	    ' INNER JOIN legajos.funcionarios f ON t.id_funcionario = f.id_funcionario WHERE  '||$2||'='||$3; 
	END IF;
	-- Con la consulta concatenada se aplica un execute para ejecutar el select y el resultado tirar en la
	-- variable vretorna que retorna como resultado
	execute vconsulta INTO vretorna;

	return vretorna;
END;
]]></definition>
</function>

<function name="obtener_descuentos_judiciales_disponibles"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="1000">
	<schema name="salarios_contratados"/>
	<role name="mcaniza"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<parameter name="id_judicial">
		<type name="integer"/>
	</parameter>
	<parameter name="id_funcionario">
		<type name="integer"/>
	</parameter>
	<parameter name="cedula_funcionario">
		<type name="text"/>
	</parameter>
	<parameter name="ape_nom_funcionario">
		<type name="text"/>
	</parameter>
	<parameter name="nro_cuenta">
		<type name="text"/>
	</parameter>
	<parameter name="monto_saldo">
		<type name="numeric"/>
	</parameter>
	<parameter name="descuento">
		<type name="numeric"/>
	</parameter>
	<parameter name="saldo_con_descuento">
		<type name="numeric"/>
	</parameter>
	<parameter name="dem_documento">
		<type name="text"/>
	</parameter>
	<parameter name="dem_descripcion">
		<type name="text"/>
	</parameter>
	<parameter name="fecha">
		<type name="date"/>
	</parameter>
	</return-type>
	<parameter name="in_id_administracion" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_gestion" in="true">
		<type name="numeric"/>
	</parameter>
	<parameter name="in_id_mes" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_id_tipo_descuento" in="true">
		<type name="integer"/>
	</parameter>
	<definition><![CDATA[
DECLARE
	rSALIDA RECORD;
	tAbreviatura text;

BEGIN
-- 'DJCG'
	Select tz.abreviatura
		into tAbreviatura
	from salarios.tipos_descuentos tz
	where tz.id_tipo_descuento = IN_ID_TIPO_DESCUENTO;


-- Fecha: 2013-10-09
-- Motivo: Obtener los descuentos judiciales a ser aplicados.

-- en cobro de guaraníes: Cuando el saldo es menor al importe del descuento de este mes utilizar el importe del saldo
-- en asistencia alimenticia: el saldo siempre es cero
FOR rSALIDA IN 
	SELECT 
		j.id_judicial
	FROM  salarios_contratados.judiciales j  
	WHERE j.id_tipo_descuento = IN_ID_TIPO_DESCUENTO
		AND j.id_administracion IN (IN_ID_ADMINISTRACION)
		AND j.id_judicial NOT IN (
			SELECT k.id_judicial 
			FROM salarios_contratados.descuentos_judiciales k
			WHERE k.id_mes = IN_ID_MES  
				-- AND ESTADO????
				AND k.gestion = IN_GESTION
				AND k.id_administracion IN (IN_ID_ADMINISTRACION)  
		)  
	ORDER BY j.id_judicial ASC
LOOP

	IF (tAbreviatura = 'DJCG') THEN
		SELECT 
			j.id_judicial,
			f.id_funcionario,
			f.cedula_funcionario, 
			f.ape_nom_funcionario, 
			j.nro_cuenta, 
			j.monto_saldo,
			(
			CASE 
				WHEN (j.monto_descuento_mensual > j.monto_saldo AND t.abreviatura='DJCG') then j.monto_saldo 
				ELSE j.monto_descuento_mensual 
			END
			) AS "DESCUENTO", 

			(
			CASE 
				WHEN (j.monto_descuento_mensual > j.monto_saldo) then 0 
				ELSE (j.monto_saldo - j.monto_descuento_mensual) 
			END
			) AS "saldo_con_descuento" ,

			d.dem_documento, 
			d.dem_descripcion, 
			j.fecha

			INTO

			id_judicial,
			id_funcionario,
			cedula_funcionario, 
			ape_nom_funcionario, 
			nro_cuenta, 
			monto_saldo,
			descuento, 
			saldo_con_descuento,
			dem_documento, 
			dem_descripcion, 
			fecha

		FROM  salarios_contratados.judiciales j  
			LEFT JOIN  legajos.funcionarios f 
				ON j.id_funcionario = f.id_funcionario  
			LEFT JOIN salarios_contratados.demandantes d 
				ON d.id_demandante = j.id_demandante  
			LEFT JOIN salarios.tipos_descuentos t 
				ON j.id_tipo_descuento = t.id_tipo_descuento  
		WHERE j.id_judicial = rSALIDA.id_judicial 
			AND j.monto_saldo > 0
		ORDER BY j.id_judicial ASC;

	ELSE
	-- por aqui cuando es asistencia alimenticia:
		SELECT 
			j.id_judicial,
			f.id_funcionario,
			f.cedula_funcionario, 
			f.ape_nom_funcionario, 
			j.nro_cuenta, 
			j.monto_saldo,
			(
			CASE 
				WHEN (j.monto_descuento_mensual > j.monto_saldo AND t.abreviatura='DJCG') then j.monto_saldo 
				ELSE j.monto_descuento_mensual 
			END
			) AS "DESCUENTO", 

			(
			CASE 
				WHEN (j.monto_descuento_mensual > j.monto_saldo) then 0 
				ELSE (j.monto_saldo - j.monto_descuento_mensual) 
			END
			) AS "saldo_con_descuento" ,

			d.dem_documento, 
			d.dem_descripcion, 
			j.fecha

			INTO

			id_judicial,
			id_funcionario,
			cedula_funcionario, 
			ape_nom_funcionario, 
			nro_cuenta, 
			monto_saldo,
			descuento, 
			saldo_con_descuento,
			dem_documento, 
			dem_descripcion, 
			fecha

		FROM  salarios_contratados.judiciales j  
			LEFT JOIN  legajos.funcionarios f 
				ON j.id_funcionario = f.id_funcionario  
			LEFT JOIN salarios_contratados.demandantes d 
				ON d.id_demandante = j.id_demandante  
			LEFT JOIN salarios.tipos_descuentos t 
				ON j.id_tipo_descuento = t.id_tipo_descuento  
		WHERE j.id_judicial = rSALIDA.id_judicial 
		ORDER BY j.id_judicial ASC;
	END IF;

	IF (id_judicial is not null) THEN
		RETURN NEXT;
	END IF;

END LOOP;


END;
]]></definition>
</function>

<function name="obtener_descuentos_varios"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="1000">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<parameter name="id_funcionario">
		<type name="integer"/>
	</parameter>
	<parameter name="monto">
		<type name="numeric"/>
	</parameter>
	<parameter name="ejecutado">
		<type name="numeric"/>
	</parameter>
	<parameter name="id_tipo_descuento">
		<type name="integer"/>
	</parameter>
	<parameter name="id_descuento_aso">
		<type name="integer"/>
	</parameter>
	<parameter name="id_descuento_judicial">
		<type name="integer"/>
	</parameter>
	<parameter name="id_judicial">
		<type name="integer"/>
	</parameter>
	<parameter name="orden">
		<type name="integer"/>
	</parameter>
	<parameter name="aso">
		<type name="boolean"/>
	</parameter>
	</return-type>
	<parameter name="in_id_administracion" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_id_gestion" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_id_mes" in="true">
		<type name="integer"/>
	</parameter>
	<definition><![CDATA[
BEGIN
RETURN QUERY 

Select 
        e.id_funcionario, 
	e.monto, 
	e.ejecutado,
	e.id_tipo_descuento,

	e.id_descuento_aso, 
        e.id_descuento_judicial,
        e.id_judicial,

        f.orden,
        f.aso
from
(
-- Descuentos varios (asociaciones)
SELECT 
        c.id_funcionario, 
	c.monto, 
	c.ejecutado,
	c.id_tipo_descuento,

	c.id_descuento_aso, 
        0 as id_descuento_judicial,
        0 as id_judicial

FROM salarios_contratados.descuentos_aso c
WHERE c.id_administracion = in_id_administracion -- 0 
	and c.gestion = in_id_gestion -- 2011      
	and c.id_mes = in_id_mes -- 1
	and c.id_descuento_aso not in (
-- este select es para obtener los id de descuentos utilizados
SELECT 
       z.id_descuento_aso
  FROM salarios_contratados.planillas_descuentos_detalles z
	left join salarios_contratados.planillas_descuentos y on (z.id_planilla_descuento = y.id_planilla_descuento)
where y.estado <> 2 -- estado = 2 significa anulado en la planilla de descuentos!
and z.id_descuento_aso is not null
and y.id_administracion = in_id_administracion
and y.gestion = in_id_gestion
and y.id_mes = in_id_mes
)




union

-- Descuentos Judiciales:
SELECT 
--	d.id_administracion, 
--	d.gestion, 
--	d.id_mes, 

	d.id_funcionario, 
	d.monto, 
	d.ejecutado,
        d.id_tipo_descuento, 

	0 as id_descuento_aso,
	d.id_descuento_judicial, 
	d.id_judicial

  FROM salarios_contratados.descuentos_judiciales d
WHERE 
      d.id_administracion= in_id_administracion
      and d.gestion= in_id_gestion
      and d.id_mes= in_id_mes
      and d.id_descuento_judicial not in (
-- este select es para obtener los id de descuentos utilizados
SELECT 
       z.id_descuento_judicial
  FROM salarios_contratados.planillas_descuentos_detalles z
	left join salarios_contratados.planillas_descuentos y on (z.id_planilla_descuento = y.id_planilla_descuento)
where y.estado <> 2  -- estado = 2 significa anulado en la planilla de descuentos!
and z.id_descuento_judicial is not null
and y.id_administracion =in_id_administracion
and y.gestion = in_id_gestion
and y.id_mes =in_id_mes

)

) as e 
       left join salarios.tipos_descuentos f
		on (e.id_tipo_descuento = f.id_tipo_descuento 
			and f.id_administracion = 0
		    ) -- esto es 0 debido a que el orden es el mismo para ambos, 
		      -- si se requiere completamente separados debe ir: in_id_administracion

-- OJO: el orden de aplicacion de descuento esta dato por la columna f.orden
order by e.id_funcionario asc, f.orden asc, f.aso desc
;

END;
]]></definition>
</function>

<function name="obtener_descuentos_varios_contratados"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="1000">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<parameter name="id_funcionario">
		<type name="integer"/>
	</parameter>
	<parameter name="monto">
		<type name="numeric"/>
	</parameter>
	<parameter name="ejecutado">
		<type name="numeric"/>
	</parameter>
	<parameter name="id_tipo_descuento">
		<type name="integer"/>
	</parameter>
	<parameter name="id_descuento_aso">
		<type name="integer"/>
	</parameter>
	<parameter name="id_descuento_judicial">
		<type name="integer"/>
	</parameter>
	<parameter name="id_judicial">
		<type name="integer"/>
	</parameter>
	<parameter name="orden">
		<type name="integer"/>
	</parameter>
	<parameter name="aso">
		<type name="boolean"/>
	</parameter>
	</return-type>
	<parameter name="in_id_administracion" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_id_gestion" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_id_mes" in="true">
		<type name="integer"/>
	</parameter>
	<definition><![CDATA[
BEGIN
RETURN QUERY 

/*
Fecha: 14-11-2012

-- resultado de select con union entre descuentos varios y desc judiciales
id_administracion,
gestion,
id_mes,

id_funcionario,
monto,
ejecutado,
id_tipo_descuento, 

id_descuento_aso,
id_descuento_judicial,
id_judicial
*/

Select 
        e.id_funcionario, 
	e.monto, 
	e.ejecutado,
	e.id_tipo_descuento,

	e.id_descuento_aso, 
        e.id_descuento_judicial,
        e.id_judicial,

        f.orden,
        f.aso
from
(

-- Descuentos varios (asociaciones)
SELECT 
--	c.id_administracion, 
--	c.gestion, 
--	c.id_mes, 

        c.id_funcionario, 
	c.monto, 
	c.ejecutado,
	c.id_tipo_descuento,

	c.id_descuento_aso, 
        0 as id_descuento_judicial,
        0 as id_judicial

FROM salarios_contratados.descuentos_aso c
WHERE c.id_administracion = in_id_administracion -- 0 
	and c.gestion = in_id_gestion -- 2011      
	and c.id_mes = in_id_mes -- 1
	and c.id_descuento_aso not in (
-- este select es para obtener los id de descuentos utilizados
SELECT 
       z.id_descuento_aso
  FROM salarios_contratados.planillas_descuentos_detalles z
	left join salarios_contratados.planillas_descuentos y on (z.id_planilla_descuento = y.id_planilla_descuento)
where y.estado <> 2 -- estado = 2 significa anulado en la planilla de descuentos!
and z.id_descuento_aso is not null
and y.id_administracion = in_id_administracion
and y.gestion = in_id_gestion
and y.id_mes = in_id_mes
)




union

-- Descuentos Judiciales:
SELECT 
--	d.id_administracion, 
--	d.gestion, 
--	d.id_mes, 

	d.id_funcionario, 
	d.monto, 
	d.ejecutado,
        d.id_tipo_descuento, 

	0 as id_descuento_aso,
	d.id_descuento_judicial, 
	d.id_judicial

  FROM salarios_contratados.descuentos_judiciales d
WHERE 
      d.id_administracion = in_id_administracion -- 0
      and d.gestion = in_id_gestion -- 2011
      and d.id_mes = in_id_mes -- 1
      and d.id_descuento_judicial not in (
-- este select es para obtener los id de descuentos utilizados
SELECT 
       z.id_descuento_judicial
  FROM salarios_contratados.planillas_descuentos_detalles z
	left join salarios_contratados.planillas_descuentos y on (z.id_planilla_descuento = y.id_planilla_descuento)
where y.estado <> 2  -- estado = 2 significa anulado en la planilla de descuentos!
and z.id_descuento_judicial is not null
and y.id_administracion = in_id_administracion
and y.gestion = in_id_gestion
and y.id_mes = in_id_mes

)

) as e 
       left join salarios.tipos_descuentos f
		on (e.id_tipo_descuento = f.id_tipo_descuento 
			and f.id_administracion = 0
		    ) -- esto es 0 debido a que el orden es el mismo para ambos, 
		      -- si se requiere completamente separados debe ir: in_id_administracion

-- OJO: el orden de aplicacion de descuento esta dato por la columna f.orden
order by e.id_funcionario asc, f.orden asc, f.aso desc
;


END;
]]></definition>
</function>

<function name="obtener_detalles_planillas_descuentos_con_id_tipo_descuento"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="1000">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<comment><![CDATA[Devuele los mismos datos de la tabla 
          salarios_contratados.detalles_planillas_descuentos mas el id_tipo_descuento
          de una planilla de descuentos especifica.]]></comment>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<parameter name="id_planilla_descuento_detalle">
		<type name="integer"/>
	</parameter>
	<parameter name="id_administracion">
		<type name="integer"/>
	</parameter>
	<parameter name="id_planilla_descuento">
		<type name="integer"/>
	</parameter>
	<parameter name="id_funcionario">
		<type name="integer"/>
	</parameter>
	<parameter name="monto_solicitado">
		<type name="numeric"/>
	</parameter>
	<parameter name="monto_descuento">
		<type name="numeric"/>
	</parameter>
	<parameter name="monto_diferencia">
		<type name="numeric"/>
	</parameter>
	<parameter name="id_tipo_descuento">
		<type name="integer"/>
	</parameter>
	<parameter name="id_descuento_judicial">
		<type name="integer"/>
	</parameter>
	<parameter name="id_descuento_aso">
		<type name="integer"/>
	</parameter>
	<parameter name="usu_alta">
		<type name="character varying"/>
	</parameter>
	<parameter name="fec_alta">
		<type name="timestamp"/>
	</parameter>
	<parameter name="ip_alta">
		<type name="character varying"/>
	</parameter>
	<parameter name="usu_modi">
		<type name="character varying"/>
	</parameter>
	<parameter name="fec_modi">
		<type name="timestamp"/>
	</parameter>
	<parameter name="ip_modi">
		<type name="character varying"/>
	</parameter>
	</return-type>
	<parameter name="in_id_planilla_descuento" in="true">
		<type name="integer"/>
	</parameter>
	<definition><![CDATA[
BEGIN
/*
Fecha: 2013-02-28
Objetivo: Devuele los mismos datos de la tabla 
          salarios_contratados.detalles_planillas_descuentos mas el id_tipo_descuento
          de una planilla de descuentos especifica.-
Parametro de entrada: 
IN_ID_PLANILLA_DESCUENTO integer
*/

RETURN QUERY 
SELECT 
	b.id_planilla_descuento_detalle, 
	b.id_administracion, 
	b.id_planilla_descuento, 
	b.id_funcionario, 
	b.monto_solicitado, 
	b.monto_descuento, 
	(b.monto_solicitado - b.monto_descuento) as "monto_diferencia",
(CASE 
	WHEN (b.id_descuento_aso is not null) THEN 
		(Select z.id_tipo_descuento from salarios_contratados.descuentos_aso z WHERE z.id_descuento_aso = b.id_descuento_aso)
	ELSE
		(Select y.id_tipo_descuento from salarios_contratados.descuentos_judiciales y WHERE y.id_descuento_judicial = b.id_descuento_judicial)
END) as "id_tipo_descuento",
	b.id_descuento_judicial, 
	b.id_descuento_aso,
	b.usu_alta, 
	b.fec_alta, 
	b.ip_alta, 
	b.usu_modi, 
	b.fec_modi, 
	b.ip_modi
FROM salarios_contratados.planillas_descuentos_detalles b
WHERE b.id_planilla_descuento = IN_ID_PLANILLA_DESCUENTO;
-- AND id_tipo_descuento=9;

END;
]]></definition>
</function>

<function name="obtener_funcionarios_contratos"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="1000">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<parameter name="id_administracion">
		<type name="integer"/>
	</parameter>
	<parameter name="objeto_gasto">
		<type name="integer"/>
	</parameter>
	<parameter name="id_oficina_presta">
		<type name="integer"/>
	</parameter>
	<parameter name="nombre">
		<type name="character varying"/>
	</parameter>
	<parameter name="nivel1">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel2">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel3">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel4">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel5">
		<type name="integer"/>
	</parameter>
	<parameter name="id_funcionario">
		<type name="integer"/>
	</parameter>
	<parameter name="cedula">
		<type name="character varying"/>
	</parameter>
	<parameter name="funcionario">
		<type name="character varying"/>
	</parameter>
	<parameter name="desde">
		<type name="date"/>
	</parameter>
	<parameter name="hasta">
		<type name="date"/>
	</parameter>
	<parameter name="monto_contrato">
		<type name="numeric"/>
	</parameter>
	<parameter name="id_mes">
		<type name="integer"/>
	</parameter>
	<parameter name="gestion">
		<type name="numeric"/>
	</parameter>
	<parameter name="dias_trabajados">
		<type name="integer"/>
	</parameter>
	<parameter name="monto_presupuestado">
		<type name="numeric"/>
	</parameter>
	<parameter name="monto_devengado">
		<type name="numeric"/>
	</parameter>
	<parameter name="monto_liquido">
		<type name="numeric"/>
	</parameter>
	<parameter name="monto_multa">
		<type name="numeric"/>
	</parameter>
	<parameter name="ruc_funcion">
		<type name="character varying"/>
	</parameter>
	<parameter name="porcentaje_iva">
		<type name="integer"/>
	</parameter>
	<parameter name="retencion_iva">
		<type name="integer"/>
	</parameter>
	<parameter name="monto_retencion_iva">
		<type name="numeric"/>
	</parameter>
	</return-type>
	<parameter name="in_id_mes" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_gestion" in="true">
		<type name="integer"/>
	</parameter>
	<definition><![CDATA[
BEGIN
RETURN QUERY 
Select distinct
	fc.id_administracion,
	fc.objeto_gasto,
	fc.id_oficina_presta,
	o.nombre,
	o.nivel1,
	o.nivel2,
	o.nivel3,
	o.nivel4,
	o.nivel5,
	fc.id_funcionario,
	f.cedula_funcionario AS cedula, 
	f.ape_nom_funcionario AS funcionario,
	fc.desde,
	fc.hasta,
	fc.monto_contrato,
	sp.id_mes, 
	sp.gestion::numeric,
	--sp ==>> situacion_personal
	CASE WHEN dsp.dias_trabajados IS NULL THEN ( SELECT pmt.cantidad_dias_pa_hallar_importe_diario
							FROM parametros pmt
							WHERE pmt.estado = true)
	ELSE dsp.dias_trabajados
	END AS dias_trabajados, 
	--cim ==>> contrato importe mensual
	fc.monto_contrato::numeric AS monto_presupuestado,

	(round(fc.monto_contrato::numeric / 
	(( SELECT pmt.cantidad_dias_pa_hallar_importe_diario::numeric
		FROM parametros pmt 
		WHERE pmt.estado = true))::numeric * 
	CASE WHEN dsp.dias_trabajados IS NULL THEN 
		(SELECT pmt.cantidad_dias_pa_hallar_importe_diario::numeric
		  FROM parametros pmt 
		  WHERE pmt.estado = true)
	ELSE dsp.dias_trabajados
	END::numeric,0) - (CASE WHEN dma.importe_aplicado IS NULL THEN 0::numeric ELSE dma.importe_aplicado END)) as monto_devengado,
 
	(round(fc.monto_contrato::numeric / 
	(( SELECT pmt.cantidad_dias_pa_hallar_importe_diario::numeric
		FROM parametros pmt 
		WHERE pmt.estado = true))::numeric * 
	CASE WHEN dsp.dias_trabajados IS NULL THEN 
		(SELECT pmt.cantidad_dias_pa_hallar_importe_diario::numeric 
		  FROM parametros pmt 
		  WHERE pmt.estado = true)
	ELSE dsp.dias_trabajados
	END::numeric,0) - (CASE WHEN dma.importe_aplicado IS NULL THEN 0::numeric ELSE dma.importe_aplicado END))
	-
	((salarios_contratados.funcion_obtener_retencion(round(fc.monto_contrato::numeric / 
							(( SELECT pmt.cantidad_dias_pa_hallar_importe_diario::numeric 
								FROM parametros pmt 
								WHERE pmt.estado = true))::numeric * 
							CASE WHEN dsp.dias_trabajados IS NULL THEN 
								(SELECT pmt.cantidad_dias_pa_hallar_importe_diario::numeric 
								  FROM parametros pmt 
								  WHERE pmt.estado = true)
							ELSE dsp.dias_trabajados
							END::numeric,0)-(CASE WHEN dma.importe_aplicado IS NULL THEN 0::numeric
									ELSE dma.importe_aplicado
									END),
							case when fc.porcentaje_iva is null then 0 else fc.porcentaje_iva end,
							case when fc.porcentaje_retencion is null then 0 else fc.porcentaje_retencion end))::numeric) AS monto_devengado,
							
	CASE WHEN dma.importe_aplicado IS NULL THEN 0::numeric ELSE dma.importe_aplicado END AS importe_aplicado,
	CASE WHEN fc.ruc IS NULL THEN '--' ELSE fc.ruc END as ruc_numero,
	--CASE WHEN fc.iva IS NULL THEN 0 ELSE fc.iva END AS iva,
	CASE WHEN fc.porcentaje_iva IS NULL THEN 0 ELSE fc.porcentaje_iva END AS porcentaje_iva,
	CASE WHEN fc.porcentaje_retencion IS NULL THEN 0 ELSE fc.porcentaje_retencion END AS porcentaje_retencion,
	(salarios_contratados.funcion_obtener_retencion(round(fc.monto_contrato::numeric / 
							(( SELECT pmt.cantidad_dias_pa_hallar_importe_diario::numeric 
								FROM parametros pmt 
								WHERE pmt.estado = true))::numeric * 
							CASE WHEN dsp.dias_trabajados IS NULL THEN 
								(SELECT pmt.cantidad_dias_pa_hallar_importe_diario::numeric 
								  FROM parametros pmt 
								  WHERE pmt.estado = true)
							ELSE dsp.dias_trabajados
							END::numeric,0)-(CASE WHEN dma.importe_aplicado IS NULL THEN 0::numeric
									ELSE dma.importe_aplicado
									END),
							case when fc.porcentaje_iva is null then 0 else fc.porcentaje_iva end,
							case when fc.porcentaje_retencion is null then 0 else fc.porcentaje_retencion end))::numeric as monto_retencion_iva						
FROM salarios_contratados.funcionarios_contratos fc
INNER JOIN legajos.funcionarios f on (fc.id_funcionario = f.id_funcionario)
LEFT JOIN legajos.datos_personales dp on (dp.id_funcionario = f.id_funcionario)
LEFT JOIN legajos.funcionarios_iva fi on fi.id_funcionario = f.id_funcionario
LEFT JOIN legajos.iva iv on fi.id_iva = iv.id_iva
LEFT JOIN salarios_contratados.detalle_situacion_personal dsp on dsp.id_funcionario = f.id_funcionario
      AND dsp.id_situacion_personal in (select sp.id_situacion_personal from salarios_contratados.situacion_personal sp WHERE sp.id_situacion_personal = sp.id_situacion_personal and sp.id_mes = in_id_mes and sp.gestion = in_gestion)
LEFT JOIN salarios_contratados.situacion_personal sp ON sp.id_situacion_personal = sp.id_situacion_personal and sp.id_mes = in_id_mes and sp.gestion = in_gestion
INNER JOIN legajos.oficinas o ON o.id_oficina = fc.id_oficina_presta and o.gestion = in_gestion
LEFT JOIN salarios_contratados.detalles_multas_aplicadas dma ON dma.id_funcionario = f.id_funcionario
      AND dma.id_multas_aplicadas in (select ma.id_multas_aplicadas from salarios_contratados.multas_aplicadas ma  WHERE ma.id_multas_aplicadas = dma.id_multas_aplicadas AND ma.id_mes = in_id_mes AND ma.gestion = in_gestion)
LEFT JOIN salarios_contratados.multas_aplicadas ma ON ma.id_multas_aplicadas = dma.id_multas_aplicadas AND ma.id_mes = in_id_mes AND ma.gestion = in_gestion
WHERE fc.estado
ORDER BY fc.id_oficina_presta;
END;
]]></definition>
</function>

<function name="obtener_funcionarios_subsidios"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="1000">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<parameter name="id_funcionario_subsidio">
		<type name="integer"/>
	</parameter>
	<parameter name="cedula_funcionario">
		<type name="character varying"/>
	</parameter>
	<parameter name="ape_nom_funcionario">
		<type name="character varying"/>
	</parameter>
	<parameter name="objeto_gasto">
		<type name="integer"/>
	</parameter>
	<parameter name="cantidad">
		<type name="integer"/>
	</parameter>
	<parameter name="monto">
		<type name="numeric"/>
	</parameter>
	<parameter name="importe_iva">
		<type name="numeric"/>
	</parameter>
	<parameter name="id_oficina">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel1">
		<type name="integer"/>
	</parameter>
	<parameter name="nombre_oficina">
		<type name="character varying"/>
	</parameter>
	</return-type>
	<parameter name="in_id_mes" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_gestion" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_id_administracion" in="true">
		<type name="integer"/>
	</parameter>
	<definition><![CDATA[
BEGIN
/*
  * Funcion para obtener planilla de subsidios a contratados
  * Fecha: 2013-04-29
  * Autor: DMAO
  * Parametros:
  *            in_id_mes mes de proceso
  *            in_gestion ejercicio aplicado
  *            in_id_administracion, identificador de la administracion 
  * 
  * Descripcion:  Obtener el importe de subsidio a contratados
  * ------------  
  */
	RETURN QUERY 
	SELECT distinct
	fs.id_funcionario_subsidio,
	f.cedula_funcionario, 
	f.ape_nom_funcionario,
	fc.objeto_gasto,
	fs.cantidad,
	(fs.cantidad * s.importe) as monto,
	salarios_contratados.funcion_obtener_retencion((fs.cantidad * s.importe), fc.porcentaje_iva, fc.porcentaje_retencion) as importe_iva,
	o.id_oficina,
	o.nivel1,
	o.nombre
FROM salarios_contratados.funcionarios_subsidios fs
INNER JOIN legajos.funcionarios f ON f.id_funcionario = fs.id_funcionario
INNER JOIN salarios_contratados.funcionarios_contratos fc ON (fc.id_funcionario = f.id_funcionario and fc.estado is TRUE)
LEFT JOIN salarios_contratados.subsidios s ON (s.id_subsidio = fs.id_subsidio)
LEFT JOIN legajos.oficinas o ON o.id_oficina = fs.id_oficina AND o.gestion = in_gestion
WHERE fs.id_mes = in_id_mes
AND fs.gestion = in_gestion
AND fs.id_administracion = in_id_administracion;

END;
]]></definition>
</function>

<function name="obtener_importe_iva_monto_contrato"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="1000">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<parameter name="id_oficina">
		<type name="integer"/>
	</parameter>
	<parameter name="nombre">
		<type name="character varying"/>
	</parameter>
	<parameter name="nivel1">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel2">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel3">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel4">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel5">
		<type name="integer"/>
	</parameter>
	<parameter name="monto_contrato">
		<type name="integer"/>
	</parameter>
	<parameter name="id_funcionario">
		<type name="integer"/>
	</parameter>
	<parameter name="ape_nom_funcionario">
		<type name="character varying"/>
	</parameter>
	<parameter name="cedula_funcionario">
		<type name="character varying"/>
	</parameter>
	<parameter name="retencion_iva">
		<type name="integer"/>
	</parameter>
	<parameter name="porcentaje_iva">
		<type name="integer"/>
	</parameter>
	<parameter name="importe_iva">
		<type name="numeric"/>
	</parameter>
	</return-type>
	<parameter name="in_id_funcionario" in="true">
		<type name="integer"/>
	</parameter>
	<definition><![CDATA[
BEGIN
RETURN QUERY 
SELECT 
	fc.id_oficina_presta,
	o.nombre, 
	o.nivel1, 
	o.nivel2, 
	o.nivel3, 
	o.nivel4, 
	o.nivel5,
	fc.monto_contrato,
	da.id_funcionario,
	f.ape_nom_funcionario,
	f.cedula_funcionario,
	case when i.retencion_iva is null then 0 else i.retencion_iva end as retencion_iva,
	case when i.porcentaje_iva is null then 0 else i.porcentaje_iva end as porcentaje_iva,
	(salarios_contratados.funcion_obtener_retencion(fc.monto_contrato, i.porcentaje_iva, i.retencion_iva)) as importe_iva
FROM legajos.funcionarios_contratados fc
left join legajos.datos_administrativos da on fc.id_dato_administrativo = da.id_dato_administrativo
left join legajos.funcionarios f on da.id_funcionario = f.id_funcionario
left join legajos.oficinas o on fc.id_oficina_presta = o.id_oficina
left join legajos.funcionarios_iva fi on f.id_funcionario = fi.id_funcionario
left join legajos.iva i on fi.id_iva = i.id_iva
where fc.contrato_actual
and da.id_funcionario = in_id_funcionario;
END;
]]></definition>
</function>

<function name="obtener_monto_ra"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="double precision"/>
	</return-type>
	<parameter name="in_id_funcionario">
		<type name="integer"/>
	</parameter>
	<parameter name="in_id_mes">
		<type name="integer"/>
	</parameter>
	<parameter name="in_gestion">
		<type name="integer"/>
	</parameter>
	<parameter name="in_id_planilla_ra">
		<type name="integer"/>
	</parameter>
	<definition><![CDATA[
DECLARE
    vmonto double precision;
    vexiste boolean;
    aux_constante1 numeric;
    aux_constante2 numeric;
    aux_constante3 numeric;
    aux_importe_contrato numeric;
BEGIN
  /*
  * Funcion para calcular el monto_ra del funcionario que sera multiplicado por su horas
  * Fecha: 2012-05-08
  * Autor: marioca
  * Parametros:
  *            in_id_funcionario el identificador del funcionario
  *            in_id_mes
  *            in_gestion
  *            in_id_planilla_ra identificador de la planilla para saber el identificador del parametro de calculo
  */
  --Se obtiene las constantes para aplicar la formula
  SELECT INTO aux_constante1, aux_constante2, aux_constante3 constante_1, constante_2, constante_3
  FROM salarios_contratados.parametros_calculo_re_ra A
  INNER JOIN salarios_contratados.planillas_ra B ON A.id_parametro_calculo_re_ra = B.id_parametro_calculo_re_ra 
  WHERE id_planilla_ra = in_id_planilla_ra;  

  aux_importe_contrato := 0;
  --obtenemos el importe del contrato actual
	SELECT INTO aux_importe_contrato monto_contrato
	FROM legajos.funcionarios_contratados fc
	left join legajos.datos_administrativos da on fc.id_dato_administrativo = da.id_dato_administrativo
	left join legajos.funcionarios f on da.id_funcionario = f.id_funcionario
	where contrato_actual
	and f.id_funcionario = in_id_funcionario LIMIT 1;
  --Verificar si es funcionario superior
/*
  IF (salarios.es_funcionario_superior_activo(in_id_funcionario, in_id_mes, in_gestion)) THEN
      --Es funcionario superior entonces obtengo el importe de la categoria asignada
	SELECT INTO aux_sueldo_presupuestado  importe FROM salarios.funcionarios_superiores fs
	INNER JOIN salarios.categoria_importe_mensual c  ON fs.id_categoria = c.id_categoria
	WHERE gestion = in_gestion AND id_mes = in_id_mes AND id_funcionario = in_id_funcionario LIMIT 1;
  ELSE
      --No es funcionario superior entonces utilizo el importe de su categoria
	SELECT INTO aux_sueldo_presupuestado  importe  FROM salarios.funcionarios_categorias f
	INNER JOIN salarios.detalles_categorias dc ON f.id_detalle_categoria = dc.id_detalle_categoria
	INNER JOIN salarios.categoria_importe_mensual ci ON dc.id_categoria = ci.id_categoria
	INNER JOIN salarios.categorias c ON ci.id_categoria = c.id_categoria
	WHERE ci.id_mes = in_id_mes AND c.gestion = in_gestion AND f.id_funcionario = in_id_funcionario AND f.hasta isnull LIMIT 1;
  END IF;
*/
  vmonto:=((aux_importe_contrato::double precision+aux_constante1::double precision*aux_importe_contrato::double precision)*aux_constante2::double precision/aux_constante3::double precision);

  return vmonto;
END;
]]></definition>
</function>

<function name="obtener_monto_ra2"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="double precision"/>
	</return-type>
	<parameter name="in_id_funcionario_contrato">
		<type name="integer"/>
	</parameter>
	<parameter name="in_id_mes">
		<type name="integer"/>
	</parameter>
	<parameter name="in_gestion">
		<type name="integer"/>
	</parameter>
	<parameter name="in_id_planilla_ra">
		<type name="integer"/>
	</parameter>
	<definition><![CDATA[
DECLARE
    vmonto double precision;
    vexiste boolean;
    aux_constante1 numeric;
    aux_constante2 numeric;
    aux_constante3 numeric;
    aux_importe_contrato numeric;
BEGIN
  /*
  * Funcion para calcular el monto_ra del funcionario que sera multiplicado por su horas
  * Fecha: 2017-03-02
  * Autor: DMAO
  * Parametros:
  *            in_id_funcionario_contrato el identificador del funcionario
  *            in_id_mes
  *            in_gestion
  *            in_id_planilla_ra identificador de la planilla para saber el identificador del parametro de calculo
  */
  --Se obtiene las constantes para aplicar la formula
  SELECT INTO aux_constante1, aux_constante2, aux_constante3 constante_1, constante_2, constante_3
  FROM salarios_contratados.parametros_calculo_re_ra A
  INNER JOIN salarios_contratados.planillas_ra B ON A.id_parametro_calculo_re_ra = B.id_parametro_calculo_re_ra 
  WHERE id_planilla_ra = in_id_planilla_ra;  

  aux_importe_contrato := 0;
  /*obtenemos el importe del contrato actual desde la tabla funcionarios_contratos del esquema de salarios_contratados */
	SELECT INTO aux_importe_contrato monto_contrato
	FROM salarios_contratados.funcionarios_contratos fc
	where 
	--fc.estado and 
	fc.id_funcionario_contrato = in_id_funcionario_contrato LIMIT 1;

  vmonto:=((aux_importe_contrato::double precision+aux_constante1::double precision*aux_importe_contrato::double precision)*aux_constante2::double precision/aux_constante3::double precision);

  return vmonto;
END;
]]></definition>
</function>

<function name="obtener_monto_re"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="double precision"/>
	</return-type>
	<parameter name="in_id_funcionario">
		<type name="integer"/>
	</parameter>
	<parameter name="in_id_mes">
		<type name="integer"/>
	</parameter>
	<parameter name="in_gestion">
		<type name="integer"/>
	</parameter>
	<parameter name="in_id_planilla_re">
		<type name="integer"/>
	</parameter>
	<definition><![CDATA[
DECLARE
    vmonto double precision;
    vexiste boolean;
    aux_constante1 numeric;
    aux_constante2 numeric;
    aux_constante3 numeric;
    aux_importe_contrato numeric;
BEGIN
  /*
  * Funcion para calcular el monto_re del funcionario que sera multiplicado por su horas
  * Fecha: 2012-05-08
  * Autor: marioca
  * Parametros:
  *            in_id_funcionario el identificador del funcionario
  *            in_id_mes
  *            in_gestion
  *            in_id_planilla_re identificador de la planilla para saber el identificador del parametro de calculo
  */
  --Se obtiene las constantes para aplicar la formula
  SELECT INTO aux_constante1, aux_constante2, aux_constante3 constante_1, constante_2, constante_3
  FROM salarios_contratados.parametros_calculo_re_ra A
  INNER JOIN salarios_contratados.planillas_re B ON A.id_parametro_calculo_re_ra = B.id_parametro_calculo_re_ra 
  WHERE id_planilla_re = in_id_planilla_re;  

  aux_importe_contrato := 0;
  --obtenemos el importe del contrato actual
	SELECT INTO aux_importe_contrato monto_contrato
	FROM legajos.funcionarios_contratados fc
	left join legajos.datos_administrativos da on fc.id_dato_administrativo = da.id_dato_administrativo
	left join legajos.funcionarios f on da.id_funcionario = f.id_funcionario
	where contrato_actual
	and f.id_funcionario = in_id_funcionario LIMIT 1;
  --Verificar si es funcionario superior
/*
  IF (salarios.es_funcionario_superior_activo(in_id_funcionario, in_id_mes, in_gestion)) THEN
      --Es funcionario superior entonces obtengo el importe de la categoria asignada
	SELECT INTO aux_sueldo_presupuestado  importe FROM salarios.funcionarios_superiores fs
	INNER JOIN salarios.categoria_importe_mensual c  ON fs.id_categoria = c.id_categoria
	WHERE gestion = in_gestion AND id_mes = in_id_mes AND id_funcionario = in_id_funcionario LIMIT 1;
  ELSE
      --No es funcionario superior entonces utilizo el importe de su categoria
	SELECT INTO aux_sueldo_presupuestado  importe  FROM salarios.funcionarios_categorias f
	INNER JOIN salarios.detalles_categorias dc ON f.id_detalle_categoria = dc.id_detalle_categoria
	INNER JOIN salarios.categoria_importe_mensual ci ON dc.id_categoria = ci.id_categoria
	INNER JOIN salarios.categorias c ON ci.id_categoria = c.id_categoria
	WHERE ci.id_mes = in_id_mes AND c.gestion = in_gestion AND f.id_funcionario = in_id_funcionario AND f.hasta isnull LIMIT 1;
  END IF;
*/
  vmonto:=((aux_importe_contrato::double precision+aux_constante1::double precision*aux_importe_contrato::double precision)*aux_constante2::double precision/aux_constante3::double precision);

  return vmonto;
END;
]]></definition>
</function>

<function name="obtener_monto_re2"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="double precision"/>
	</return-type>
	<parameter name="in_id_funcionario_contrato">
		<type name="integer"/>
	</parameter>
	<parameter name="in_id_mes">
		<type name="integer"/>
	</parameter>
	<parameter name="in_gestion">
		<type name="integer"/>
	</parameter>
	<parameter name="in_id_planilla_re">
		<type name="integer"/>
	</parameter>
	<definition><![CDATA[
DECLARE
    vmonto double precision;
    vexiste boolean;
    aux_constante1 numeric;
    aux_constante2 numeric;
    aux_constante3 numeric;
    aux_importe_contrato numeric;
BEGIN
  /*
  * Funcion para calcular el monto_re del funcionario que sera multiplicado por su horas
  * Fecha: 2017-03-02
  * Autor: DMAO
  * Parametros:
  *            in_id_funcionario el identificador del funcionario
  *            in_id_mes
  *            in_gestion
  *            in_id_planilla_re identificador de la planilla para saber el identificador del parametro de calculo
  */
  --Se obtiene las constantes para aplicar la formula
  SELECT INTO aux_constante1, aux_constante2, aux_constante3 constante_1, constante_2, constante_3
  FROM salarios_contratados.parametros_calculo_re_ra A
  INNER JOIN salarios_contratados.planillas_re B ON A.id_parametro_calculo_re_ra = B.id_parametro_calculo_re_ra 
  WHERE id_planilla_re = in_id_planilla_re;  

  aux_importe_contrato := 0;
  /*obtenemos el importe del contrato actual desde la tabla funcionarios_contratos del esquema de salarios_contratados */
	SELECT INTO aux_importe_contrato monto_contrato
	FROM salarios_contratados.funcionarios_contratos fc
	where 
	--fc.estado and 
	fc.id_funcionario_contrato = in_id_funcionario_contrato LIMIT 1;
	
  vmonto:=((aux_importe_contrato::double precision+aux_constante1::double precision*aux_importe_contrato::double precision)*aux_constante2::double precision/aux_constante3::double precision);

  return vmonto;
END;
]]></definition>
</function>

<function name="obtener_registro_planilla_salarios_contratados"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="1000">
	<schema name="salarios_contratados"/>
	<role name="mcaniza"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<parameter name="id_administracion">
		<type name="integer"/>
	</parameter>
	<parameter name="id_funcionario_contrato">
		<type name="integer"/>
	</parameter>
	<parameter name="id_tipo_contrato">
		<type name="integer"/>
	</parameter>
	<parameter name="objeto_gasto">
		<type name="integer"/>
	</parameter>
	<parameter name="id_oficina">
		<type name="integer"/>
	</parameter>
	<parameter name="nombre">
		<type name="character varying"/>
	</parameter>
	<parameter name="nivel1">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel2">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel3">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel4">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel5">
		<type name="integer"/>
	</parameter>
	<parameter name="id_funcionario">
		<type name="integer"/>
	</parameter>
	<parameter name="cedula">
		<type name="character varying"/>
	</parameter>
	<parameter name="funcionario">
		<type name="character varying"/>
	</parameter>
	<parameter name="desde">
		<type name="date"/>
	</parameter>
	<parameter name="hasta">
		<type name="date"/>
	</parameter>
	<parameter name="id_mes">
		<type name="integer"/>
	</parameter>
	<parameter name="gestion">
		<type name="numeric"/>
	</parameter>
	<parameter name="monto_contrato">
		<type name="numeric"/>
	</parameter>
	<parameter name="dias_trabajados">
		<type name="integer"/>
	</parameter>
	<parameter name="devengado_con_dias_trabajados_aplicado">
		<type name="numeric"/>
	</parameter>
	<parameter name="importe_aplicado_multas">
		<type name="numeric"/>
	</parameter>
	<parameter name="cantidad_dias">
		<type name="numeric"/>
	</parameter>
	<parameter name="monto_devengado_final">
		<type name="numeric"/>
	</parameter>
	<parameter name="ruc_numero">
		<type name="character varying"/>
	</parameter>
	<parameter name="porcentaje_iva">
		<type name="integer"/>
	</parameter>
	<parameter name="retencion_iva">
		<type name="integer"/>
	</parameter>
	<parameter name="monto_retencion_iva">
		<type name="numeric"/>
	</parameter>
	<parameter name="liquido">
		<type name="numeric"/>
	</parameter>
	</return-type>
	<parameter name="in_id_mes" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_gestion" in="true">
		<type name="integer"/>
	</parameter>
	<definition><![CDATA[
BEGIN
RETURN QUERY
Select distinct
	fc.id_administracion,
	fc.id_funcionario_contrato,
	fc.id_tipo_contrato,
	fc.objeto_gasto,
	fc.id_oficina,
	o.nombre,
	o.nivel1,
	o.nivel2,
	o.nivel3,
	o.nivel4,
	o.nivel5,
	fc.id_funcionario,
	f.cedula_funcionario AS cedula, 
	f.ape_nom_funcionario AS funcionario,
	fc.desde,
	fc.hasta,	
	sp.id_mes, 
	sp.gestion::numeric,
	fc.monto_contrato,
	--sp ==>> situacion_personal
	CASE WHEN dsp.dias_trabajados IS NULL THEN ( SELECT pmt.cantidad_dias_pa_hallar_importe_diario
							FROM parametros pmt
							WHERE pmt.estado = true)
	ELSE dsp.dias_trabajados
	END AS dias_trabajados, 	
	--MONTO DEVENGADO (PRESUPUESTADO - DIAS TRABAJADO)	
	((round(fc.monto_contrato::numeric / 
	(( SELECT pmt.cantidad_dias_pa_hallar_importe_diario::numeric
		FROM parametros pmt 
		WHERE pmt.estado = true))::numeric * 
	CASE WHEN dsp.dias_trabajados IS NULL THEN 
		(SELECT pmt.cantidad_dias_pa_hallar_importe_diario::numeric
		  FROM parametros pmt 
		  WHERE pmt.estado = true)
	ELSE dsp.dias_trabajados
	END::numeric,0))) as devengado_con_dias_tabajados_aplicado,
	-- IMPORTE DE MULTAS
	(round(fc.monto_contrato::numeric / 
	(( SELECT pmt.cantidad_dias_pa_hallar_importe_diario::numeric
		FROM parametros pmt 
		WHERE pmt.estado = true))::numeric * 
	CASE WHEN dma.cantidad_dias IS NULL THEN '0'::numeric		
	ELSE dma.cantidad_dias
	END::numeric,0)) AS importe_aplicado_multas,
	-- DIAS DE MULTAS
	CASE WHEN dma.cantidad_dias IS NULL THEN '0'::numeric		
	ELSE dma.cantidad_dias::numeric
	END AS cantidad_dias,
	
       --MONTO DEVENGADO (PRESUPUESTADO - DIAS TRABAJADO - MULTAS)
	((round(fc.monto_contrato::numeric / 
	(( SELECT pmt.cantidad_dias_pa_hallar_importe_diario::numeric
		FROM parametros pmt 
		WHERE pmt.estado = true))::numeric * 
	CASE WHEN dsp.dias_trabajados IS NULL THEN 
		(SELECT pmt.cantidad_dias_pa_hallar_importe_diario::numeric
		  FROM parametros pmt 
		  WHERE pmt.estado = true)
	ELSE dsp.dias_trabajados
	END::numeric,0)) /*- (round(fc.monto_contrato::numeric / 
	(( SELECT pmt.cantidad_dias_pa_hallar_importe_diario::numeric
		FROM parametros pmt 
		WHERE pmt.estado = true))::numeric * 
	CASE WHEN dma.cantidad_dias IS NULL THEN '0'::numeric		
	ELSE dma.cantidad_dias
	END::numeric,0))*/
	) as monto_devengado_final ,
	CASE WHEN fc.ruc IS NULL THEN '--' ELSE fc.ruc END as ruc_numero,
	CASE WHEN fc.porcentaje_iva IS NULL THEN 0 ELSE fc.porcentaje_iva END AS porcentaje_iva,
	CASE WHEN fc.porcentaje_retencion IS NULL THEN 0 ELSE fc.porcentaje_retencion END AS porcentaje_retencion,
	---IMPORTE IVA
	(salarios_contratados.funcion_obtener_retencion(((round(fc.monto_contrato::numeric / 
							(( SELECT pmt.cantidad_dias_pa_hallar_importe_diario::numeric
								FROM parametros pmt 
								WHERE pmt.estado = true))::numeric * 
							CASE WHEN dsp.dias_trabajados IS NULL THEN 
								(SELECT pmt.cantidad_dias_pa_hallar_importe_diario::numeric
								  FROM parametros pmt 
								  WHERE pmt.estado = true)
							ELSE dsp.dias_trabajados
							END::numeric,0)) /*- (round(fc.monto_contrato::numeric / 
							(( SELECT pmt.cantidad_dias_pa_hallar_importe_diario::numeric
								FROM parametros pmt 
								WHERE pmt.estado = true))::numeric * 
							CASE WHEN dma.cantidad_dias IS NULL THEN '0'::numeric								
							ELSE dma.cantidad_dias
							END::numeric,0))*/
							),
							case when fc.porcentaje_iva is null then 0 else fc.porcentaje_iva end,
							case when fc.porcentaje_retencion is null then 0 else fc.porcentaje_retencion end))::numeric as monto_retencion_iva,	
	--liquido	
	((round(fc.monto_contrato::numeric / 
	(( SELECT pmt.cantidad_dias_pa_hallar_importe_diario::numeric
		FROM parametros pmt 
		WHERE pmt.estado = true))::numeric * 
	CASE WHEN dsp.dias_trabajados IS NULL THEN 
		(SELECT pmt.cantidad_dias_pa_hallar_importe_diario::numeric
		  FROM parametros pmt 
		  WHERE pmt.estado = true)
	ELSE dsp.dias_trabajados
	END::numeric,0)) /*- (round(fc.monto_contrato::numeric / 
	(( SELECT pmt.cantidad_dias_pa_hallar_importe_diario::numeric
		FROM parametros pmt 
		WHERE pmt.estado = true))::numeric * 
	CASE WHEN dma.cantidad_dias IS NULL THEN '0'::numeric		
	ELSE dma.cantidad_dias
	END::numeric,0))*/
	) -
	(round(fc.monto_contrato::numeric / 
	(( SELECT pmt.cantidad_dias_pa_hallar_importe_diario::numeric
		FROM parametros pmt 
		WHERE pmt.estado = true))::numeric * 
	CASE WHEN dma.cantidad_dias IS NULL THEN '0'::numeric		
	ELSE dma.cantidad_dias
	END::numeric,0))
	- (salarios_contratados.funcion_obtener_retencion(((round(fc.monto_contrato::numeric / 
							(( SELECT pmt.cantidad_dias_pa_hallar_importe_diario::numeric
								FROM parametros pmt 
								WHERE pmt.estado = true))::numeric * 
							CASE WHEN dsp.dias_trabajados IS NULL THEN 
								(SELECT pmt.cantidad_dias_pa_hallar_importe_diario::numeric
								  FROM parametros pmt 
								  WHERE pmt.estado = true)
							ELSE dsp.dias_trabajados
							END::numeric,0)) /*- (round(fc.monto_contrato::numeric / 
							(( SELECT pmt.cantidad_dias_pa_hallar_importe_diario::numeric
								FROM parametros pmt 
								WHERE pmt.estado = true))::numeric * 
							CASE WHEN dma.cantidad_dias IS NULL THEN '0'::numeric								
							ELSE dma.cantidad_dias
							END::numeric,0))*/
							),
							case when fc.porcentaje_iva is null then 0 else fc.porcentaje_iva end,
							case when fc.porcentaje_retencion is null then 0 else fc.porcentaje_retencion end))::numeric as liquido
FROM salarios_contratados.funcionarios_contratos fc
LEFT JOIN legajos.funcionarios f on (fc.id_funcionario = f.id_funcionario)
LEFT JOIN legajos.datos_personales dp on (dp.id_funcionario = f.id_funcionario)
LEFT JOIN legajos.funcionarios_iva fi on fi.id_funcionario = f.id_funcionario
LEFT JOIN legajos.iva iv on fi.id_iva = iv.id_iva
LEFT JOIN salarios_contratados.situacion_personal_detalles dsp on dsp.id_funcionario = f.id_funcionario
      AND dsp.id_situacion_personal in (select sp.id_situacion_personal from salarios_contratados.situacion_personal sp WHERE sp.id_situacion_personal = sp.id_situacion_personal and sp.id_mes = in_id_mes and sp.gestion = in_gestion)
LEFT JOIN salarios_contratados.situacion_personal sp ON sp.id_situacion_personal = sp.id_situacion_personal and sp.id_mes = in_id_mes and sp.gestion = in_gestion
LEFT JOIN legajos.oficinas o ON o.id_oficina = fc.id_oficina and o.gestion = in_gestion
LEFT JOIN salarios_contratados.multas_solicitadas_detalles dma ON dma.id_funcionario = f.id_funcionario and dma.cantidad_dias > 0
      AND dma.id_multa_solicitada in (select ma.id_multa_solicitada from salarios_contratados.multas_solicitadas ma  WHERE ma.id_multa_solicitada = dma.id_multa_solicitada AND ma.id_mes = in_id_mes AND ma.gestion = in_gestion)
LEFT JOIN salarios_contratados.multas_solicitadas ma ON ma.id_multa_solicitada = dma.id_multa_solicitada AND ma.id_mes = in_id_mes AND ma.gestion = in_gestion
WHERE fc.estado
AND (extract (year from fc.hasta)=in_gestion and extract(month from fc.hasta)>=in_id_mes)
--AND fc.id_funcionario =789
ORDER BY fc.id_oficina;
END;
]]></definition>
</function>

<function name="pagos_realizados_contratado"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="1000">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<parameter name="id_mes">
		<type name="integer"/>
	</parameter>
	<parameter name="gestion">
		<type name="numeric"/>
	</parameter>
	<parameter name="id_administracion">
		<type name="integer"/>
	</parameter>
	<parameter name="id_oficina">
		<type name="integer"/>
	</parameter>
	<parameter name="ids_detalle">
		<type name="text"/>
	</parameter>
	<parameter name="beneficiario">
		<type name="bigint"/>
	</parameter>
	<parameter name="importe">
		<type name="numeric"/>
	</parameter>
	<parameter name="objeto_gasto">
		<type name="text"/>
	</parameter>
	<parameter name="concepto">
		<type name="text"/>
	</parameter>
	<parameter name="orden">
		<type name="integer"/>
	</parameter>
	</return-type>
	<parameter name="in_id_administracion" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_gestion" in="true">
		<type name="text"/>
	</parameter>
	<parameter name="in_mes" in="true">
		<type name="text"/>
	</parameter>
	<parameter name="in_id_funcionario" in="true">
		<type name="text"/>
	</parameter>
	<definition><![CDATA[
BEGIN
/*
  * Funcion para obtener los pagos realizados a los funcionarios contratados por administracion, gestion, mes e id_funcionario
  * Creado    : 2016-10-07 11:31:00
  * Modificado: 2016-10-07 15:00:00
  * Autor: Lic. Gustavo Eloy Alcaraz Bogado
  * Parametros:
  *            in_id_administracion administracion del proceso		
  *            in_gestion           gestiones (Ej.: '2014,2015,2016,...') [uno o más gestiones]
  *            in_mes               meses (Ej.: '1,2,3,...,12') [Los meses pueden ser aleatorios, es decir, no correlativos] 
  * 	       in_id_funcionario    identifiacador de funcionarios separados por coma o ingresar '0' para todos los funcionarios	 
  * ------------  
  */
RETURN QUERY 
-- =======================================================================
-- SALARIOS
-- =======================================================================
(SELECT
   a.id_mes,
   a.gestion,
   a.id_administracion,
   a.id_oficina,
   array_to_string(array_agg(a.ids_detalle),',') as ids_detalle,
   count(*) as beneficiario,
   sum(a.monto) as importe,
   a.objeto_gasto::text as objeto_gasto,
   CASE 
      WHEN a.objeto_gasto=141 THEN 'SALARIOS - PERSONAL TECNICO'::text
      WHEN a.objeto_gasto=144 THEN 'SALARIOS - JORNAL'::text
      WHEN a.objeto_gasto=145 THEN 'SALARIOS - PROFESIONAL'::text
   END as concepto,
   CASE 
      WHEN a.objeto_gasto=141 THEN 1
      WHEN a.objeto_gasto=144 THEN 2
      WHEN a.objeto_gasto=145 THEN 3
   END as orden 
FROM
   (
      SELECT 
         ps.id_mes,
         ps.gestion,
         psd.id_administracion,
         psd.id_oficina,
         psd.objeto_gasto,
         ARRAY_AGG(MONTO_PRESUPUESTADO),
         array_to_string(array_agg(psd.id_planilla_salario_detalle),',') as ids_detalle,
         (CASE WHEN COUNT(*)>1 THEN MAX(psd.monto_presupuestado) ELSE sum(psd.monto_presupuestado) END)::numeric(12,0) as monto
      FROM 
         salarios_contratados.planillas_salarios_detalles psd 
         LEFT JOIN salarios_contratados.planillas_salarios ps ON ps.id_planilla_salario=psd.id_planilla_salario
      WHERE
         ps.id_estado=1 AND
         ps.id_administracion::text=ANY(('{'||in_id_administracion||'}')::text[]) AND
         ps.gestion::text=ANY(('{'||in_gestion||'}')::text[]) AND
         ps.id_mes::text=ANY(('{'||in_mes||'}')::text[]) AND
         CASE WHEN in_id_funcionario='0' THEN psd.id_funcionario>0 ELSE psd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
      GROUP BY
         ps.id_mes,
         ps.gestion,
         psd.id_funcionario,
         psd.id_administracion,
         psd.id_oficina,
         psd.objeto_gasto
   ) a
GROUP BY
   a.id_mes,
   a.gestion,
   a.id_administracion,
   a.id_oficina,
   a.objeto_gasto
)
UNION ALL
-- =======================================================================
-- RE
-- =======================================================================
(SELECT
   a.id_mes,
   a.gestion,
   a.id_administracion,
   a.id_oficina,
   array_to_string(array_agg(a.ids_detalle),',') as ids_detalle,
   count(*) as beneficiario,
   sum(a.monto) as importe,
   a.objeto_gasto::text as objeto_gasto,
   CASE 
      WHEN a.objeto_gasto=141 THEN 'REMUNERACION EXTRAORDINARIA (RE) - PERSONAL TECNICO'::text
      WHEN a.objeto_gasto=144 THEN 'REMUNERACION EXTRAORDINARIA (RE) - JORNAL'::text
      WHEN a.objeto_gasto=145 THEN 'REMUNERACION EXTRAORDINARIA (RE) - PROFESIONAL'::text
   END as concepto,
   CASE 
      WHEN a.objeto_gasto=141 THEN 4
      WHEN a.objeto_gasto=144 THEN 5
      WHEN a.objeto_gasto=145 THEN 6
   END as orden 
FROM
   (
      SELECT 
         pre.id_mes,
         pre.gestion,
         pred.id_administracion,
         pred.id_oficina,
         pred.objeto_gasto,
         array_agg(pred.id_funcionario),
         array_to_string(array_agg(pred.id_planilla_re_detalle),',') as ids_detalle,
         (SUM(pred.monto)::numeric(12,0)) as monto
      FROM 
         salarios_contratados.planillas_re_detalles pred 
         LEFT JOIN salarios_contratados.planillas_re pre ON pre.id_planilla_re=pred.id_planilla_re
      WHERE
         pre.estado=1 AND
         pre.id_administracion::text=ANY(('{'||in_id_administracion||'}')::text[]) AND
         pre.gestion::text=ANY(('{'||in_gestion||'}')::text[]) AND
         pre.id_mes::text=ANY(('{'||in_mes||'}')::text[]) AND
         CASE WHEN in_id_funcionario='0' THEN pred.id_funcionario>0 ELSE pred.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
      GROUP BY
         pre.id_mes,
         pre.gestion,
         pred.id_funcionario,
         pred.id_administracion,
         pred.id_oficina,
         pred.objeto_gasto
   ) a
GROUP BY
   a.id_mes,
   a.gestion,
   a.id_administracion,
   a.id_oficina,
   a.objeto_gasto)
UNION ALL
-- =======================================================================
-- RA
-- =======================================================================
(SELECT
   a.id_mes,
   a.gestion,
   a.id_administracion,
   a.id_oficina,
   array_to_string(array_agg(a.ids_detalle),',') as ids_detalle,
   count(*) as beneficiario,
   sum(a.monto) as importe,
   a.objeto_gasto::text as objeto_gasto,
   CASE 
      WHEN a.objeto_gasto=141 THEN 'REMUNERACION ADICIONAL (RA) - PERSONAL TECNICO'::text
      WHEN a.objeto_gasto=144 THEN 'REMUNERACION ADICIONAL (RA) - JORNAL'::text
      WHEN a.objeto_gasto=145 THEN 'REMUNERACION ADICIONAL (RA) - PROFESIONAL'::text
   END as concepto,
   CASE 
      WHEN a.objeto_gasto=141 THEN 7
      WHEN a.objeto_gasto=144 THEN 8
      WHEN a.objeto_gasto=145 THEN 9
   END as orden 
FROM
   (
      SELECT 
         pra.id_mes,
         pra.gestion,
         prad.id_administracion,
         prad.id_oficina,
         prad.objeto_gasto,
         array_agg(prad.id_funcionario),
         array_to_string(array_agg(prad.id_planilla_ra_detalle),',') as ids_detalle,
         (SUM(prad.monto)::numeric(12,0)) as monto
      FROM 
         salarios_contratados.planillas_ra_detalles prad 
         LEFT JOIN salarios_contratados.planillas_ra pra ON pra.id_planilla_ra=prad.id_planilla_ra
      WHERE
         pra.estado=1 AND
         pra.id_administracion::text=ANY(('{'||in_id_administracion||'}')::text[]) AND
         pra.gestion::text=ANY(('{'||in_gestion||'}')::text[]) AND
         pra.id_mes::text=ANY(('{'||in_mes||'}')::text[]) AND
         CASE WHEN in_id_funcionario='0' THEN prad.id_funcionario>0 ELSE prad.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
      GROUP BY
         pra.id_mes,
         pra.gestion,
         prad.id_funcionario,
         prad.id_administracion,
         prad.id_oficina,
         prad.objeto_gasto
   ) a
GROUP BY
   a.id_mes,
   a.gestion,
   a.id_administracion,
   a.id_oficina,
   a.objeto_gasto)
UNION ALL
-- =======================================================================
-- SUBSIDIOS
-- =======================================================================
(SELECT
   a.id_mes,
   a.gestion,
   a.id_administracion,
   a.id_oficina,
   array_to_string(array_agg(a.ids_detalle),',') as ids_detalle,
   count(*) as beneficiario,
   sum(a.monto) as importe,
   a.objeto_gasto::text as objeto_gasto,
   CASE 
      WHEN a.objeto_gasto=141 THEN a.concepto||' - PERSONAL TECNICO'
      WHEN a.objeto_gasto=144 THEN a.concepto||' - JORNAL'
      WHEN a.objeto_gasto=145 THEN a.concepto||' - PROFESIONAL' 
   END as concepto,
   CASE 
      WHEN a.objeto_gasto=141 THEN 10
      WHEN a.objeto_gasto=144 THEN 11
      WHEN a.objeto_gasto=145 THEN 12
   END as orden 
FROM
   (
      SELECT 
         ps.id_mes,
         ps.gestion,
         psd.id_administracion,
         psd.id_oficina,
         psd.objeto_gasto,
         s.descripcion as concepto,
         array_agg(fs.id_funcionario),
         array_to_string(array_agg(psd.id_planilla_subsidio_detalle),',') as ids_detalle,
         (SUM(psd.importe_subsidio)::numeric(12,0)) as monto
      FROM 
         salarios_contratados.planillas_subsidios_detalles psd 
         LEFT JOIN salarios_contratados.planillas_subsidios ps ON ps.id_planilla_subsidio=psd.id_planilla_subsidio
         LEFT JOIN salarios_contratados.funcionarios_subsidios fs ON fs.id_funcionario_subsidio=psd.id_funcionario_subsidio
         LEFT JOIN salarios_contratados.subsidios s ON s.id_subsidio=fs.id_subsidio 
      WHERE
         ps.estado=1 AND
         ps.id_administracion::text=ANY(('{'||in_id_administracion||'}')::text[]) AND
         ps.gestion::text=ANY(('{'||in_gestion||'}')::text[]) AND
         ps.id_mes::text=ANY(('{'||in_mes||'}')::text[]) AND
         CASE WHEN in_id_funcionario='0' THEN fs.id_funcionario>0 ELSE fs.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
      GROUP BY
         ps.id_mes,
         ps.gestion,
         fs.id_funcionario,
         psd.id_administracion,
         psd.id_oficina,
         s.descripcion,
         psd.objeto_gasto
   ) a
GROUP BY
   a.id_mes,
   a.gestion,
   a.id_administracion,
   a.id_oficina,
   a.concepto,
   a.objeto_gasto)
UNION ALL
-- =======================================================================
-- GRATIFICACION OCASIONAL
-- ======================================================================= 
(SELECT
   a.id_mes,
   a.gestion,
   a.id_administracion,
   a.id_oficina,
   array_to_string(array_agg(a.ids_detalle),',') as ids_detalle,
   count(*) as beneficiario,
   sum(a.monto) as importe,
   a.objeto_gasto::text as objeto_gasto,
   CASE 
      WHEN a.objeto_gasto=141 THEN 'GRATIFICACION OCASIONAL - PERSONAL TECNICO'
      WHEN a.objeto_gasto=144 THEN 'GRATIFICACION OCASIONAL - JORNAL'
      WHEN a.objeto_gasto=145 THEN 'GRATIFICACION OCASIONAL - PROFESIONAL' 
   END as concepto,
   CASE 
      WHEN a.objeto_gasto=141 THEN 13
      WHEN a.objeto_gasto=144 THEN 14
      WHEN a.objeto_gasto=145 THEN 15 
   END as orden 
FROM
   (
      SELECT 
         pgo.id_mes,
         pgo.gestion,
         pgod.id_administracion,
         pgod.id_oficina,
         pgod.objeto_gasto,
         array_agg(pgod.id_funcionario),
         array_to_string(array_agg(pgod.id_planilla_gratificacion_ocasional_detalle),',') as ids_detalle,
         (SUM(pgod.importe_gratificacion)::numeric(12,0)) as monto
      FROM 
         salarios_contratados.planillas_gratificaciones_ocasionales_detalles pgod 
         LEFT JOIN salarios_contratados.planillas_gratificaciones_ocasionales pgo ON pgo.id_planilla_gratificacion_ocasional=pgod.id_planilla_gratificacion_ocasional
      WHERE
         pgo.estado=1 AND
         pgo.id_administracion::text=ANY(('{'||in_id_administracion||'}')::text[]) AND
         pgo.gestion::text=ANY(('{'||in_gestion||'}')::text[]) AND
         pgo.id_mes::text=ANY(('{'||in_mes||'}')::text[]) AND
         CASE WHEN in_id_funcionario='0' THEN pgod.id_funcionario>0 ELSE pgod.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
      GROUP BY
         pgo.id_mes,
         pgo.gestion,
         pgod.id_funcionario,
         pgod.id_administracion,
         pgod.id_oficina,
         pgod.objeto_gasto
   ) a
GROUP BY
   a.id_mes,
   a.gestion,
   a.id_administracion,
   a.id_oficina,
   a.objeto_gasto) 
;
END;
]]></definition>
</function>

<function name="pagos_realizados_contratado_beneficiario"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="1000">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<parameter name="gestion">
		<type name="numeric"/>
	</parameter>
	<parameter name="id_administracion">
		<type name="integer"/>
	</parameter>
	<parameter name="id_oficina">
		<type name="integer"/>
	</parameter>
	<parameter name="beneficiario">
		<type name="bigint"/>
	</parameter>
	<parameter name="ids_beneficiario">
		<type name="text"/>
	</parameter>
	<parameter name="objeto_gasto">
		<type name="text"/>
	</parameter>
	<parameter name="concepto">
		<type name="text"/>
	</parameter>
	<parameter name="orden">
		<type name="integer"/>
	</parameter>
	</return-type>
	<parameter name="in_id_administracion" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_gestion" in="true">
		<type name="text"/>
	</parameter>
	<parameter name="in_mes" in="true">
		<type name="text"/>
	</parameter>
	<parameter name="in_id_funcionario" in="true">
		<type name="text"/>
	</parameter>
	<definition><![CDATA[
BEGIN
/*
  * Funcion para obtener la cantidad de funcionarios contratados pagados por administracion, gestion y dependencia
  * Creado    : 2016-10-17 08:43:00
  * Modificado: 2016-10-17 15:00:00
  * Autor: Lic. Gustavo Eloy Alcaraz Bogado
  * Parametros:
  *            in_id_administracion administracion del proceso		
  *            in_gestion           gestiones (Ej.: '2014,2015,2016,...') [uno o más gestiones]
  *            in_mes               meses (Ej.: '1,2,3,...,12') [Los meses pueden ser aleatorios, es decir, no correlativos] 
  * 	       in_id_funcionario    identifiacador de funcionarios separados por coma o ingresar '0' para todos los funcionarios	 
  * ------------  
  */
RETURN QUERY 
-- =======================================================================
-- SALARIOS
-- =======================================================================
(SELECT
   a.gestion,
   a.id_administracion,
   a.id_oficina,
   count(*) as beneficiario,
   array_to_string(ARRAY(SELECT DISTINCT UNNEST(('{'||array_to_string(array_agg(a.ids_funcionario),',')||'}')::text[]) ORDER BY 1),',') as ids_beneficiario,
   a.objeto_gasto::text as objeto_gasto,
   CASE 
      WHEN a.objeto_gasto=141 THEN 'SALARIOS - PERSONAL TECNICO'::text
      WHEN a.objeto_gasto=144 THEN 'SALARIOS - JORNAL'::text
      WHEN a.objeto_gasto=145 THEN 'SALARIOS - PROFESIONAL'::text
   END as concepto,
   CASE 
      WHEN a.objeto_gasto=141 THEN 1
      WHEN a.objeto_gasto=144 THEN 2
      WHEN a.objeto_gasto=145 THEN 3
   END as orden 
FROM
   (
      SELECT 
         ps.gestion,
         psd.id_administracion,
         psd.id_oficina,
         psd.objeto_gasto,
         array_to_string(array_agg(psd.id_funcionario),',') as ids_funcionario
      FROM 
         salarios_contratados.planillas_salarios_detalles psd 
         LEFT JOIN salarios_contratados.planillas_salarios ps ON ps.id_planilla_salario=psd.id_planilla_salario
      WHERE
         ps.id_estado=1 AND
         ps.id_administracion::text=ANY(('{'||in_id_administracion||'}')::text[]) AND
         ps.gestion::text=ANY(('{'||in_gestion||'}')::text[]) AND
         ps.id_mes::text=ANY(('{'||in_mes||'}')::text[]) AND
         CASE WHEN in_id_funcionario='0' THEN psd.id_funcionario>0 ELSE psd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
      GROUP BY
         ps.gestion,
         psd.id_funcionario,
         psd.id_administracion,
         psd.id_oficina,
         psd.objeto_gasto
   ) a
GROUP BY
   a.gestion,
   a.id_administracion,
   a.id_oficina,
   a.objeto_gasto
)
UNION ALL
-- =======================================================================
-- RE
-- =======================================================================
(SELECT
   a.gestion,
   a.id_administracion,
   a.id_oficina,
   count(*) as beneficiario,
   array_to_string(ARRAY(SELECT DISTINCT UNNEST(('{'||array_to_string(array_agg(a.ids_funcionario),',')||'}')::text[]) ORDER BY 1),',') as ids_beneficiario,
   a.objeto_gasto::text as objeto_gasto,
   CASE 
      WHEN a.objeto_gasto=141 THEN 'REMUNERACION EXTRAORDINARIA (RE) - PERSONAL TECNICO'::text
      WHEN a.objeto_gasto=144 THEN 'REMUNERACION EXTRAORDINARIA (RE) - JORNAL'::text
      WHEN a.objeto_gasto=145 THEN 'REMUNERACION EXTRAORDINARIA (RE) - PROFESIONAL'::text
   END as concepto,
   CASE 
      WHEN a.objeto_gasto=141 THEN 4
      WHEN a.objeto_gasto=144 THEN 5
      WHEN a.objeto_gasto=145 THEN 6
   END as orden 
FROM
   (
      SELECT 
         pre.gestion,
         pred.id_administracion,
         pred.id_oficina,
         pred.objeto_gasto,
         array_to_string(array_agg(pred.id_funcionario),',') as ids_funcionario
      FROM 
         salarios_contratados.planillas_re_detalles pred 
         LEFT JOIN salarios_contratados.planillas_re pre ON pre.id_planilla_re=pred.id_planilla_re
      WHERE
         pre.estado=1 AND
         pre.id_administracion::text=ANY(('{'||in_id_administracion||'}')::text[]) AND
         pre.gestion::text=ANY(('{'||in_gestion||'}')::text[]) AND
         pre.id_mes::text=ANY(('{'||in_mes||'}')::text[]) AND
         CASE WHEN in_id_funcionario='0' THEN pred.id_funcionario>0 ELSE pred.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
      GROUP BY
         pre.gestion,
         pred.id_funcionario,
         pred.id_administracion,
         pred.id_oficina,
         pred.objeto_gasto
   ) a
GROUP BY
   a.gestion,
   a.id_administracion,
   a.id_oficina,
   a.objeto_gasto)
UNION ALL
-- =======================================================================
-- RA
-- =======================================================================
(SELECT
   a.gestion,
   a.id_administracion,
   a.id_oficina,
   count(*) as beneficiario,
   array_to_string(ARRAY(SELECT DISTINCT UNNEST(('{'||array_to_string(array_agg(a.ids_funcionario),',')||'}')::text[]) ORDER BY 1),',') as ids_beneficiario,
   a.objeto_gasto::text as objeto_gasto,
   CASE 
      WHEN a.objeto_gasto=141 THEN 'REMUNERACION ADICIONAL (RA) - PERSONAL TECNICO'::text
      WHEN a.objeto_gasto=144 THEN 'REMUNERACION ADICIONAL (RA) - JORNAL'::text
      WHEN a.objeto_gasto=145 THEN 'REMUNERACION ADICIONAL (RA) - PROFESIONAL'::text
   END as concepto,
   CASE 
      WHEN a.objeto_gasto=141 THEN 7
      WHEN a.objeto_gasto=144 THEN 8
      WHEN a.objeto_gasto=145 THEN 9
   END as orden 
FROM
   (
      SELECT 
         pra.gestion,
         prad.id_administracion,
         prad.id_oficina,
         prad.objeto_gasto,
         array_to_string(array_agg(prad.id_funcionario),',') as ids_funcionario         
      FROM 
         salarios_contratados.planillas_ra_detalles prad 
         LEFT JOIN salarios_contratados.planillas_ra pra ON pra.id_planilla_ra=prad.id_planilla_ra
      WHERE
         pra.estado=1 AND
         pra.id_administracion::text=ANY(('{'||in_id_administracion||'}')::text[]) AND
         pra.gestion::text=ANY(('{'||in_gestion||'}')::text[]) AND
         pra.id_mes::text=ANY(('{'||in_mes||'}')::text[]) AND
         CASE WHEN in_id_funcionario='0' THEN prad.id_funcionario>0 ELSE prad.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
      GROUP BY
         pra.gestion,
         prad.id_funcionario,
         prad.id_administracion,
         prad.id_oficina,
         prad.objeto_gasto
   ) a
GROUP BY
   a.gestion,
   a.id_administracion,
   a.id_oficina,
   a.objeto_gasto)
UNION ALL
-- =======================================================================
-- SUBSIDIOS
-- =======================================================================
(SELECT
   a.gestion,
   a.id_administracion,
   a.id_oficina,
   count(*) as beneficiario,
   array_to_string(ARRAY(SELECT DISTINCT UNNEST(('{'||array_to_string(array_agg(a.ids_funcionario),',')||'}')::text[]) ORDER BY 1),',') as ids_beneficiario,   
   a.objeto_gasto::text as objeto_gasto,
   CASE 
      WHEN a.objeto_gasto=141 THEN a.concepto||' - PERSONAL TECNICO'
      WHEN a.objeto_gasto=144 THEN a.concepto||' - JORNAL'
      WHEN a.objeto_gasto=145 THEN a.concepto||' - PROFESIONAL' 
   END as concepto,
   CASE 
      WHEN a.objeto_gasto=141 THEN 10
      WHEN a.objeto_gasto=144 THEN 11
      WHEN a.objeto_gasto=145 THEN 12
   END as orden 
FROM
   (
      SELECT 
         ps.gestion,
         psd.id_administracion,
         psd.id_oficina,
         psd.objeto_gasto,
         array_to_string(array_agg(fs.id_funcionario),',') as ids_funcionario,
         s.descripcion as concepto
      FROM 
         salarios_contratados.planillas_subsidios_detalles psd 
         LEFT JOIN salarios_contratados.planillas_subsidios ps ON ps.id_planilla_subsidio=psd.id_planilla_subsidio
         LEFT JOIN salarios_contratados.funcionarios_subsidios fs ON fs.id_funcionario_subsidio=psd.id_funcionario_subsidio
         LEFT JOIN salarios_contratados.subsidios s ON s.id_subsidio=fs.id_subsidio 
      WHERE
         ps.estado=1 AND
         ps.id_administracion::text=ANY(('{'||in_id_administracion||'}')::text[]) AND
         ps.gestion::text=ANY(('{'||in_gestion||'}')::text[]) AND
         ps.id_mes::text=ANY(('{'||in_mes||'}')::text[]) AND
         CASE WHEN in_id_funcionario='0' THEN fs.id_funcionario>0 ELSE fs.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
      GROUP BY
         ps.gestion,
         fs.id_funcionario,
         psd.id_administracion,
         psd.id_oficina,
         s.descripcion,
         psd.objeto_gasto
   ) a
GROUP BY
   a.gestion,
   a.id_administracion,
   a.id_oficina,
   a.concepto,
   a.objeto_gasto)
UNION ALL
-- =======================================================================
-- GRATIFICACION OCASIONAL
-- ======================================================================= 
(SELECT
   a.gestion,
   a.id_administracion,
   a.id_oficina,
   count(*) as beneficiario,
   array_to_string(ARRAY(SELECT DISTINCT UNNEST(('{'||array_to_string(array_agg(a.ids_funcionario),',')||'}')::text[]) ORDER BY 1),',') as ids_beneficiario,      
   a.objeto_gasto::text as objeto_gasto,
   CASE 
      WHEN a.objeto_gasto=141 THEN 'GRATIFICACION OCASIONAL - PERSONAL TECNICO'
      WHEN a.objeto_gasto=144 THEN 'GRATIFICACION OCASIONAL - JORNAL'
      WHEN a.objeto_gasto=145 THEN 'GRATIFICACION OCASIONAL - PROFESIONAL' 
   END as concepto,
   CASE 
      WHEN a.objeto_gasto=141 THEN 13
      WHEN a.objeto_gasto=144 THEN 14
      WHEN a.objeto_gasto=145 THEN 15 
   END as orden 
FROM
   (
      SELECT 
         pgo.gestion,
         pgod.id_administracion,
         pgod.id_oficina,
         pgod.objeto_gasto,
         array_to_string(array_agg(pgod.id_funcionario),',') as ids_funcionario         
      FROM 
         salarios_contratados.planillas_gratificaciones_ocasionales_detalles pgod 
         LEFT JOIN salarios_contratados.planillas_gratificaciones_ocasionales pgo ON pgo.id_planilla_gratificacion_ocasional=pgod.id_planilla_gratificacion_ocasional
      WHERE
         pgo.estado=1 AND
         pgo.id_administracion::text=ANY(('{'||in_id_administracion||'}')::text[]) AND
         pgo.gestion::text=ANY(('{'||in_gestion||'}')::text[]) AND
         pgo.id_mes::text=ANY(('{'||in_mes||'}')::text[]) AND
         CASE WHEN in_id_funcionario='0' THEN pgod.id_funcionario>0 ELSE pgod.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
      GROUP BY
         pgo.gestion,
         pgod.id_funcionario,
         pgod.id_administracion,
         pgod.id_oficina,
         pgod.objeto_gasto
   ) a
GROUP BY
   a.gestion,
   a.id_administracion,
   a.id_oficina,
   a.objeto_gasto)
   ;
END;
]]></definition>
</function>

<function name="pagos_realizados_gestion_x_meses_contratado"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="1000">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<parameter name="id">
		<type name="bigint"/>
	</parameter>
	<parameter name="id_administracion">
		<type name="integer"/>
	</parameter>
	<parameter name="gestion">
		<type name="numeric"/>
	</parameter>
	<parameter name="id_oficina">
		<type name="integer"/>
	</parameter>
	<parameter name="objeto_gasto">
		<type name="text"/>
	</parameter>
	<parameter name="concepto">
		<type name="text"/>
	</parameter>
	<parameter name="orden">
		<type name="integer"/>
	</parameter>
	<parameter name="ene_beneficiario">
		<type name="bigint"/>
	</parameter>
	<parameter name="ene_importe">
		<type name="numeric"/>
	</parameter>
	<parameter name="ene_ids_detalle">
		<type name="text"/>
	</parameter>
	<parameter name="feb_beneficiario">
		<type name="bigint"/>
	</parameter>
	<parameter name="feb_importe">
		<type name="numeric"/>
	</parameter>
	<parameter name="feb_ids_detalle">
		<type name="text"/>
	</parameter>
	<parameter name="mar_beneficiario">
		<type name="bigint"/>
	</parameter>
	<parameter name="mar_importe">
		<type name="numeric"/>
	</parameter>
	<parameter name="mar_ids_detalle">
		<type name="text"/>
	</parameter>
	<parameter name="abr_beneficiario">
		<type name="bigint"/>
	</parameter>
	<parameter name="abr_importe">
		<type name="numeric"/>
	</parameter>
	<parameter name="abr_ids_detalle">
		<type name="text"/>
	</parameter>
	<parameter name="may_beneficiario">
		<type name="bigint"/>
	</parameter>
	<parameter name="may_importe">
		<type name="numeric"/>
	</parameter>
	<parameter name="may_ids_detalle">
		<type name="text"/>
	</parameter>
	<parameter name="jun_beneficiario">
		<type name="bigint"/>
	</parameter>
	<parameter name="jun_importe">
		<type name="numeric"/>
	</parameter>
	<parameter name="jun_ids_detalle">
		<type name="text"/>
	</parameter>
	<parameter name="jul_beneficiario">
		<type name="bigint"/>
	</parameter>
	<parameter name="jul_importe">
		<type name="numeric"/>
	</parameter>
	<parameter name="jul_ids_detalle">
		<type name="text"/>
	</parameter>
	<parameter name="ago_beneficiario">
		<type name="bigint"/>
	</parameter>
	<parameter name="ago_importe">
		<type name="numeric"/>
	</parameter>
	<parameter name="ago_ids_detalle">
		<type name="text"/>
	</parameter>
	<parameter name="set_beneficiario">
		<type name="bigint"/>
	</parameter>
	<parameter name="set_importe">
		<type name="numeric"/>
	</parameter>
	<parameter name="set_ids_detalle">
		<type name="text"/>
	</parameter>
	<parameter name="oct_beneficiario">
		<type name="bigint"/>
	</parameter>
	<parameter name="oct_importe">
		<type name="numeric"/>
	</parameter>
	<parameter name="oct_ids_detalle">
		<type name="text"/>
	</parameter>
	<parameter name="nov_beneficiario">
		<type name="bigint"/>
	</parameter>
	<parameter name="nov_importe">
		<type name="numeric"/>
	</parameter>
	<parameter name="nov_ids_detalle">
		<type name="text"/>
	</parameter>
	<parameter name="dic_beneficiario">
		<type name="bigint"/>
	</parameter>
	<parameter name="dic_importe">
		<type name="numeric"/>
	</parameter>
	<parameter name="dic_ids_detalle">
		<type name="text"/>
	</parameter>
	<parameter name="beneficiario_total">
		<type name="bigint"/>
	</parameter>
	<parameter name="importe_total">
		<type name="numeric"/>
	</parameter>
	<parameter name="ids_detalle_total">
		<type name="text"/>
	</parameter>
	</return-type>
	<parameter name="in_id_administracion" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_gestion" in="true">
		<type name="text"/>
	</parameter>
	<parameter name="in_mes" in="true">
		<type name="text"/>
	</parameter>
	<parameter name="in_id_funcionario" in="true">
		<type name="text"/>
	</parameter>
	<definition><![CDATA[
BEGIN
/*
  * Funcion para obtener los pagos realizados a los funcionarios contratados agrupados por meses  
  * por administracion, gestion, id_oficina, concepto, objeto_gasto, orden e id_funcionario
  * Creado    : 2016-10-07 14:34:25
  * Modificado: 2016-10-07 15:00:00
  * Autor: Lic. Gustavo Eloy Alcaraz Bogado
  * Parametros:
  *            in_id_administracion administracion del proceso		
  *            in_gestion           gestiones (Ej.: '2014,2015,2016,...') [uno o más gestiones]
  *            in_mes               meses (Ej.: '1,2,3,...,12') [Los meses pueden ser aleatorios, es decir, no correlativos] 
  * 	       in_id_funcionario    identifiacador de funcionarios separados por coma o ingresar '0' para todos los funcionarios	 
  * ----------------------------------------------------------------------  
  */
RETURN QUERY 
SELECT
   row_number() over() as id, 
   *,
   a.ene_beneficiario+a.feb_beneficiario+a.mar_beneficiario+a.abr_beneficiario+a.may_beneficiario+a.jun_beneficiario+
   a.jul_beneficiario+a.ago_beneficiario+a.set_beneficiario+a.oct_beneficiario+a.nov_beneficiario+a.dic_beneficiario as beneficiario_total,
   a.ene_importe+a.feb_importe+a.mar_importe+a.abr_importe+a.may_importe+a.jun_importe+
   a.jul_importe+a.ago_importe+a.set_importe+a.oct_importe+a.nov_importe+a.dic_importe as importe_total,
   a.ene_ids_detalle||','||a.feb_ids_detalle||','||a.mar_ids_detalle||','||a.abr_ids_detalle||','||a.may_ids_detalle||','||a.jun_ids_detalle||','||
   a.jul_ids_detalle||','||a.ago_ids_detalle||','||a.set_ids_detalle||','||a.oct_ids_detalle||','||a.nov_ids_detalle||','||a.dic_ids_detalle as ids_detalle_total 
FROM
   (
   SELECT 
      -- CATEGORIA
      (('{'||categoria||'}')::text[])[1]::int             as id_administracion,
      (('{'||categoria||'}')::text[])[2]::numeric         as gestion,
      (('{'||categoria||'}')::text[])[3]::int             as id_oficina,
      (('{'||categoria||'}')::text[])[4]::text            as objeto_gasto,
      (('{'||categoria||'}')::text[])[5]::text            as concepto,
      (('{'||categoria||'}')::text[])[6]::int             as orden,
      -- VALORES
      COALESCE((('{'||ENE||'}')::text[])[1]::bigint,0)                  as ene_beneficiario,
      COALESCE((('{'||ENE||'}')::text[])[2]::numeric(15,0),0)           as ene_importe,
      COALESCE(replace((('{'||ENE||'}')::text[])[3]::text,'|',','),'0') as ene_ids_detalle,
      COALESCE((('{'||FEB||'}')::text[])[1]::bigint,0)                  as feb_beneficiario,
      COALESCE((('{'||FEB||'}')::text[])[2]::numeric(15,0),0)           as feb_importe,
      COALESCE(replace((('{'||FEB||'}')::text[])[3]::text,'|',','),'0') as feb_ids_detalle,
      COALESCE((('{'||MAR||'}')::text[])[1]::bigint,0)                  as mar_beneficiario,
      COALESCE((('{'||MAR||'}')::text[])[2]::numeric(15,0),0)           as mar_importe,
      COALESCE(replace((('{'||MAR||'}')::text[])[3]::text,'|',','),'0') as mar_ids_detalle,
      COALESCE((('{'||ABR||'}')::text[])[1]::bigint,0)                  as abr_beneficiario,
      COALESCE((('{'||ABR||'}')::text[])[2]::numeric(15,0),0)           as abr_importe,
      COALESCE(replace((('{'||ABR||'}')::text[])[3]::text,'|',','),'0') as abr_ids_detalle,
      COALESCE((('{'||MAY||'}')::text[])[1]::bigint,0)                  as may_beneficiario,
      COALESCE((('{'||MAY||'}')::text[])[2]::numeric(15,0),0)           as may_importe,
      COALESCE(replace((('{'||MAY||'}')::text[])[3]::text,'|',','),'0') as may_ids_detalle,
      COALESCE((('{'||JUN||'}')::text[])[1]::bigint,0)                  as jun_beneficiario,
      COALESCE((('{'||JUN||'}')::text[])[2]::numeric(15,0),0)           as jun_importe,
      COALESCE(replace((('{'||JUN||'}')::text[])[3]::text,'|',','),'0') as jun_ids_detalle,
      COALESCE((('{'||JUL||'}')::text[])[1]::bigint,0)                  as jul_beneficiario,
      COALESCE((('{'||JUL||'}')::text[])[2]::numeric(15,0),0)           as jul_importe,
      COALESCE(replace((('{'||JUL||'}')::text[])[3]::text,'|',','),'0') as jul_ids_detalle,
      COALESCE((('{'||AGO||'}')::text[])[1]::bigint,0)                  as ago_beneficiario,
      COALESCE((('{'||AGO||'}')::text[])[2]::numeric(15,0),0)           as ago_importe,
      COALESCE(replace((('{'||AGO||'}')::text[])[3]::text,'|',','),'0') as ago_ids_detalle,
      COALESCE((('{'||SET||'}')::text[])[1]::bigint,0)                  as set_beneficiario,
      COALESCE((('{'||SET||'}')::text[])[2]::numeric(15,0),0)           as set_importe,
      COALESCE(replace((('{'||SET||'}')::text[])[3]::text,'|',','),'0') as set_ids_detalle,
      COALESCE((('{'||OCT||'}')::text[])[1]::bigint,0)                  as oct_beneficiario,
      COALESCE((('{'||OCT||'}')::text[])[2]::numeric(15,0),0)           as oct_importe,
      COALESCE(replace((('{'||OCT||'}')::text[])[3]::text,'|',','),'0') as oct_ids_detalle,
      COALESCE((('{'||NOV||'}')::text[])[1]::bigint,0)                  as nov_beneficiario,
      COALESCE((('{'||NOV||'}')::text[])[2]::numeric(15,0),0)           as nov_importe,
      COALESCE(replace((('{'||NOV||'}')::text[])[3]::text,'|',','),'0') as nov_ids_detalle,
      COALESCE((('{'||DIC||'}')::text[])[1]::bigint,0)                  as dic_beneficiario,
      COALESCE((('{'||DIC||'}')::text[])[2]::numeric(15,0),0)           as dic_importe,
      COALESCE(replace((('{'||DIC||'}')::text[])[3]::text,'|',','),'0') as dic_ids_detalle
   FROM 
      CROSSTAB( 
         replace(replace(replace(replace(
         $$ 
         SELECT 
            id_administracion||','||gestion||','||id_oficina||','||objeto_gasto||','||concepto||','||orden as categoria,
            id_mes,
            beneficiario||','||importe||','||replace(ids_detalle,',','|') as valor 
         FROM
            salarios_contratados.pagos_realizados_contratado(in_id_administracion, 'in_gestion', 'in_mes', 'in_id_funcionario')
         ORDER BY
            id_administracion||','||gestion||','||to_char(id_oficina,'000000009')||','||objeto_gasto||','||concepto||','||to_char(orden,'0009'),
            id_mes
         $$,'in_id_administracion',in_id_administracion::text),'in_gestion',in_gestion),'in_mes',in_mes),'in_id_funcionario',in_id_funcionario),
         $$ 
         SELECT 
            m 
         FROM 
            generate_series(1,12) m 
         $$
      ) AS (
        categoria text, 
        ENE text, 
        FEB text, 
        MAR text, 
        ABR text, 
        MAY text, 
        JUN text, 
        JUL text, 
        AGO text, 
        SET text,
        OCT text,
        NOV text,
        DIC text
   )
   ) a;
END;
]]></definition>
</function>

<function name="pedido_fondo_actualiza_montos"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="salarios_contratados"/>
	<role name="dalcaraz"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="trigger"/>
	</return-type>
	<definition><![CDATA[
DECLARE		
	v_cantidad_solicitado integer := 0;
	v_cantidad_aplicado integer := 0;  
	v_importe_presupuestado_solicitado numeric(12,2) := 0;
	v_importe_presupuestado_aplicado numeric(12,2) := 0;
	v_importe_total_multas_solicitado numeric(12,2) := 0;
	v_importe_total_multas_aplicado numeric(12,2) := 0;
	v_importe_total_devengado_solicitado numeric(12,2) := 0;
	v_importe_total_devengado_aplicado numeric(12,2) := 0;
	v_importe_total_iva_solicitado numeric(12,2) := 0;
	v_importe_total_iva_aplicado numeric(12,2) := 0;
	v_importe_total_descuentos_varios_solicitado numeric(12,2) := 0;
	v_importe_total_descuentos_varios_aplicado numeric(12,2) := 0;
	v_importe_total_liquido_solicitado numeric(12,2) := 0;
	v_importe_total_liquido_aplicado numeric(12,2) := 0;
	v_importe_tope_devengado numeric(12,2) := 0;
	nombre_usuario text := user::text;
BEGIN
	IF (TG_OP = 'DELETE') THEN
		SELECT INTO 	--en estas variables
				v_cantidad_solicitado,
				v_cantidad_aplicado,
				v_importe_presupuestado_solicitado,
				v_importe_presupuestado_aplicado,
				v_importe_total_multas_solicitado,
				v_importe_total_multas_aplicado,
				v_importe_total_devengado_solicitado,
				v_importe_total_devengado_aplicado,
				v_importe_total_iva_solicitado,
				v_importe_total_iva_aplicado,
				v_importe_total_descuentos_varios_solicitado,
				v_importe_total_descuentos_varios_aplicado,
				v_importe_total_liquido_solicitado,
				v_importe_total_liquido_aplicado,
				v_importe_tope_devengado
				
				--cargar los siguientes resultado
				sum(cantidad_solicitado),
				sum(cantidad_aplicado),
				sum(importe_presupuestado_solicitado),
				sum(importe_presupuestado_aplicado),
				sum(importe_total_multas_solicitado),
				sum(importe_total_multas_aplicado),
				sum(importe_total_devengado_solicitado),
				sum(importe_total_devengado_aplicado),
				sum(importe_total_iva_solicitado),
				sum(importe_total_iva_aplicado),
				sum(importe_total_descuentos_varios_solicitado),
				sum(importe_total_descuentos_varios_aplicado),
				sum(importe_total_liquido_solicitado),
				sum(importe_total_liquido_aplicado),
				sum(importe_tope_devengado)
		FROM salarios_contratados.pedidos_fondos_detalles 
		WHERE id_pedido_fondo = OLD.id_pedido_fondo;
		
		IF v_importe_presupuestado_solicitado IS NULL THEN 
			v_cantidad_solicitado := 0;
			v_cantidad_aplicado := 0;
			v_importe_presupuestado_solicitado := 0;
			v_importe_presupuestado_aplicado := 0;
			v_importe_total_multas_solicitado := 0;
			v_importe_total_multas_aplicado := 0;
			v_importe_total_devengado_solicitado := 0;
			v_importe_total_devengado_aplicado := 0;
			v_importe_total_iva_solicitado := 0;
			v_importe_total_iva_aplicado := 0;
			v_importe_total_descuentos_varios_solicitado := 0;
			v_importe_total_descuentos_varios_aplicado := 0;
			v_importe_total_liquido_solicitado := 0;
			v_importe_total_liquido_aplicado := 0;
			v_importe_tope_devengado := 0;			
		END IF;

		UPDATE salarios_contratados.pedidos_fondos 
		SET 	cantidad_total_solicitado = v_cantidad_solicitado,
			cantidad_total_aplicado = v_cantidad_aplicado,
			importe_presupuestado_solicitado = v_importe_presupuestado_solicitado,
			importe_presupuestado_aplicado = v_importe_presupuestado_aplicado,
			importe_total_multas_solicitado =v_importe_total_multas_solicitado,
			importe_total_multas_aplicado = v_importe_total_multas_aplicado,
			importe_total_devengado_solicitado = v_importe_total_devengado_solicitado,
			importe_total_devengado_aplicado = v_importe_total_devengado_aplicado,
			importe_total_iva_solicitado = v_importe_total_iva_solicitado,
			importe_total_iva_aplicado = v_importe_total_iva_aplicado,
			importe_total_descuentos_varios_solicitado = v_importe_total_descuentos_varios_solicitado,
			importe_total_descuentos_varios_aplicado = v_importe_total_descuentos_varios_aplicado,
			importe_total_liquido_solicitado = v_importe_total_liquido_solicitado,
			importe_total_liquido_aplicado = v_importe_total_liquido_aplicado,			
			usu_modi=nombre_usuario, fec_modi=now() 
		WHERE id_pedido_fondo = OLD.id_pedido_fondo;
		
		RETURN OLD;
		
	ELSIF (TG_OP = 'UPDATE') THEN
		SELECT INTO 	--en estas variables
				v_cantidad_solicitado,
				v_cantidad_aplicado,
				v_importe_presupuestado_solicitado,
				v_importe_presupuestado_aplicado,
				v_importe_total_multas_solicitado,
				v_importe_total_multas_aplicado,
				v_importe_total_devengado_solicitado,
				v_importe_total_devengado_aplicado,
				v_importe_total_iva_solicitado,
				v_importe_total_iva_aplicado,
				v_importe_total_descuentos_varios_solicitado,
				v_importe_total_descuentos_varios_aplicado,
				v_importe_total_liquido_solicitado,
				v_importe_total_liquido_aplicado,
				v_importe_tope_devengado
				
				--cargar los siguientes resultado
				sum(cantidad_solicitado),
				sum(cantidad_aplicado),
				sum(importe_presupuestado_solicitado),
				sum(importe_presupuestado_aplicado),
				sum(importe_total_multas_solicitado),
				sum(importe_total_multas_aplicado),
				sum(importe_total_devengado_solicitado),
				sum(importe_total_devengado_aplicado),
				sum(importe_total_iva_solicitado),
				sum(importe_total_iva_aplicado),
				sum(importe_total_descuentos_varios_solicitado),
				sum(importe_total_descuentos_varios_aplicado),
				sum(importe_total_liquido_solicitado),
				sum(importe_total_liquido_aplicado),
				sum(importe_tope_devengado)
		FROM salarios_contratados.pedidos_fondos_detalles 
		WHERE id_pedido_fondo = NEW.id_pedido_fondo;
		
		IF v_importe_presupuestado_solicitado IS NULL THEN 
			v_cantidad_solicitado := 0;
			v_cantidad_aplicado := 0;
			v_importe_presupuestado_solicitado := 0;
			v_importe_presupuestado_aplicado := 0;
			v_importe_total_multas_solicitado := 0;
			v_importe_total_multas_aplicado := 0;
			v_importe_total_devengado_solicitado := 0;
			v_importe_total_devengado_aplicado := 0;
			v_importe_total_iva_solicitado := 0;
			v_importe_total_iva_aplicado := 0;
			v_importe_total_descuentos_varios_solicitado := 0;
			v_importe_total_descuentos_varios_aplicado := 0;
			v_importe_total_liquido_solicitado := 0;
			v_importe_total_liquido_aplicado := 0;
			v_importe_tope_devengado := 0;
		END IF;

		UPDATE salarios_contratados.pedidos_fondos 
		SET 	cantidad_total_solicitado = v_cantidad_solicitado,
			cantidad_total_aplicado = v_cantidad_aplicado,
			importe_presupuestado_solicitado = v_importe_presupuestado_solicitado,
			importe_presupuestado_aplicado = v_importe_presupuestado_aplicado,
			importe_total_multas_solicitado =v_importe_total_multas_solicitado,
			importe_total_multas_aplicado = v_importe_total_multas_aplicado,
			importe_total_devengado_solicitado = v_importe_total_devengado_solicitado,
			importe_total_devengado_aplicado = v_importe_total_devengado_aplicado,
			importe_total_iva_solicitado = v_importe_total_iva_solicitado,
			importe_total_iva_aplicado = v_importe_total_iva_aplicado,
			importe_total_descuentos_varios_solicitado = v_importe_total_descuentos_varios_solicitado,
			importe_total_descuentos_varios_aplicado = v_importe_total_descuentos_varios_aplicado,
			importe_total_liquido_solicitado = v_importe_total_liquido_solicitado,
			importe_total_liquido_aplicado = v_importe_total_liquido_aplicado,			
			usu_modi=nombre_usuario, fec_modi=now()  
		WHERE id_pedido_fondo = NEW.id_pedido_fondo;
		
		RETURN NEW;
		
	ELSIF (TG_OP = 'INSERT') THEN
		SELECT INTO 	--en estas variables				
				v_cantidad_solicitado,
				v_cantidad_aplicado,
				v_importe_presupuestado_solicitado,
				v_importe_presupuestado_aplicado,
				v_importe_total_multas_solicitado,
				v_importe_total_multas_aplicado,
				v_importe_total_devengado_solicitado,
				v_importe_total_devengado_aplicado,
				v_importe_total_iva_solicitado,
				v_importe_total_iva_aplicado,
				v_importe_total_descuentos_varios_solicitado,
				v_importe_total_descuentos_varios_aplicado,
				v_importe_total_liquido_solicitado,
				v_importe_total_liquido_aplicado,
				v_importe_tope_devengado
				
				--cargar los siguientes resultado
				sum(cantidad_solicitado),
				sum(cantidad_aplicado),
				sum(importe_presupuestado_solicitado),
				sum(importe_presupuestado_aplicado),
				sum(importe_total_multas_solicitado),
				sum(importe_total_multas_aplicado),
				sum(importe_total_devengado_solicitado),
				sum(importe_total_devengado_aplicado),
				sum(importe_total_iva_solicitado),
				sum(importe_total_iva_aplicado),
				sum(importe_total_descuentos_varios_solicitado),
				sum(importe_total_descuentos_varios_aplicado),
				sum(importe_total_liquido_solicitado),
				sum(importe_total_liquido_aplicado),
				sum(importe_tope_devengado) 
		FROM salarios_contratados.pedidos_fondos_detalles 
		WHERE id_pedido_fondo = NEW.id_pedido_fondo;
		
		IF v_importe_presupuestado_solicitado IS NULL THEN 
			v_cantidad_solicitado := 0;
			v_cantidad_aplicado := 0;
			v_importe_presupuestado_solicitado := 0;
			v_importe_presupuestado_aplicado := 0;
			v_importe_total_multas_solicitado := 0;
			v_importe_total_multas_aplicado := 0;
			v_importe_total_devengado_solicitado := 0;
			v_importe_total_devengado_aplicado := 0;
			v_importe_total_iva_solicitado := 0;
			v_importe_total_iva_aplicado := 0;
			v_importe_total_descuentos_varios_solicitado := 0;
			v_importe_total_descuentos_varios_aplicado := 0;
			v_importe_total_liquido_solicitado := 0;
			v_importe_total_liquido_aplicado := 0;
			v_importe_tope_devengado := 0;	
		END IF;

		UPDATE salarios_contratados.pedidos_fondos 
		SET 	cantidad_total_solicitado = v_cantidad_solicitado,
			cantidad_total_aplicado = v_cantidad_aplicado,
			importe_presupuestado_solicitado = v_importe_presupuestado_solicitado,
			importe_presupuestado_aplicado = v_importe_presupuestado_aplicado,
			importe_total_multas_solicitado =v_importe_total_multas_solicitado,
			importe_total_multas_aplicado = v_importe_total_multas_aplicado,
			importe_total_devengado_solicitado = v_importe_total_devengado_solicitado,
			importe_total_devengado_aplicado = v_importe_total_devengado_aplicado,
			importe_total_iva_solicitado = v_importe_total_iva_solicitado,
			importe_total_iva_aplicado = v_importe_total_iva_aplicado,
			importe_total_descuentos_varios_solicitado = v_importe_total_descuentos_varios_solicitado,
			importe_total_descuentos_varios_aplicado = v_importe_total_descuentos_varios_aplicado,
			importe_total_liquido_solicitado = v_importe_total_liquido_solicitado,
			importe_total_liquido_aplicado = v_importe_total_liquido_aplicado,			
			usu_modi=nombre_usuario, fec_modi=now()  
		WHERE id_pedido_fondo = NEW.id_pedido_fondo;
		
		RETURN NEW;
		
	END IF;
END;]]></definition>
</function>

<function name="pedido_fondo_aguinaldo_actualiza_montos"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="trigger"/>
	</return-type>
	<definition><![CDATA[
DECLARE
	importe_monto_total_solicitado numeric(15,2) := 0;
	importe_monto_total_aplicado numeric(15,2) := 0;
	v_cantidad_solicitado integer := 0;
	v_cantidad_aplicado integer := 0;
	nombre_usuario text := user::text;
BEGIN
	IF (TG_OP = 'DELETE') THEN
		SELECT INTO 	--en estas variables
				importe_monto_total_solicitado,
				importe_monto_total_aplicado, 
				v_cantidad_solicitado,
				v_cantidad_aplicado  
				--cargar los siguientes resultado
				sum(importe_solicitado),
				sum(importe_aplicado),
				sum(cantidad_solicitado),
				sum(cantidad_aplicado) 
		FROM salarios_contratados.pedido_fondo_aguinaldo_detalle
		WHERE id_pedido_fondo_aguinaldo = OLD.id_pedido_fondo_aguinaldo;
		
		IF importe_monto_total_solicitado IS NULL THEN 
			importe_monto_total_solicitado :=0;
			importe_monto_total_aplicado := 0;
			v_cantidad_solicitado := 0;
			v_cantidad_aplicado := 0;
		END IF;

		UPDATE salarios_contratados.pedido_fondo_aguinaldo 
		SET 	importe_total_solicitado=importe_monto_total_solicitado,
			importe_total_aplicado=importe_monto_total_aplicado, 
			cantidad_total_solicitado=v_cantidad_solicitado,
			cantidad_total_aplicado=v_cantidad_aplicado,
			usu_modi=nombre_usuario, fec_modi=now() 
		WHERE id_pedido_fondo_aguinaldo = OLD.id_pedido_fondo_aguinaldo;
		
		RETURN OLD;
		
	ELSIF (TG_OP = 'UPDATE') THEN
		SELECT INTO 	--en estas variables
				importe_monto_total_solicitado,
				importe_monto_total_aplicado, 
				v_cantidad_solicitado,
				v_cantidad_aplicado  
				--cargar los siguientes resultado
				sum(importe_solicitado),
				sum(importe_aplicado),
				sum(cantidad_solicitado),
				sum(cantidad_aplicado) 
		FROM salarios_contratados.pedido_fondo_aguinaldo_detalle
		WHERE id_pedido_fondo_aguinaldo = NEW.id_pedido_fondo_aguinaldo;
		
		IF importe_monto_total_solicitado IS NULL THEN 
			importe_monto_total_solicitado :=0;
			importe_monto_total_aplicado := 0;
			v_cantidad_solicitado := 0;
			v_cantidad_aplicado := 0;
		END IF;

		UPDATE salarios_contratados.pedido_fondo_aguinaldo 
		SET 	importe_total_solicitado=importe_monto_total_solicitado,
			importe_total_aplicado=importe_monto_total_aplicado, 
			cantidad_total_solicitado=v_cantidad_solicitado,
			cantidad_total_aplicado=v_cantidad_aplicado,
			usu_modi=nombre_usuario, fec_modi=now()  
		WHERE id_pedido_fondo_aguinaldo = NEW.id_pedido_fondo_aguinaldo;
		
		RETURN NEW;
		
	ELSIF (TG_OP = 'INSERT') THEN
		SELECT INTO 	--en estas variables
				importe_monto_total_solicitado,				
				importe_monto_total_aplicado, 				
				v_cantidad_solicitado,
				v_cantidad_aplicado  
				--cargar los siguientes resultado
				sum(importe_solicitado),
				sum(importe_aplicado),
				sum(cantidad_solicitado),
				sum(cantidad_aplicado)  
		FROM salarios_contratados.pedido_fondo_aguinaldo_detalle 
		WHERE id_pedido_fondo_aguinaldo = NEW.id_pedido_fondo_aguinaldo;
		
		IF importe_monto_total_solicitado IS NULL THEN 
			importe_monto_total_solicitado :=0;
			importe_monto_total_aplicado := 0;
			v_cantidad_solicitado := 0;
			v_cantidad_aplicado := 0;
		END IF;

		UPDATE salarios_contratados.pedido_fondo_aguinaldo 
		SET 	importe_total_solicitado=importe_monto_total_solicitado,
			importe_total_aplicado=importe_monto_total_aplicado, 
			cantidad_total_solicitado=v_cantidad_solicitado,
			cantidad_total_aplicado=v_cantidad_aplicado,
			usu_modi=nombre_usuario, fec_modi=now()  
		WHERE id_pedido_fondo_aguinaldo = NEW.id_pedido_fondo_aguinaldo;
		
		RETURN NEW;
		
	END IF;
END;]]></definition>
</function>

<function name="planilla_aguinaldo"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="1000">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<parameter name="id_funcionario">
		<type name="integer"/>
	</parameter>
	<parameter name="cedula">
		<type name="character varying"/>
	</parameter>
	<parameter name="funcionario">
		<type name="character varying"/>
	</parameter>
	<parameter name="estado_funcionario">
		<type name="boolean"/>
	</parameter>
	<parameter name="descripcion">
		<type name="character varying"/>
	</parameter>
	<parameter name="id_oficina">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel1">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel2">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel3">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel4">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel5">
		<type name="integer"/>
	</parameter>
	<parameter name="nombre_nivel1">
		<type name="character varying"/>
	</parameter>
	<parameter name="nombre_nivel2">
		<type name="character varying"/>
	</parameter>
	<parameter name="nombre_nivel4">
		<type name="character varying"/>
	</parameter>
	<parameter name="ene">
		<type name="numeric"/>
	</parameter>
	<parameter name="feb">
		<type name="numeric"/>
	</parameter>
	<parameter name="mar">
		<type name="numeric"/>
	</parameter>
	<parameter name="abr">
		<type name="numeric"/>
	</parameter>
	<parameter name="may">
		<type name="numeric"/>
	</parameter>
	<parameter name="jun">
		<type name="numeric"/>
	</parameter>
	<parameter name="jul">
		<type name="numeric"/>
	</parameter>
	<parameter name="ago">
		<type name="numeric"/>
	</parameter>
	<parameter name="sep">
		<type name="numeric"/>
	</parameter>
	<parameter name="oct">
		<type name="numeric"/>
	</parameter>
	<parameter name="nov">
		<type name="numeric"/>
	</parameter>
	<parameter name="dic">
		<type name="numeric"/>
	</parameter>
	<parameter name="total">
		<type name="numeric"/>
	</parameter>
	</return-type>
	<parameter name="in_id_planilla_aguinaldo" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_gestion" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_id_tipo_aguinaldo" in="true">
		<type name="integer"/>
	</parameter>
	<definition><![CDATA[
BEGIN

RETURN QUERY 
SELECT t.*, (COALESCE(t.ene,0)+
	   COALESCE(t.feb,0)+
	   COALESCE(t.mar,0)+
	   COALESCE(t.abr,0)+
	   COALESCE(t.may,0)+
	   COALESCE(t.jun,0)+
	   COALESCE(t.jul,0)+
	   COALESCE(t.ago,0)+
	   COALESCE(t.sep,0)+
	   COALESCE(t.oct,0)+
	   COALESCE(t.nov,0)+
	   COALESCE(t.dic,0)
	  ) as total FROM (
SELECT * FROM crosstab(
  'SELECT fa.id_funcionario, 
	  f.cedula_funcionario, 
	  f.ape_nom_funcionario,
	  f.estado_funcionario, 
	  ta.descripcion,
	  da.id_oficina, 
	  o.nivel1, 
	  o.nivel2, 
	  o.nivel3, 
	  o.nivel4, 
	  o.nivel5, 
	  o.nombre_nivel1,
	  o.nombre_nivel2,
	  o.nombre_nivel4,
	  da.id_mes, 
	  sum(da.monto)  
   FROM salarios_contratados.planillas_detalles_aguinaldos da
   INNER JOIN salarios_contratados.planillas_aguinaldos a ON da.id_planilla_aguinaldo = a.id_planilla_aguinaldo
   INNER JOIN salarios_contratados.funcionarios_aguinaldos fa ON da.id_funcionario_aguinaldo = fa.id_funcionario_aguinaldo
   INNER JOIN legajos.funcionarios f ON fa.id_funcionario = f.id_funcionario
   INNER JOIN legajos.oficinas_con_descripciones o ON o.id_oficina = da.id_oficina
   INNER JOIN salarios_contratados.tipos_aguinaldos ta on ta.id_tipo_aguinaldo = '||in_id_tipo_aguinaldo||'
   WHERE a.id_tipo_aguinaldo = '||in_id_tipo_aguinaldo||' AND a.gestion = '||in_gestion||' AND a.id_planilla_aguinaldo = '|| in_id_planilla_aguinaldo ||'
   GROUP BY fa.id_funcionario,
	    f.cedula_funcionario,  
	    f.ape_nom_funcionario, 
	    f.estado_funcionario,
	    ta.descripcion,
	    da.id_oficina, 
	    o.nivel1, 
	    o.nivel2, 
	    o.nivel3, 
	    o.nivel4, 
	    o.nivel5, 
	    o.nombre_nivel1,
	    o.nombre_nivel2,
	    o.nombre_nivel4,
	    da.id_mes ORDER BY 1 ',
  'SELECT m FROM generate_series(1,12) m'
) AS (
  id_funcionario int,
  cedula varchar,
  funcionario varchar,
  estado_funcionario boolean,
  descripcion varchar,
  id_oficina int,
  nivel1 int, nivel2 int, nivel3 int, nivel4 int, nivel5 int, 
  nombre_nivel1 varchar,
  nombre_nivel2 varchar,
  nombre_nivel4 varchar,
  ene numeric,
  feb numeric,
  mar numeric,
  abr numeric,
  may numeric,
  jun numeric,
  jul numeric,
  ago numeric,
  sep numeric,
  oct numeric,
  nov numeric,
  dic numeric
)) t;

END;
]]></definition>
</function>

<function name="planilla_aguinaldo_contratado"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="1000">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<parameter name="id_funcionario">
		<type name="integer"/>
	</parameter>
	<parameter name="cedula">
		<type name="character varying"/>
	</parameter>
	<parameter name="funcionario">
		<type name="character varying"/>
	</parameter>
	<parameter name="estado_funcionario">
		<type name="boolean"/>
	</parameter>
	<parameter name="objeto_gasto">
		<type name="integer"/>
	</parameter>
	<parameter name="descripcion">
		<type name="character varying"/>
	</parameter>
	<parameter name="id_oficina">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel1">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel2">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel3">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel4">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel5">
		<type name="integer"/>
	</parameter>
	<parameter name="nombre_nivel1">
		<type name="character varying"/>
	</parameter>
	<parameter name="nombre_nivel2">
		<type name="character varying"/>
	</parameter>
	<parameter name="nombre_nivel4">
		<type name="character varying"/>
	</parameter>
	<parameter name="ene">
		<type name="numeric"/>
	</parameter>
	<parameter name="feb">
		<type name="numeric"/>
	</parameter>
	<parameter name="mar">
		<type name="numeric"/>
	</parameter>
	<parameter name="abr">
		<type name="numeric"/>
	</parameter>
	<parameter name="may">
		<type name="numeric"/>
	</parameter>
	<parameter name="jun">
		<type name="numeric"/>
	</parameter>
	<parameter name="jul">
		<type name="numeric"/>
	</parameter>
	<parameter name="ago">
		<type name="numeric"/>
	</parameter>
	<parameter name="sep">
		<type name="numeric"/>
	</parameter>
	<parameter name="oct">
		<type name="numeric"/>
	</parameter>
	<parameter name="nov">
		<type name="numeric"/>
	</parameter>
	<parameter name="dic">
		<type name="numeric"/>
	</parameter>
	<parameter name="total">
		<type name="numeric"/>
	</parameter>
	</return-type>
	<parameter name="in_id_planilla_aguinaldo" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_gestion" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_id_tipo_aguinaldo" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_objeto_gasto" in="true">
		<type name="integer"/>
	</parameter>
	<definition><![CDATA[
BEGIN

RETURN QUERY 
SELECT t.*, (COALESCE(t.ene,0)+
	   COALESCE(t.feb,0)+
	   COALESCE(t.mar,0)+
	   COALESCE(t.abr,0)+
	   COALESCE(t.may,0)+
	   COALESCE(t.jun,0)+
	   COALESCE(t.jul,0)+
	   COALESCE(t.ago,0)+
	   COALESCE(t.sep,0)+
	   COALESCE(t.oct,0)+
	   COALESCE(t.nov,0)+
	   COALESCE(t.dic,0)
	  ) as total FROM (
SELECT * FROM crosstab(
  'SELECT fa.id_funcionario, 
	  f.cedula_funcionario, 
	  f.ape_nom_funcionario,
	  f.estado_funcionario, 
	  da.objeto_gasto,
	  ta.descripcion,	  
	  da.id_oficina, 
	  o.nivel1, 
	  o.nivel2, 
	  o.nivel3, 
	  o.nivel4, 
	  o.nivel5, 
	  o.nombre_nivel1,
	  o.nombre_nivel2,
	  o.nombre_nivel4,
	  da.id_mes, 
	  sum(da.monto)  
   FROM salarios_contratados.planillas_aguinaldos_detalles da
   INNER JOIN salarios_contratados.planillas_aguinaldos a ON da.id_planilla_aguinaldo = a.id_planilla_aguinaldo
   INNER JOIN salarios_contratados.funcionarios_aguinaldos fa ON da.id_funcionario_aguinaldo = fa.id_funcionario_aguinaldo and fa.objeto_gasto = da.objeto_gasto
   INNER JOIN legajos.funcionarios f ON fa.id_funcionario = f.id_funcionario
   INNER JOIN legajos.oficinas_con_descripciones o ON o.id_oficina = da.id_oficina
   INNER JOIN salarios_contratados.tipos_aguinaldos ta on ta.id_tipo_aguinaldo = '||in_id_tipo_aguinaldo||'
   WHERE a.id_tipo_aguinaldo = '||in_id_tipo_aguinaldo||' AND a.gestion = '||in_gestion||' AND a.id_planilla_aguinaldo = '|| in_id_planilla_aguinaldo ||' AND da.objeto_gasto = '|| in_objeto_gasto||'
   GROUP BY da.objeto_gasto,
	    da.id_oficina,
	    o.nivel1, 
	    o.nivel2, 
	    o.nivel3, 
	    o.nivel4, 
	    o.nivel5, 
	    o.nombre_nivel1,
	    o.nombre_nivel2,
	    o.nombre_nivel4,
	    fa.id_funcionario,
	    f.cedula_funcionario,  
	    f.ape_nom_funcionario, 
	    f.estado_funcionario,
	    ta.descripcion,	     	    
	    da.id_mes ORDER BY 5,8,9,10,11,12',
  'SELECT m FROM generate_series(1,12) m'
) AS (
  id_funcionario int,
  cedula varchar,
  funcionario varchar,
  estado_funcionario boolean,
  objeto_gasto int,
  descripcion varchar,
  id_oficina int,
  nivel1 int, nivel2 int, nivel3 int, nivel4 int, nivel5 int, 
  nombre_nivel1 varchar,
  nombre_nivel2 varchar,
  nombre_nivel4 varchar,
  ene numeric,
  feb numeric,
  mar numeric,
  abr numeric,
  may numeric,
  jun numeric,
  jul numeric,
  ago numeric,
  sep numeric,
  oct numeric,
  nov numeric,
  dic numeric
)) t;

END;
]]></definition>
</function>

<function name="planilla_contratados_web_publicar"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="1000">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<parameter name="cedula_funcionario">
		<type name="text"/>
	</parameter>
	<parameter name="ape_nom_funcionario">
		<type name="text"/>
	</parameter>
	<parameter name="descripcion_tipo">
		<type name="text"/>
	</parameter>
	<parameter name="presu">
		<type name="integer"/>
	</parameter>
	<parameter name="deven">
		<type name="integer"/>
	</parameter>
	<parameter name="iva">
		<type name="integer"/>
	</parameter>
	<parameter name="total">
		<type name="integer"/>
	</parameter>
	</return-type>
	<parameter name="in_id_administracion" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_id_mes" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_gestion" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_id_funcionario" in="true">
		<type name="text"/>
	</parameter>
	<definition><![CDATA[
BEGIN
/*
  * Funcion para generar un listado de las liquidaciones de los funcionarios contratados por mes y gestion
  * Creado    : 2014-03-04 15:00:48
  * Modificado: 2014-03-04 15:29:48
  * Autor     : Lic. Gustavo Eloy Alcaraz Bogado
  * Parametros:
  *            in_id_administracion administracion del proceso		
  *            in_id_mes            mes de proceso
  *            in_gestion           ejercicio aplicado 
  *            in_funcionario       '0':TODOS  '481,218,278': Ids funcionarios 
  * 
  * Descripcion:  Genera un listado de los funcionarios contratados referentes a las liquidaciones al mes y la gestion ingresado
  *               como informe para la Secretaria de la Funcion Publica (SFP)  
  * ------------  
  */
RETURN QUERY 

SELECT
--    f.id_funcionario,
    f.cedula_funcionario::text,
    f.ape_nom_funcionario::text,
--    sal.categoria,
--    sal.nivel1,
--    sal.nivel2,
--    sal.nivel3,
--    sal.nivel4,
--    sal.nivel5,
--    sal.nombre_nivel1,
--    sal.nombre_nivel2,
--    sal.nombre_nivel3,
--    sal.nombre_nivel4,
--    sal.nombre_nivel5,
--    sal.desde,
--    sal.hasta,
--    sal.nro_contrato,
    sal.descripcion_tipo::text,
--    sal.objeto_gasto,
--    sal.dias_trabajados,
    sal.presu,
    sal.deven,--,
--    sal.multa,
    sal.iva,
    sal.liq_sin_desc AS total
--    sal.desc_solic,
--    sal.desc_apli,
--    sal.desc_dife,
--    sal.liq_con_desc   
FROM
   legajos.funcionarios f
   INNER JOIN legajos.situacion_administrativa_actual saa ON saa.id_funcionario=f.id_funcionario AND saa.id_tipo_funcionario='CON'
   INNER JOIN (
	   SELECT
	   psd.id_funcionario,
	   fc.categoria,
	   ocd.nivel1,
	   ocd.nivel2,
	   ocd.nivel3,
	   ocd.nivel4,
	   ocd.nivel5,
	   ocd.nombre_nivel1,
	   ocd.nombre_nivel2,
	   ocd.nombre_nivel3,
	   ocd.nombre_nivel4,
	   ocd.nombre_nivel5,
	   fc.nro_contrato,
	   to_char(fc.desde,'dd/MM/YYYY') as desde,
	   to_char(fc.hasta,'dd/MM/YYYY') as hasta,
	   tc.descripcion_tipo,
	   psd.objeto_gasto,
	   psd.dias_trabajados,
	   psd.monto_presupuestado::int as presu,
	   psd.monto_devengado::int as deven,
	   psd.monto_multa::int as multa,
	   psd.monto_iva::int as iva,
	   psd.importe_liquido_sin_descuentos_varios::int as liq_sin_desc,
	   psd.importe_descuentos_varios_solicitado::int as desc_solic,
	   psd.importe_descuentos_varios_aplicado::int as desc_apli,
	   psd.importe_descuentos_varios_diferencia::int as desc_dife,
	   psd.importe_liquido_con_descuentos_varios::int as liq_con_desc
	FROM
	   salarios_contratados.planillas_salarios ps
	   INNER JOIN salarios_contratados.planillas_salarios_detalles psd ON psd.id_planilla_salario=ps.id_planilla_salario
	   INNER JOIN salarios_contratados.funcionarios_contratos       fc ON fc.id_funcionario_contrato=psd.id_funcionario_contrato
	   INNER JOIN legajos.tipo_contrato                             tc ON tc.id_tipo_contrato=fc.id_tipo_contrato
	   INNER JOIN legajos.oficinas_con_descripciones                ocd ON ocd.id_oficina=fc.id_oficina
	WHERE
	   ps.id_administracion=in_id_administracion AND
	   ps.id_estado=1 AND
	   ps.gestion=in_gestion AND
	   ps.id_mes=in_id_mes  AND
	   CASE
	      WHEN 
		 in_id_funcionario='0' 
	      THEN 
		 psd.id_funcionario>0
	      ELSE 
		 psd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[])
	   END
	   
   ) sal ON sal.id_funcionario=f.id_funcionario
WHERE
   f.id_administracion IN(0,in_id_administracion) AND
   CASE
      WHEN 
	 in_id_funcionario='0' 
      THEN 
	 f.id_funcionario>0
      ELSE 
	 f.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[])
   END
ORDER BY 
sal.presu DESC, f.ape_nom_funcionario;

END;
]]></definition>
</function>

<function name="planilla_gratificacion_ocacional_actualiza_importes_totales"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="trigger"/>
	</return-type>
	<definition><![CDATA[
DECLARE
	monto_total1 numeric(12,2) := 0;
	monto_iva1 numeric(12,2) := 0;
	nombre_usuario text := user::text;
BEGIN
IF (TG_OP = 'DELETE') THEN
	
	SELECT 
		sum(importe_gratificacion), 
		sum(importe_iva)		
		INTO
		monto_total1,
		monto_iva1
	FROM salarios_contratados.detalle_planilla_gratificacion_ocacional 
	WHERE id_planilla_gratificacion_ocacional = OLD.id_planilla_gratificacion_ocacional;

	IF monto_total1 IS NULL THEN 
		monto_total1 :=0;	
	END IF;	
	IF monto_iva1 IS NULL THEN 
		monto_iva1 :=0;
	END IF;
	UPDATE salarios_contratados.planilla_gratificacion_ocacional  SET 
						monto_total = monto_total1,
						monto_iva = monto_iva1,
						usu_modi = nombre_usuario, 
						fec_modi = now(),
						ip_modi = inet_client_addr()::varchar(30)
	WHERE id_planilla_gratificacion_ocacional = OLD.id_planilla_gratificacion_ocacional;
	RETURN OLD;

ELSIF (TG_OP = 'UPDATE') THEN
	SELECT 
		sum(importe_gratificacion), 
		sum(importe_iva)
		INTO
		monto_total1,
		monto_iva1
	FROM salarios_contratados.detalle_planilla_gratificacion_ocacional 
	WHERE id_planilla_gratificacion_ocacional = NEW.id_planilla_gratificacion_ocacional;

	IF monto_total1 IS NULL THEN 
		monto_total1 :=0;	
	END IF;	
	IF monto_iva1 IS NULL THEN 
		monto_iva1 :=0;
	END IF;
	UPDATE salarios_contratados.planilla_gratificacion_ocacional  SET 
						monto_total = monto_total1,
						monto_iva = monto_iva1,
						usu_modi = nombre_usuario, 
						fec_modi = now(),
						ip_modi = inet_client_addr()::varchar(30)
	WHERE id_planilla_gratificacion_ocacional = NEW.id_planilla_gratificacion_ocacional;
	RETURN NEW;
ELSIF (TG_OP = 'INSERT') THEN
	SELECT 
		sum(importe_gratificacion), 
		sum(importe_iva)
		INTO
		monto_total1,
		monto_iva1
	FROM salarios_contratados.detalle_planilla_gratificacion_ocacional 
	WHERE id_planilla_gratificacion_ocacional = NEW.id_planilla_gratificacion_ocacional;

	IF monto_total1 IS NULL THEN 
		monto_total1 :=0;	
	END IF;	
	IF monto_iva1 IS NULL THEN 
		monto_iva1 :=0;
	END IF;
	UPDATE salarios_contratados.planilla_gratificacion_ocacional  SET 
						monto_total = monto_total1,
						monto_iva = monto_iva1,
						usu_modi = nombre_usuario, 
						fec_modi = now(),
						ip_modi = inet_client_addr()::varchar(30)
	WHERE id_planilla_gratificacion_ocacional = NEW.id_planilla_gratificacion_ocacional;
	RETURN NEW;
END IF;
END;]]></definition>
</function>

<function name="planilla_re_ra_retencion_contratados"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="1000">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<parameter name="nombre">
		<type name="character varying"/>
	</parameter>
	<parameter name="tipo_funcionario">
		<type name="character varying"/>
	</parameter>
	<parameter name="id_funcionario">
		<type name="integer"/>
	</parameter>
	<parameter name="ape_nom_funcionario">
		<type name="character varying"/>
	</parameter>
	<parameter name="cedula_funcionario">
		<type name="character varying"/>
	</parameter>
	<parameter name="porcentaje_iva">
		<type name="integer"/>
	</parameter>
	<parameter name="retencion_iva">
		<type name="integer"/>
	</parameter>
	<parameter name="descripcion_tipo_disposicion">
		<type name="character varying"/>
	</parameter>
	<parameter name="descripcion_motivo">
		<type name="character varying"/>
	</parameter>
	<parameter name="descripcion_tipo">
		<type name="character varying"/>
	</parameter>
	<parameter name="nro_disposicion">
		<type name="character varying"/>
	</parameter>
	<parameter name="nro_contrato">
		<type name="character varying"/>
	</parameter>
	<parameter name="fecha_desde">
		<type name="date"/>
	</parameter>
	<parameter name="fecha_hasta">
		<type name="date"/>
	</parameter>
	<parameter name="activo">
		<type name="boolean"/>
	</parameter>
	<parameter name="monto_contrato">
		<type name="integer"/>
	</parameter>
	<parameter name="re">
		<type name="numeric"/>
	</parameter>
	<parameter name="ra">
		<type name="numeric"/>
	</parameter>
	<parameter name="re_iva10">
		<type name="numeric"/>
	</parameter>
	<parameter name="ra_iva10">
		<type name="numeric"/>
	</parameter>
	<parameter name="ivasueldo">
		<type name="numeric"/>
	</parameter>
	<parameter name="retencion_re">
		<type name="numeric"/>
	</parameter>
	<parameter name="retencion_ra">
		<type name="numeric"/>
	</parameter>
	<parameter name="descripcion_funcion">
		<type name="character varying"/>
	</parameter>
	<parameter name="funcion">
		<type name="text"/>
	</parameter>
	</return-type>
	<parameter name="in_id_mes" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_gestion" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_id_funcionario" in="true">
		<type name="integer"/>
	</parameter>
	<definition><![CDATA[
BEGIN
RETURN QUERY 
	SELECT
	d.nombre,
	b.tipo_funcionario,
	b.id_funcionario,
	c.ape_nom_funcionario,
	c.cedula_funcionario,
	case when j.porcentaje_iva isnull then 0 else j.porcentaje_iva end as porcentajeIva,
	case when j.retencion_iva isnull then 0 else j.retencion_iva end as retencionIva,
	e.descripcion_tipo_disposicion,
	f.descripcion_motivo,
	g.descripcion_tipo,
	a.nro_disposicion,
	a.nro_contrato,
	a.fecha_desde,
	a.fecha_hasta,
	a.activo,
	a.monto_contrato,
	((a.monto_contrato * 1.5)/176) * 32 as re,
	((a.monto_contrato * 1.5)/176) * 20 as ra,
	((a.monto_contrato * 1.5)/176) * 32/((100+j.porcentaje_iva)/10) as re_iva10,
	((a.monto_contrato * 1.5)/176) * 20/((100+j.porcentaje_iva)/10) as ra_iva10,
	(a.monto_contrato / 11.0) as ivaSueldo,
	--(ivaSueldo / 0.3 )as retencion,
	case when ((j.porcentaje_iva isnull) or (j.porcentaje_iva = 0)) then 0
	else
	(((a.monto_contrato * 1.5)/176) * 32/((100+j.porcentaje_iva)/10) ) *(case when j.retencion_iva/100.0 = 0 then 1 else j.retencion_iva/100.0 end) 
	end as retencion_re,
	case when ((j.porcentaje_iva isnull) or (j.porcentaje_iva = 0)) then 0
	else
	(((a.monto_contrato * 1.5)/176) * 20/((100+j.porcentaje_iva)/10) ) *(case when j.retencion_iva/100.0 = 0 then 1 else j.retencion_iva/100.0 end) 
	end as retencion_ra,
	h.descripcion_funcion,
	a.funcion
FROM legajos.funcionarios_contratados a
left join legajos.datos_administrativos b on (a.id_dato_administrativo = b.id_dato_administrativo)
left join legajos.funcionarios c on (b.id_funcionario = c.id_funcionario)
left join legajos.funcionarios_iva i on (b.id_funcionario = i.id_funcionario)
left join legajos.iva j on (i.id_iva = j.id_iva)
left join legajos.oficinas d on (a.id_oficina = d.id_oficina)
left join legajos.tipo_disposiciones e on (a.id_tipo_disposicion = e.id_tipo_disposicion)
left join legajos.motivo_baja f on (a.id_motivo_baja = f.id_motivo_baja)
left join legajos.tipo_contrato g on (a.id_tipo_contrato = g.id_tipo_contrato)
left join legajos.funciones h on (a.id_funcion = h.id_funcion)
where
	a.activo = 'true'
	and b.id_funcionario = in_id_funcionario;
END;
]]></definition>
</function>

<function name="planilla_salarios_actualiza_importes_totales"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="trigger"/>
	</return-type>
	<definition><![CDATA[
DECLARE
	presupuestado numeric(12,2) := 0;
	devengado numeric(12,2) := 0;	
	multa numeric(12,2) := 0;
	total_iva numeric(12,2) := 0;
	nombre_usuario text := user::text;
BEGIN
IF (TG_OP = 'DELETE') THEN
	
	Select 
		sum(monto_presupuestado), 
		sum(monto_devengado), 		
		sum(monto_multa),
		sum(monto_iva) 
		INTO
		presupuestado,
		devengado,		
		multa,
		total_iva
	from salarios_contratados.planillas_salarios_detalles
	where id_planilla_salario = OLD.id_planilla_salario;

	IF presupuestado IS NULL THEN 
		presupuestado :=0;
	END IF;
	IF devengado IS NULL THEN 
		devengado :=0;
	END IF;
	IF multa IS NULL THEN 
		multa :=0;
	END IF;
	IF total_iva IS NULL THEN 
		total_iva :=0;
	END IF;
	UPDATE salarios_contratados.planillas_salarios  SET 
						total_presupuestado = presupuestado,
						total_devengado = devengado, 						
						total_multa = multa, 
						total_monto_iva = total_iva,
						usu_modi = nombre_usuario, 
						fec_modi = now(),
						ip_modi = inet_client_addr()::varchar(30)
	WHERE id_planilla_salario = OLD.id_planilla_salario;
	RETURN OLD;

ELSIF (TG_OP = 'UPDATE') THEN
	Select 
		sum(monto_presupuestado), 
		sum(monto_devengado), 		
		sum(monto_multa),
		sum(monto_iva)
		INTO
		presupuestado,
		devengado,		
		multa,
		total_iva

	from salarios_contratados.planillas_salarios_detalles
	where id_planilla_salario = NEW.id_planilla_salario;

	IF presupuestado IS NULL THEN 
		presupuestado :=0;
	END IF;
	IF devengado IS NULL THEN 
		devengado :=0;
	END IF;
	IF multa IS NULL THEN 
		multa :=0;
	END IF;
        IF total_iva IS NULL THEN 
		total_iva :=0;
	END IF;
	UPDATE salarios_contratados.planillas_salarios  SET 
						total_presupuestado = presupuestado,
						total_devengado = devengado, 
						total_multa = multa, 
						total_monto_iva = total_iva,
						usu_modi = nombre_usuario, 
						fec_modi = now(),
						ip_modi = inet_client_addr()::varchar(30)
	WHERE id_planilla_salario = NEW.id_planilla_salario;
	RETURN NEW;
ELSIF (TG_OP = 'INSERT') THEN
	Select 
		sum(monto_presupuestado), 
		sum(monto_devengado), 		
		sum(monto_multa),
		sum(monto_iva) 
		INTO
		presupuestado,
		devengado,		
		multa,
		total_iva

	from salarios_contratados.planillas_salarios_detalles
	where id_planilla_salario = NEW.id_planilla_salario;

	IF presupuestado IS NULL THEN 
		presupuestado :=0;
	END IF;
	IF devengado IS NULL THEN 
		devengado :=0;
	END IF;
	IF multa IS NULL THEN 
		multa :=0;
	END IF;
        IF total_iva IS NULL THEN 
		total_iva :=0;
	END IF;
	UPDATE salarios_contratados.planillas_salarios  SET 
						total_presupuestado = presupuestado,
						total_devengado = devengado, 						
						total_multa = multa, 
						total_monto_iva = total_iva,
						usu_modi = nombre_usuario, 
						fec_modi = now(),
						ip_modi = inet_client_addr()::varchar(30)
	WHERE id_planilla_salario = NEW.id_planilla_salario;
	RETURN NEW;
END IF;
END;]]></definition>
</function>

<function name="planillas_aguinaldos_actualiza_montos"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="trigger"/>
	</return-type>
	<definition><![CDATA[
DECLARE
v_monto numeric(20,2) := 0;
nombre_usuario     text := user::text;
BEGIN
IF (TG_OP = 'DELETE') THEN
	v_monto := sum(monto) from salarios_contratados.planillas_aguinaldos_detalles where id_planilla_aguinaldo = OLD.id_planilla_aguinaldo;
	IF v_monto IS NULL THEN 
		v_monto :=0;
	END IF;

	UPDATE salarios_contratados.planillas_aguinaldos SET monto_total = v_monto,
	usu_modi = nombre_usuario, fec_modi = now() WHERE id_planilla_aguinaldo = OLD.id_planilla_aguinaldo;
	RETURN OLD;
ELSIF (TG_OP = 'UPDATE') THEN
        v_monto := sum(monto) from salarios_contratados.planillas_aguinaldos_detalles where id_planilla_aguinaldo = NEW.id_planilla_aguinaldo;
	IF v_monto IS NULL THEN 
		v_monto :=0;
	END IF;

	UPDATE salarios_contratados.planillas_aguinaldos SET monto_total = v_monto,
	usu_modi = nombre_usuario, fec_modi = now() WHERE id_planilla_aguinaldo = NEW.id_planilla_aguinaldo;
	RETURN NEW;
ELSIF (TG_OP = 'INSERT') THEN
	v_monto := sum(monto) from salarios_contratados.planillas_aguinaldos_detalles where id_planilla_aguinaldo = NEW.id_planilla_aguinaldo;
	IF v_monto IS NULL THEN 
		v_monto :=0;
	END IF;

	UPDATE salarios_contratados.planillas_aguinaldos SET monto_total = v_monto,
	usu_modi = nombre_usuario, fec_modi = now() WHERE id_planilla_aguinaldo = NEW.id_planilla_aguinaldo;
	RETURN NEW;
END IF;
END;]]></definition>
</function>

<function name="planillas_aguinaldos_detalles_actualiza_importes_totales"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="trigger"/>
	</return-type>
	<definition><![CDATA[
DECLARE
	monto_total_agui numeric(20,2) := 0;
	nombre_usuario text := user::text;
BEGIN
IF (TG_OP = 'DELETE') THEN
	
	Select 
		sum(monto)
		INTO
		monto_total_agui
	from salarios_contratados.planillas_aguinaldos_detalles
	where id_planilla_aguinaldo = OLD.id_planilla_aguinaldo;

	IF monto_total_agui IS NULL THEN 
		monto_total_agui :=0;
	END IF;		
	UPDATE salarios_contratados.planillas_aguinaldos SET 
						monto_total = monto_total_agui,						
						usu_modi = nombre_usuario, 
						fec_modi = now(),
						ip_modi = inet_client_addr()::varchar(30)
	WHERE id_planilla_aguinaldo = OLD.id_planilla_aguinaldo;
	RETURN OLD;

ELSIF (TG_OP = 'UPDATE') THEN
	Select 
		sum(monto)		
		INTO
		monto_total_agui		
	from salarios_contratados.planillas_aguinaldos_detalles
	where id_planilla_aguinaldo = NEW.id_planilla_aguinaldo;

	IF monto_total_agui IS NULL THEN 
		monto_total_agui :=0;
	END IF;		
	UPDATE salarios_contratados.planillas_aguinaldos SET 
						monto_total = monto_total_agui,						
						usu_modi = nombre_usuario, 
						fec_modi = now(),
						ip_modi = inet_client_addr()::varchar(30)
	WHERE id_planilla_aguinaldo = NEW.id_planilla_aguinaldo;
	RETURN NEW;
ELSIF (TG_OP = 'INSERT') THEN
	Select 
		sum(monto)
		INTO
		monto_total_agui
	from salarios_contratados.planillas_aguinaldos_detalles
	where id_planilla_aguinaldo = NEW.id_planilla_aguinaldo;

	IF monto_total_agui IS NULL THEN 
		monto_total_agui :=0;
	END IF;	
	UPDATE salarios_contratados.planillas_aguinaldos SET 
						monto_total = monto_total_agui,						
						usu_modi = nombre_usuario, 
						fec_modi = now(),
						ip_modi = inet_client_addr()::varchar(30)
	WHERE id_planilla_aguinaldo = NEW.id_planilla_aguinaldo;
	RETURN NEW;
END IF;
END;]]></definition>
</function>

<function name="planillas_bonificaciones_detalles_actualiza_importes_totales"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="trigger"/>
	</return-type>
	<definition><![CDATA[
DECLARE
	monto_total1 numeric(12,2) := 0;
	monto_iva1 numeric(12,2) := 0;
	nombre_usuario text := user::text;
BEGIN
IF (TG_OP = 'DELETE') THEN
	
	SELECT 
		sum(importe), 
		sum(importe_iva)		
		INTO
		monto_total1,
		monto_iva1
	FROM salarios_contratados.planillas_bonificaciones_detalles 
	WHERE id_planilla_bonificacion = OLD.id_planilla_bonificacion;

	IF monto_total1 IS NULL THEN 
		monto_total1 :=0;	
	END IF;	
	IF monto_iva1 IS NULL THEN 
		monto_iva1 :=0;
	END IF;
	UPDATE salarios_contratados.planillas_bonificaciones  SET 
						monto_total = monto_total1,
						monto_iva = monto_iva1,
						usu_modi = nombre_usuario, 
						fec_modi = now(),
						ip_modi = inet_client_addr()::varchar(30)
	WHERE id_planilla_bonificacion = OLD.id_planilla_bonificacion;
	RETURN OLD;

ELSIF (TG_OP = 'UPDATE') THEN
	SELECT 
		sum(importe), 
		sum(importe_iva)
		INTO
		monto_total1,
		monto_iva1
	FROM salarios_contratados.planillas_bonificaciones_detalles 
	WHERE id_planilla_bonificacion = NEW.id_planilla_bonificacion;

	IF monto_total1 IS NULL THEN 
		monto_total1 :=0;	
	END IF;	
	IF monto_iva1 IS NULL THEN 
		monto_iva1 :=0;
	END IF;
	UPDATE salarios_contratados.planillas_bonificaciones  SET 
						monto_total = monto_total1,
						monto_iva = monto_iva1,
						usu_modi = nombre_usuario, 
						fec_modi = now(),
						ip_modi = inet_client_addr()::varchar(30)
	WHERE id_planilla_bonificacion = NEW.id_planilla_bonificacion;
	RETURN NEW;
ELSIF (TG_OP = 'INSERT') THEN
	SELECT 
		sum(importe), 
		sum(importe_iva)
		INTO
		monto_total1,
		monto_iva1
	FROM salarios_contratados.planillas_bonificaciones_detalles 
	WHERE id_planilla_bonificacion = NEW.id_planilla_bonificacion;

	IF monto_total1 IS NULL THEN 
		monto_total1 :=0;	
	END IF;	
	IF monto_iva1 IS NULL THEN 
		monto_iva1 :=0;
	END IF;
	UPDATE salarios_contratados.planillas_bonificaciones  SET 
						monto_total = monto_total1,
						monto_iva = monto_iva1,
						usu_modi = nombre_usuario, 
						fec_modi = now(),
						ip_modi = inet_client_addr()::varchar(30)
	WHERE id_planilla_bonificacion = NEW.id_planilla_bonificacion;
	RETURN NEW;
END IF;
END;]]></definition>
</function>

<function name="planillas_gratificaciones_ocasionales_actualiza_importes_totale"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="trigger"/>
	</return-type>
	<definition><![CDATA[
DECLARE
	monto_total1 numeric(12,2) := 0;
	monto_iva1 numeric(12,2) := 0;
	nombre_usuario text := user::text;
BEGIN
IF (TG_OP = 'DELETE') THEN
	
	SELECT 
		sum(importe_gratificacion), 
		sum(importe_iva)		
		INTO
		monto_total1,
		monto_iva1
	FROM salarios_contratados.planillas_gratificaciones_ocasionales_detalles 
	WHERE id_planilla_gratificacion_ocasional = OLD.id_planilla_gratificacion_ocasional;

	IF monto_total1 IS NULL THEN 
		monto_total1 :=0;	
	END IF;	
	IF monto_iva1 IS NULL THEN 
		monto_iva1 :=0;
	END IF;
	UPDATE salarios_contratados.planillas_gratificaciones_ocasionales  SET 
						monto_total = monto_total1,
						monto_iva = monto_iva1,
						usu_modi = nombre_usuario, 
						fec_modi = now(),
						ip_modi = inet_client_addr()::varchar(30)
	WHERE id_planilla_gratificacion_ocasional = OLD.id_planilla_gratificacion_ocasional;
	RETURN OLD;

ELSIF (TG_OP = 'UPDATE') THEN
	SELECT 
		sum(importe_gratificacion), 
		sum(importe_iva)
		INTO
		monto_total1,
		monto_iva1
	FROM salarios_contratados.planillas_gratificaciones_ocasionales_detalles 
	WHERE id_planilla_gratificacion_ocasional = NEW.id_planilla_gratificacion_ocasional;

	IF monto_total1 IS NULL THEN 
		monto_total1 :=0;	
	END IF;	
	IF monto_iva1 IS NULL THEN 
		monto_iva1 :=0;
	END IF;
	UPDATE salarios_contratados.planillas_gratificaciones_ocasionales  SET 
						monto_total = monto_total1,
						monto_iva = monto_iva1,
						usu_modi = nombre_usuario, 
						fec_modi = now(),
						ip_modi = inet_client_addr()::varchar(30)
	WHERE id_planilla_gratificacion_ocasional = NEW.id_planilla_gratificacion_ocasional;
	RETURN NEW;
ELSIF (TG_OP = 'INSERT') THEN
	SELECT 
		sum(importe_gratificacion), 
		sum(importe_iva)
		INTO
		monto_total1,
		monto_iva1
	FROM salarios_contratados.planillas_gratificaciones_ocasionales_detalles 
	WHERE id_planilla_gratificacion_ocasional = NEW.id_planilla_gratificacion_ocasional;

	IF monto_total1 IS NULL THEN 
		monto_total1 :=0;	
	END IF;	
	IF monto_iva1 IS NULL THEN 
		monto_iva1 :=0;
	END IF;
	UPDATE salarios_contratados.planillas_gratificaciones_ocasionales  SET 
						monto_total = monto_total1,
						monto_iva = monto_iva1,
						usu_modi = nombre_usuario, 
						fec_modi = now(),
						ip_modi = inet_client_addr()::varchar(30)
	WHERE id_planilla_gratificacion_ocasional = NEW.id_planilla_gratificacion_ocasional;
	RETURN NEW;
END IF;
END;]]></definition>
</function>

<function name="planillas_ra_actualiza_importes_totales"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="trigger"/>
	</return-type>
	<definition><![CDATA[
DECLARE
	total_ra numeric(12,2) := 0;
	total_iva numeric(12,2) := 0;
	nombre_usuario text := user::text;
BEGIN
IF (TG_OP = 'DELETE') THEN
	
	Select 
		sum(monto), 
		sum(monto_iva) 
		INTO
		total_ra,
		total_iva
	from salarios_contratados.planillas_ra_detalles
	where id_planilla_ra = OLD.id_planilla_ra;

	IF total_ra IS NULL THEN 
		total_ra :=0;
	END IF;	
	IF total_iva IS NULL THEN 
		total_iva :=0;
	END IF;
	UPDATE salarios_contratados.planillas_ra SET 
						monto_total_ra = total_ra,
						monto_total_iva = total_iva,
						usu_modi = nombre_usuario, 
						fec_modi = now(),
						ip_modi = inet_client_addr()::varchar(30)
	WHERE id_planilla_ra = OLD.id_planilla_ra;
	RETURN OLD;

ELSIF (TG_OP = 'UPDATE') THEN
	Select 
		sum(monto), 
		sum(monto_iva) 
		INTO
		total_ra,
		total_iva
	from salarios_contratados.planillas_ra_detalles
	where id_planilla_ra = NEW.id_planilla_ra;

	IF total_ra IS NULL THEN 
		total_ra :=0;
	END IF;	
	IF total_iva IS NULL THEN 
		total_iva :=0;
	END IF;
	UPDATE salarios_contratados.planillas_ra SET 
						monto_total_ra = total_ra,
						monto_total_iva = total_iva,
						usu_modi = nombre_usuario, 
						fec_modi = now(),
						ip_modi = inet_client_addr()::varchar(30)
	WHERE id_planilla_ra = NEW.id_planilla_ra;
	RETURN NEW;
ELSIF (TG_OP = 'INSERT') THEN
	Select 
		sum(monto), 
		sum(monto_iva) 
		INTO
		total_ra,
		total_iva
	from salarios_contratados.planillas_ra_detalles
	where id_planilla_ra = NEW.id_planilla_ra;

	IF total_ra IS NULL THEN 
		total_ra :=0;
	END IF;	
	IF total_iva IS NULL THEN 
		total_iva :=0;
	END IF;
	UPDATE salarios_contratados.planillas_ra SET 
						monto_total_ra = total_ra,
						monto_total_iva = total_iva,
						usu_modi = nombre_usuario, 
						fec_modi = now(),
						ip_modi = inet_client_addr()::varchar(30)
	WHERE id_planilla_ra = NEW.id_planilla_ra;
	RETURN NEW;
END IF;
END;]]></definition>
</function>

<function name="planillas_ra_detalles_actualiza_importes_totales"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="trigger"/>
	</return-type>
	<definition><![CDATA[
DECLARE
	total_ra numeric(12,2) := 0;
	total_iva numeric(12,2) := 0;
	nombre_usuario text := user::text;
BEGIN
IF (TG_OP = 'DELETE') THEN
	
	Select 
		sum(monto), 
		sum(monto_iva) 
		INTO
		total_ra,
		total_iva
	from salarios_contratados.planillas_ra_detalles
	where id_planilla_ra = OLD.id_planilla_ra;

	IF total_ra IS NULL THEN 
		total_ra :=0;
	END IF;	
	IF total_iva IS NULL THEN 
		total_iva :=0;
	END IF;
	UPDATE salarios_contratados.planillas_ra SET 
						monto_total_ra = total_ra,
						monto_total_iva = total_iva,
						usu_modi = nombre_usuario, 
						fec_modi = now(),
						ip_modi = inet_client_addr()::varchar(30)
	WHERE id_planilla_ra = OLD.id_planilla_ra;
	RETURN OLD;

ELSIF (TG_OP = 'UPDATE') THEN
	Select 
		sum(monto), 
		sum(monto_iva) 
		INTO
		total_ra,
		total_iva
	from salarios_contratados.planillas_ra_detalles
	where id_planilla_ra = NEW.id_planilla_ra;

	IF total_ra IS NULL THEN 
		total_ra :=0;
	END IF;	
	IF total_iva IS NULL THEN 
		total_iva :=0;
	END IF;
	UPDATE salarios_contratados.planillas_ra SET 
						monto_total_ra = total_ra,
						monto_total_iva = total_iva,
						usu_modi = nombre_usuario, 
						fec_modi = now(),
						ip_modi = inet_client_addr()::varchar(30)
	WHERE id_planilla_ra = NEW.id_planilla_ra;
	RETURN NEW;
ELSIF (TG_OP = 'INSERT') THEN
	Select 
		sum(monto), 
		sum(monto_iva) 
		INTO
		total_ra,
		total_iva
	from salarios_contratados.planillas_ra_detalles
	where id_planilla_ra = NEW.id_planilla_ra;

	IF total_ra IS NULL THEN 
		total_ra :=0;
	END IF;	
	IF total_iva IS NULL THEN 
		total_iva :=0;
	END IF;
	UPDATE salarios_contratados.planillas_ra SET 
						monto_total_ra = total_ra,
						monto_total_iva = total_iva,
						usu_modi = nombre_usuario, 
						fec_modi = now(),
						ip_modi = inet_client_addr()::varchar(30)
	WHERE id_planilla_ra = NEW.id_planilla_ra;
	RETURN NEW;
END IF;
END;]]></definition>
</function>

<function name="planillas_re_detalles_actualiza_importes_totales"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="trigger"/>
	</return-type>
	<definition><![CDATA[
DECLARE
	total_re numeric(12,2) := 0;
	total_iva numeric(12,2) := 0;
	nombre_usuario text := user::text;
BEGIN
IF (TG_OP = 'DELETE') THEN
	
	Select 
		sum(monto), 
		sum(monto_iva) 
		INTO
		total_re,
		total_iva
	from salarios_contratados.planillas_re_detalles
	where id_planilla_re = OLD.id_planilla_re;

	IF total_re IS NULL THEN 
		total_re :=0;
	END IF;	
	IF total_iva IS NULL THEN 
		total_iva :=0;
	END IF;
	UPDATE salarios_contratados.planillas_re SET 
						monto_total_re = total_re,
						monto_total_iva = total_iva,
						usu_modi = nombre_usuario, 
						fec_modi = now(),
						ip_modi = inet_client_addr()::varchar(30)
	WHERE id_planilla_re = OLD.id_planilla_re;
	RETURN OLD;

ELSIF (TG_OP = 'UPDATE') THEN
	Select 
		sum(monto), 
		sum(monto_iva) 
		INTO
		total_re,
		total_iva
	from salarios_contratados.planillas_re_detalles
	where id_planilla_re = NEW.id_planilla_re;

	IF total_re IS NULL THEN 
		total_re :=0;
	END IF;	
	IF total_iva IS NULL THEN 
		total_iva :=0;
	END IF;
	UPDATE salarios_contratados.planillas_re SET 
						monto_total_re = total_re,
						monto_total_iva = total_iva,
						usu_modi = nombre_usuario, 
						fec_modi = now(),
						ip_modi = inet_client_addr()::varchar(30)
	WHERE id_planilla_re = NEW.id_planilla_re;
	RETURN NEW;
ELSIF (TG_OP = 'INSERT') THEN
	Select 
		sum(monto), 
		sum(monto_iva) 
		INTO
		total_re,
		total_iva
	from salarios_contratados.planillas_re_detalles
	where id_planilla_re = NEW.id_planilla_re;

	IF total_re IS NULL THEN 
		total_re :=0;
	END IF;	
	IF total_iva IS NULL THEN 
		total_iva :=0;
	END IF;
	UPDATE salarios_contratados.planillas_re SET 
						monto_total_re = total_re,
						monto_total_iva = total_iva,
						usu_modi = nombre_usuario, 
						fec_modi = now(),
						ip_modi = inet_client_addr()::varchar(30)
	WHERE id_planilla_re = NEW.id_planilla_re;
	RETURN NEW;
END IF;
END;]]></definition>
</function>

<function name="planillas_salarios_contratados_detalles_registros"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="1000">
	<schema name="salarios_contratados"/>
	<role name="dalcaraz"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<parameter name="id_administracion">
		<type name="integer"/>
	</parameter>
	<parameter name="id_funcionario_contrato">
		<type name="integer"/>
	</parameter>
	<parameter name="id_tipo_contrato">
		<type name="integer"/>
	</parameter>
	<parameter name="objeto_gasto">
		<type name="integer"/>
	</parameter>
	<parameter name="id_oficina">
		<type name="integer"/>
	</parameter>
	<parameter name="id_funcionario">
		<type name="integer"/>
	</parameter>
	<parameter name="monto_contrato">
		<type name="numeric"/>
	</parameter>
	<parameter name="porcentaje_iva">
		<type name="integer"/>
	</parameter>
	<parameter name="porcentaje_retencion">
		<type name="integer"/>
	</parameter>
	<parameter name="gestion">
		<type name="integer"/>
	</parameter>
	<parameter name="estado">
		<type name="boolean"/>
	</parameter>
	<parameter name="cedula">
		<type name="character varying"/>
	</parameter>
	<parameter name="funcionario">
		<type name="character varying"/>
	</parameter>
	<parameter name="nivel1">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel2">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel3">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel4">
		<type name="integer"/>
	</parameter>
	<parameter name="nivel5">
		<type name="integer"/>
	</parameter>
	<parameter name="oficina">
		<type name="character varying"/>
	</parameter>
	<parameter name="programa">
		<type name="text"/>
	</parameter>
	<parameter name="dias_trabajados">
		<type name="integer"/>
	</parameter>
	<parameter name="cantidad_dias">
		<type name="numeric"/>
	</parameter>
	<parameter name="monto_devengado">
		<type name="numeric"/>
	</parameter>
	<parameter name="monto_retencion_iva">
		<type name="numeric"/>
	</parameter>
	<parameter name="monto_multa">
		<type name="numeric"/>
	</parameter>
	</return-type>
	<parameter name="in_id_mes" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_gestion" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_id_administracion" in="true">
		<type name="integer"/>
	</parameter>
	<definition><![CDATA[
BEGIN

RETURN QUERY 
SELECT
x.*,
CASE WHEN (((x.monto_contrato/30)*x.cantidad_dias)::int)::numeric(15,2) > (x.monto_devengado - x.monto_retencion_iva) then (x.monto_devengado - x.monto_retencion_iva) else
(((x.monto_contrato/30)*x.cantidad_dias)::int)::numeric(15,2) end as monto_multa
FROM
(SELECT a.*, 
salarios_contratados.funcion_obtener_retencion(a.monto_devengado,a.porcentaje_iva,a.porcentaje_retencion) as monto_retencion_iva
FROM
(SELECT
datos.*,
(((datos.monto_contrato/30)*datos.dias_trabajados)::int)::numeric(15,2) as monto_devengado
--(((datos.monto_contrato/30)*datos.cantidad_dias)::int)::numeric(15,2) as monto_multa
FROM 
(SELECT
datos.*,
CASE WHEN sp.dias_trabajados IS NULL THEN 30 ELSE sp.dias_trabajados END AS dias_trabajados,
CASE WHEN cd.cantidad_dias IS NULL THEN '0'::numeric ELSE cd.cantidad_dias::numeric END AS cantidad_dias
FROM
	(SELECT
		fc.id_administracion,
		fc.id_funcionario_contrato,
		fc.id_tipo_contrato,
		fc.objeto_gasto,
		fc.id_oficina,
		fc.id_funcionario,
		fc.monto_contrato,
		fc.porcentaje_iva,
		fc.porcentaje_retencion,
		fc.gestion,
		fc.estado,
		f.cedula_funcionario AS cedula, 
		f.ape_nom_funcionario AS funcionario,
		o.nivel1,o.nivel2,o.nivel3,o.nivel4,o.nivel5,o.nombre as oficina,
		descripcion_estructura_presupuestaria as programa
	 FROM salarios_contratados.funcionarios_contratos fc
	 INNER JOIN legajos.funcionarios f on (fc.id_funcionario = f.id_funcionario)
	 INNER JOIN legajos.oficinas_con_descripciones o ON (o.id_oficina = fc.id_oficina)
	 INNER JOIN ( 	SELECT
				fc.id_funcionario,
				fc.id_administracion,
				fc.gestion,
				max(fc.id_funcionario_contrato) as id_funcionario_contrato
			FROM salarios_contratados.funcionarios_contratos fc
			WHERE
			fc.id_administracion = in_id_administracion AND
			fc.gestion = in_gestion AND
			in_id_mes between extract(month from fc.desde) and extract(month from fc.hasta)
		GROUP BY fc.id_funcionario,fc.id_administracion,fc.gestion) x ON (x.id_funcionario_contrato = fc.id_funcionario_contrato)
	 ) datos
LEFT JOIN (SELECT spd.id_funcionario, spd.dias_trabajados
	   FROM salarios_contratados.situacion_personal sp
	   INNER JOIN salarios_contratados.situacion_personal_detalles spd ON (spd.id_situacion_personal = sp.id_situacion_personal)
	   WHERE sp.gestion = in_gestion
	   AND sp.id_mes = in_id_mes
	   AND sp.id_administracion = in_id_administracion
) sp ON (sp.id_funcionario = datos.id_funcionario)

LEFT JOIN (SELECT msd.id_funcionario, msd.cantidad_dias
	   FROM salarios_contratados.multas_solicitadas_detalles msd
	   INNER JOIN salarios_contratados.multas_solicitadas ms ON (ms.id_multa_solicitada = msd.id_multa_solicitada)
	   WHERE ms.gestion = in_gestion
	   AND ms.id_mes = in_id_mes
	   AND ms.id_administracion = in_id_administracion
) cd ON (cd.id_funcionario = datos.id_funcionario)) datos

WHERE datos.gestion = in_gestion
AND datos.id_administracion = in_id_administracion
AND datos.estado is true) a
) x

;

END;
]]></definition>
</function>

<function name="planillas_serenos_detalles_actualiza_importes_totales"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="trigger"/>
	</return-type>
	<definition><![CDATA[
DECLARE
	monto_total1 numeric(12,2) := 0;
	monto_iva1 numeric(12,2) := 0;
	nombre_usuario text := user::text;
BEGIN
IF (TG_OP = 'DELETE') THEN
	
	SELECT 
		sum(importe), 
		sum(importe_iva)		
		INTO
		monto_total1,
		monto_iva1
	FROM salarios_contratados.planillas_serenos_detalles 
	WHERE id_planilla_sereno = OLD.id_planilla_sereno;

	IF monto_total1 IS NULL THEN 
		monto_total1 :=0;	
	END IF;	
	IF monto_iva1 IS NULL THEN 
		monto_iva1 :=0;
	END IF;
	UPDATE salarios_contratados.planillas_serenos  SET 
						monto_total = monto_total1,
						monto_iva = monto_iva1,
						usu_modi = nombre_usuario, 
						fec_modi = now(),
						ip_modi = inet_client_addr()::varchar(30)
	WHERE id_planilla_sereno = OLD.id_planilla_sereno;
	RETURN OLD;

ELSIF (TG_OP = 'UPDATE') THEN
	SELECT 
		sum(importe), 
		sum(importe_iva)
		INTO
		monto_total1,
		monto_iva1
	FROM salarios_contratados.planillas_serenos_detalles 
	WHERE id_planilla_sereno = NEW.id_planilla_sereno;

	IF monto_total1 IS NULL THEN 
		monto_total1 :=0;	
	END IF;	
	IF monto_iva1 IS NULL THEN 
		monto_iva1 :=0;
	END IF;
	UPDATE salarios_contratados.planillas_serenos  SET 
						monto_total = monto_total1,
						monto_iva = monto_iva1,
						usu_modi = nombre_usuario, 
						fec_modi = now(),
						ip_modi = inet_client_addr()::varchar(30)
	WHERE id_planilla_sereno = NEW.id_planilla_sereno;
	RETURN NEW;
ELSIF (TG_OP = 'INSERT') THEN
	SELECT 
		sum(importe), 
		sum(importe_iva)
		INTO
		monto_total1,
		monto_iva1
	FROM salarios_contratados.planillas_serenos_detalles 
	WHERE id_planilla_sereno = NEW.id_planilla_sereno;

	IF monto_total1 IS NULL THEN 
		monto_total1 :=0;	
	END IF;	
	IF monto_iva1 IS NULL THEN 
		monto_iva1 :=0;
	END IF;
	UPDATE salarios_contratados.planillas_serenos  SET 
						monto_total = monto_total1,
						monto_iva = monto_iva1,
						usu_modi = nombre_usuario, 
						fec_modi = now(),
						ip_modi = inet_client_addr()::varchar(30)
	WHERE id_planilla_sereno = NEW.id_planilla_sereno;
	RETURN NEW;
END IF;
END;]]></definition>
</function>

<function name="planillas_subsidios_detalles_actualiza_importes_totales"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="trigger"/>
	</return-type>
	<definition><![CDATA[
DECLARE
	monto_total1 numeric(12,2) := 0;
	monto_iva1 numeric(12,2) := 0;
	nombre_usuario text := user::text;
BEGIN
IF (TG_OP = 'DELETE') THEN
	
	SELECT 
		sum(importe_subsidio), 
		sum(importe_iva)		
		INTO
		monto_total1,
		monto_iva1
	FROM salarios_contratados.planillas_subsidios_detalles 
	WHERE id_planilla_subsidio = OLD.id_planilla_subsidio;

	IF monto_total1 IS NULL THEN 
		monto_total1 :=0;	
	END IF;	
	IF monto_iva1 IS NULL THEN 
		monto_iva1 :=0;
	END IF;
	UPDATE salarios_contratados.planillas_subsidios  SET 
						monto_total = monto_total1,
						monto_iva = monto_iva1,
						usu_modi = nombre_usuario, 
						fec_modi = now(),
						ip_modi = inet_client_addr()::varchar(30)
	WHERE id_planilla_subsidio = OLD.id_planilla_subsidio;
	RETURN OLD;

ELSIF (TG_OP = 'UPDATE') THEN
	SELECT 
		sum(importe_subsidio), 
		sum(importe_iva)
		INTO
		monto_total1,
		monto_iva1
	FROM salarios_contratados.planillas_subsidios_detalles 
	WHERE id_planilla_subsidio = NEW.id_planilla_subsidio;

	IF monto_total1 IS NULL THEN 
		monto_total1 :=0;	
	END IF;	
	IF monto_iva1 IS NULL THEN 
		monto_iva1 :=0;
	END IF;
	UPDATE salarios_contratados.planillas_subsidios  SET 
						monto_total = monto_total1,
						monto_iva = monto_iva1,
						usu_modi = nombre_usuario, 
						fec_modi = now(),
						ip_modi = inet_client_addr()::varchar(30)
	WHERE id_planilla_subsidio = NEW.id_planilla_subsidio;
	RETURN NEW;
ELSIF (TG_OP = 'INSERT') THEN
	SELECT 
		sum(importe_subsidio), 
		sum(importe_iva)
		INTO
		monto_total1,
		monto_iva1
	FROM salarios_contratados.planillas_subsidios_detalles 
	WHERE id_planilla_subsidio = NEW.id_planilla_subsidio;

	IF monto_total1 IS NULL THEN 
		monto_total1 :=0;	
	END IF;	
	IF monto_iva1 IS NULL THEN 
		monto_iva1 :=0;
	END IF;
	UPDATE salarios_contratados.planillas_subsidios  SET 
						monto_total = monto_total1,
						monto_iva = monto_iva1,
						usu_modi = nombre_usuario, 
						fec_modi = now(),
						ip_modi = inet_client_addr()::varchar(30)
	WHERE id_planilla_subsidio = NEW.id_planilla_subsidio;
	RETURN NEW;
END IF;
END;]]></definition>
</function>

<function name="reporte_resumen_desc_varios_no_aplicados"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="1000">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<parameter name="id_administracion">
		<type name="integer"/>
	</parameter>
	<parameter name="gestion">
		<type name="numeric"/>
	</parameter>
	<parameter name="id_mes">
		<type name="integer"/>
	</parameter>
	<parameter name="id_tipo_descuento">
		<type name="integer"/>
	</parameter>
	<parameter name="remitido">
		<type name="numeric"/>
	</parameter>
	<parameter name="aplicado">
		<type name="numeric"/>
	</parameter>
	<parameter name="no_descontado">
		<type name="numeric"/>
	</parameter>
	</return-type>
	<parameter name="in_id_administracion" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_gestion" in="true">
		<type name="numeric"/>
	</parameter>
	<parameter name="in_id_mes" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_id_tipo_descuento" in="true">
		<type name="integer"/>
	</parameter>
	<definition><![CDATA[
BEGIN
/*
Fecha   : 2012-09-14
Autor   : Lic. Guillermo Galeano Fernández
Objetivo: Obtener los totales para el resumen final 
          del reporte de importes no descontados.-

*/

id_administracion := IN_ID_ADMINISTRACION;
gestion := IN_GESTION;
id_mes := IN_ID_MES;
id_tipo_descuento := IN_ID_TIPO_DESCUENTO;


-- Sumatoria final:

-- total aplicado
Select 
	sum(a.monto_descuento) -- as aplicado
	INTO aplicado
FROM salarios_contratados.planillas_descuentos_detalles a
	LEFT JOIN salarios_contratados.planillas_descuentos b
		ON (a.id_planilla_descuento=b.id_planilla_descuento)
	LEFT JOIN salarios_contratados.descuentos_aso c
		ON (a.id_descuento_aso=c.id_descuento_aso)

WHERE b.id_administracion = IN_ID_ADMINISTRACION
AND b.gestion = IN_GESTION
AND b.id_mes = IN_ID_MES
AND c.id_tipo_descuento = IN_ID_TIPO_DESCUENTO;

-- total no_descontado
Select 
	sum(importe_no_descontado_gral) -- as no_descontado
	INTO no_descontado
From
salarios_contratados.reporte_seguimiento_descuentos_varios_importados_a_aplicados
(IN_ID_ADMINISTRACION, 
IN_GESTION,
IN_ID_MES, 
IN_ID_TIPO_DESCUENTO);


-- sumatoria: planilla remitida
Select
	sum(a.importe) -- as remitido
	INTO remitido
FROM salarios_contratados.aso_temporales a
WHERE a.id_administracion = IN_ID_ADMINISTRACION
AND a.gestion = IN_GESTION
AND a.id_mes = IN_ID_MES
AND a.id_tipo_descuento = IN_ID_TIPO_DESCUENTO;

RETURN NEXT;

END;
]]></definition>
</function>

<function name="reporte_seguimiento_descuentos_varios_importados_a_aplicados"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="1000">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<parameter name="cedula">
		<type name="text"/>
	</parameter>
	<parameter name="importe_remitido">
		<type name="numeric"/>
	</parameter>
	<parameter name="importe_descuento_aso">
		<type name="numeric"/>
	</parameter>
	<parameter name="importe_solicitado_plla_descuentos">
		<type name="numeric"/>
	</parameter>
	<parameter name="importe_descontado_plla_descuentos">
		<type name="numeric"/>
	</parameter>
	<parameter name="importe_no_descontado_plla_descuentos">
		<type name="numeric"/>
	</parameter>
	<parameter name="importe_no_descontado_gral">
		<type name="numeric"/>
	</parameter>
	<parameter name="autorizacion_estado">
		<type name="boolean"/>
	</parameter>
	<parameter name="autorizacion_desde">
		<type name="date"/>
	</parameter>
	<parameter name="autorizacion_hasta">
		<type name="date"/>
	</parameter>
	<parameter name="ape_nom_funcionario">
		<type name="text"/>
	</parameter>
	<parameter name="motivo_inconsistencia">
		<type name="text"/>
	</parameter>
	<parameter name="id_administracion">
		<type name="integer"/>
	</parameter>
	<parameter name="gestion">
		<type name="numeric"/>
	</parameter>
	<parameter name="id_mes">
		<type name="integer"/>
	</parameter>
	<parameter name="id_tipo_descuento">
		<type name="integer"/>
	</parameter>
	<parameter name="descripcion_tipo_descuento">
		<type name="text"/>
	</parameter>
	</return-type>
	<parameter name="in_id_administracion" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_gestion" in="true">
		<type name="numeric"/>
	</parameter>
	<parameter name="in_id_mes" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_id_tipo_descuento" in="true">
		<type name="integer"/>
	</parameter>
	<definition><![CDATA[
BEGIN
RETURN QUERY
-- Fecha: 2012-09-10
-- Autor: Lic. Guillermo Galeano Fernandez
-- Motivo: Funcion para obtener los datos para el reporte 
-- Diferencias de importación por Tipos de Descuentos.

/*
Datos esperados:
a) Todos los importes y CI solicitados por la Aso en un mes.
b) La diferencia entre lo solicitado-aso y lo importado a descuentos disponibles.
c) La diferencia enter lo disponible y lo aplicado.

Contemplar que esto es un reporte histórico, y debe coincidir con 
la fecha de vigencia de la autorización.


*/
--------------------------------------------------------
SELECT 
	a.cedula::text,
	a.importe as "importe_remitido",
	da.monto as "importe_descuento_aso",
	dpd.monto_solicitado as "importe_solicitado_plla_descuentos",
	dpd.monto_descuento as "importe_descontado_plla_descuentos",
(dpd.monto_solicitado - dpd.monto_descuento) as "importe_no_descontado_plla_descuentos",

CASE
	WHEN (dpd.monto_solicitado - dpd.monto_descuento) IS NULL THEN a.importe
	ELSE (dpd.monto_solicitado - dpd.monto_descuento)

END

AS "importe_no_descontado_gral",
au.estado as "autorizacion_estado",
au.desde as "autorizacion_desde",
au.hasta as "autorizacion_hasta",
	f.ape_nom_funcionario::text,
CASE 
	When f.ape_nom_funcionario is null then 'FUNCIONARIO INEXISTENTE.' 
	When au.estado is true AND f.ape_nom_funcionario is NOT null AND da.monto is null then 'CON AUTORIZACION - NO AGREGADO.' 	
	When au.estado is null OR au.estado is false AND f.ape_nom_funcionario is NOT null then 'FUNCIONARIO SIN AUTORIZACION.' 
--	When da.monto is null AND f.ape_nom_funcionario is NOT null then 'FUNCIONARIO SIN AUTORIZACION.' 
WHEN (
((dpd.monto_solicitado - dpd.monto_descuento) > 0) and 
f.ape_nom_funcionario is NOT null
) THEN 'DIFERENCIA NO DESCONTADA'

END
AS "motivo_inconsistencia",
a.id_administracion,
a.gestion,
a.id_mes,
a.id_tipo_descuento,
z.descripcion::text as "descripcion_tipo_descuento"
FROM salarios_contratados.aso_temporales a
	LEFT join legajos.funcionarios f 
		on (a.cedula = f.cedula_funcionario)

	LEFT join salarios_contratados.autorizaciones au 
		on (au.id_funcionario=f.id_funcionario 
			and au.id_tipo_descuento = a.id_tipo_descuento 
			and au.estado
			)    

	LEFT JOIN salarios_contratados.descuentos_aso da 
		ON ( da.id_administracion = a.id_administracion
		and da.id_mes = a.id_mes 
		and da.gestion = a.gestion
		and da.id_tipo_descuento = a.id_tipo_descuento
		and da.id_funcionario = f.id_funcionario
		AND da.estado = 1
		)

	LEFT JOIN salarios_contratados.planillas_descuentos_detalles dpd
		ON (da.id_descuento_aso=dpd.id_descuento_aso)
	LEFT JOIN salarios.tipos_descuentos z 
		ON (a.id_tipo_descuento = z.id_tipo_descuento)

WHERE a.id_administracion = IN_ID_ADMINISTRACION
AND a.gestion = IN_GESTION
AND a.id_mes = IN_ID_MES
AND a.id_tipo_descuento = IN_ID_TIPO_DESCUENTO
AND (
	((dpd.monto_solicitado - dpd.monto_descuento) > 0) 
     OR ((dpd.monto_solicitado - dpd.monto_descuento) is null)
)
;
END;
]]></definition>
</function>

<function name="sfp_informe_liquidaciones_funcionarios_contratados"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="1000">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<parameter name="id_funcionario">
		<type name="integer"/>
	</parameter>
	<parameter name="concepto">
		<type name="text"/>
	</parameter>
	<parameter name="nivel">
		<type name="text"/>
	</parameter>
	<parameter name="cedula">
		<type name="text"/>
	</parameter>
	<parameter name="apellido">
		<type name="text"/>
	</parameter>
	<parameter name="nombre">
		<type name="text"/>
	</parameter>
	<parameter name="objeto_gasto">
		<type name="text"/>
	</parameter>
	<parameter name="og">
		<type name="integer"/>
	</parameter>
	<parameter name="presupuestado">
		<type name="integer"/>
	</parameter>
	<parameter name="devengado">
		<type name="integer"/>
	</parameter>
	<parameter name="orden">
		<type name="integer"/>
	</parameter>
	<parameter name="categoria">
		<type name="text"/>
	</parameter>
	<parameter name="cargo">
		<type name="text"/>
	</parameter>
	</return-type>
	<parameter name="in_id_administracion" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_id_mes" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_gestion" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_id_funcionario" in="true">
		<type name="text"/>
	</parameter>
	<definition><![CDATA[
BEGIN
/*
  * Funcion para generar un listado de las liquidaciones de los funcionarios permanentes/comisionados por mes y gestion
  * Creado    : 2014-02-07 17:33:48
  * Modificado: 2014-02-17 15:27:48
  * Modificado: 2014-02-18 11:20:40 - DMAO
  * Autor: Lic. Gustavo Eloy Alcaraz Bogado
  * Parametros:
  *            in_id_administracion administracion del proceso		
  *            in_id_mes            mes de proceso
  *            in_gestion           ejercicio aplicado 
  * 
  * Descripcion:  Genera un listado de los funcionarios contratados referentes a las liquidaciones al mes y la gestion ingresado
  *               como informe para la Secretaria de la Funcion Publica (SFP)  
  * ------------  
  */
RETURN QUERY 
SELECT
df.id_funcionario::integer,-- 0
df.concepto::text,-- 1
df.nivel::text, --2
df.cedula::text,-- 3
df.apellido::text,-- 4
df.nombre::text,-- 5
df.objeto_gasto::text,-- 6
df.og::integer,-- 7
df.presupuestado::integer,-- 8
df.devengado::integer,-- 9
df.orden::integer,-- 10
df.datos_contratado_adicional[1]::text as categoria, -- 11
df.datos_contratado_adicional[2]::text as cargo-- 12
FROM
(
SELECT
fp.id_funcionario::integer,-- 0
fp.concepto::text,-- 1
fp.nivel::text, --2
fp.cedula::text,-- 3
fp.apellido::text,-- 4
fp.nombre::text,-- 5
fp.objeto_gasto::text,-- 6
fp.og::integer,-- 7
fp.presupuestado::integer,-- 8
fp.devengado::integer,-- 9
fp.orden::integer,-- 10
fp.categoria::text, -- 11
(
SELECT
   ('{'||fc.categoria||','||lf.descripcion_funcion||'}')::text[] as datos_contratado
FROM legajos.funcionarios fun
   LEFT JOIN salarios_contratados.planillas_salarios_detalles psd on psd.id_funcionario=fun.id_funcionario
   LEFT JOIN salarios_contratados.planillas_salarios ps on ps.id_planilla_salario=psd.id_planilla_salario
   LEFT JOIN legajos.oficinas_con_descripciones ocd on ocd.id_oficina=psd.id_oficina
   LEFT JOIN salarios_contratados.funcionarios_contratos fc on fc.id_funcionario = psd.id_funcionario and fc.estado is true
   LEFT JOIN legajos.funcionarios_contratados lfc on lfc.id_funcionario_contratado = fc.id_funcionario_contratado
   LEFT JOIN legajos.funciones lf on lf.id_funcion = lfc.id_funcion
WHERE
   ps.id_administracion=in_id_administracion AND 
   ps.gestion=in_gestion AND 
   ps.id_mes=in_id_mes AND
   ps.id_estado=1 AND
   psd.id_funcionario=fp.id_funcionario
) AS datos_contratado_adicional -- 12
FROM
(
-- ===========================================
-- SALARIOS
-- ===========================================
SELECT
   fun.id_funcionario,-- 0
   'SUELDO'::text as concepto,-- 1
   ocd.nombre_nivel1 as nivel,-- 2
   fun.cedula_funcionario as cedula,-- 3
   fun.apellido_funcionario as apellido,-- 4
   fun.nombre_funcionario as nombre,-- 5
   psd.objeto_gasto||' - SUELDO'::text as objeto_gasto,-- 6
   psd.objeto_gasto as og,-- 7
   psd.monto_presupuestado as presupuestado,-- 8
   psd.monto_devengado as devengado,-- 9
   100 as orden,-- 10
   ' '::text as categoria,-- 11
   ' '::text as cargo -- 12
FROM legajos.funcionarios fun
   LEFT JOIN salarios_contratados.planillas_salarios_detalles psd on psd.id_funcionario=fun.id_funcionario
   LEFT JOIN salarios_contratados.planillas_salarios ps on ps.id_planilla_salario=psd.id_planilla_salario
   LEFT JOIN legajos.oficinas_con_descripciones ocd on ocd.id_oficina=psd.id_oficina
   --LEFT JOIN salarios_contratados.funcionarios_contratos fc on fc.id_funcionario_contrato = psd.id_funcionario_contrato
   --LEFT JOIN legajos.funcionarios_contratados lfc on lfc.id_funcionario_contratado = psd.id_funcionario_contrato
   --LEFT JOIN legajos.funciones lf on lf.id_funcion = lfc.id_funcion
WHERE
   ps.id_administracion=in_id_administracion AND 
   ps.gestion=in_gestion AND 
   ps.id_mes=in_id_mes AND
   ps.id_estado=1 AND
   CASE
      WHEN 
         in_id_funcionario='0' 
      THEN 
         psd.id_funcionario>0
      ELSE 
         psd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[])
   END
 
UNION

-- ===========================================
-- REMUNERACIÓN EXTRAORDINARIA
-- ===========================================
SELECT
   max(fun.id_funcionario),-- 0
   ('RE ('||sum(dpre.cantidad_horas)||' h.)')::text as concepto,-- 1
   max(ocd.nombre_nivel1) as nivel,-- 2
   fun.cedula_funcionario as cedula,-- 3
   max(fun.apellido_funcionario) as apellido,-- 4
   max(fun.nombre_funcionario) as nombre,-- 5
   max(dpre.objeto_gasto)||' - REMUNERACION EXTRAORDINARIA'::text as objeto_gasto,-- 6
   max(dpre.objeto_gasto) as og,-- 7
   sum(dpre.monto) as presupuestado,-- 8
   sum(dpre.monto) as devengado,-- 9
   200 as orden,-- 10
   ' '::text as categoria,-- 11
   ' '::text as cargo-- 12
FROM  
   salarios_contratados.planillas_re_detalles dpre
   LEFT JOIN salarios_contratados.planillas_re pre on pre.id_planilla_re=dpre.id_planilla_re
   LEFT JOIN legajos.funcionarios fun on fun.id_funcionario=dpre.id_funcionario
   LEFT JOIN legajos.oficinas_con_descripciones ocd on ocd.id_oficina=dpre.id_oficina
WHERE
   pre.id_administracion=in_id_administracion AND 
   pre.gestion=in_gestion AND 
   pre.id_mes=in_id_mes AND
   pre.estado=1 AND
   CASE
      WHEN 
         in_id_funcionario='0' 
      THEN 
         dpre.id_funcionario>0
      ELSE 
         dpre.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[])
   END
GROUP BY
   fun.cedula_funcionario 

UNION

-- ===========================================
-- REMUNERACIÓN ADICIONAL
-- ===========================================
SELECT
   max(fun.id_funcionario),-- 0
   ('RA ('||sum(dpra.cantidad_horas)||' h.)')::text as concepto,
   max(ocd.nombre_nivel1) as nivel,
   fun.cedula_funcionario as cedula,
   max(fun.apellido_funcionario) as apellido,
   max(fun.nombre_funcionario) as nombre,
   max(dpra.objeto_gasto)||' - REMUNERACION ADICIONAL'::text as objeto_gasto,
   max(dpra.objeto_gasto) as og,
   sum(dpra.monto) as presupuestado,
   sum(dpra.monto) as devengado,
   300 as orden,
   ' '::text as categoria,-- 11
   ' '::text as cargo-- 12
FROM
   salarios_contratados.planillas_ra_detalles dpra
   LEFT JOIN salarios_contratados.planillas_ra pra on pra.id_planilla_ra=dpra.id_planilla_ra
   LEFT JOIN legajos.funcionarios fun on fun.id_funcionario=dpra.id_funcionario
   LEFT JOIN legajos.oficinas_con_descripciones ocd on ocd.id_oficina=dpra.id_oficina
WHERE
   pra.id_administracion=in_id_administracion AND 
   pra.gestion=in_gestion AND 
   pra.id_mes=in_id_mes AND
   pra.estado=1 AND
   CASE
      WHEN 
         in_id_funcionario='0' 
      THEN 
         dpra.id_funcionario>0
      ELSE 
         dpra.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[])
   END
GROUP BY
   fun.cedula_funcionario

UNION

-- ===========================================
-- SUBSIDIOS
-- ===========================================
SELECT
   max(fun.id_funcionario),-- 0
   max(s.descripcion)||(CASE WHEN sum(dpsub.cantidad)>1 THEN ' ('||sum(dpsub.cantidad)||')' ELSE '' END )::text as concepto,
   max(ocd.nombre_nivel1) as nivel,
   max(fun.cedula_funcionario) as cedula,
   max(fun.apellido_funcionario) as apellido,
   max(fun.nombre_funcionario) as nombre,
   max(dpsub.objeto_gasto)||' - '||max(s.descripcion)::text as objeto_gasto,
   max(dpsub.objeto_gasto) as og,
   sum(dpsub.importe_subsidio) as presupuestado,
   sum(dpsub.importe_subsidio) as devengado,
   400 as orden,
   ' '::text as categoria,-- 11
   ' '::text as cargo-- 12
FROM  
    salarios_contratados.planillas_subsidios_detalles dpsub
    LEFT JOIN salarios_contratados.planillas_subsidios     psub ON psub.id_planilla_subsidio = dpsub.id_planilla_subsidio
    -- LEFT JOIN salarios_contratados.funcionarios_subsidios    fs ON fs.id_funcionario= dpsub.id_funcionario AND fs.gestion=2013 AND fs.id_mes=1
    LEFT JOIN salarios_contratados.funcionarios_subsidios    fs ON fs.id_funcionario_subsidio= dpsub.id_funcionario_subsidio AND fs.gestion=in_gestion AND fs.id_mes=in_id_mes
    LEFT JOIN salarios_contratados.subsidios                  s ON s.id_subsidio = fs.id_subsidio
    LEFT JOIN legajos.oficinas_con_descripciones            ocd ON ocd.id_oficina = dpsub.id_oficina
    LEFT JOIN legajos.funcionarios                          fun ON fun.id_funcionario= fs.id_funcionario
WHERE
   psub.id_administracion=in_id_administracion AND 
   psub.gestion=in_gestion AND 
   psub.id_mes=in_id_mes AND
   psub.estado=1 AND
   CASE
      WHEN 
         in_id_funcionario='0' 
      THEN 
         -- dpsub.id_funcionario>0
         fs.id_funcionario>0
      ELSE 
         -- dpsub.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[])
         fs.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[])
   END 
GROUP BY
   fun.id_funcionario

UNION

-- ===========================================
-- GRATIFICACION OCASIONAL
-- ===========================================
SELECT
   max(fun.id_funcionario),-- 0
   ('GRATIFICACION OCASIONAL')::text as concepto,
   max(ocd.nombre_nivel1) as nivel,
   fun.cedula_funcionario as cedula,
   max(fun.apellido_funcionario) as apellido,
   max(fun.nombre_funcionario) as nombre,
   max(dpgo.objeto_gasto)||' - GRATIFICACION OCASIONAL'::text as objeto_gasto,
   max(dpgo.objeto_gasto) as og,
   sum(dpgo.importe_gratificacion) as presupuestado,
   sum(dpgo.importe_gratificacion) as devengado,
   500 as orden,
   ' '::text as categoria,-- 11
   ' '::text as cargo-- 12
FROM
   salarios_contratados.planillas_gratificaciones_ocasionales_detalles dpgo
   LEFT JOIN salarios_contratados.planillas_gratificaciones_ocasionales  pgo ON pgo.id_planilla_gratificacion_ocasional=dpgo.id_planilla_gratificacion_ocasional
   LEFT JOIN legajos.funcionarios                                        fun ON fun.id_funcionario=dpgo.id_funcionario
   LEFT JOIN legajos.oficinas_con_descripciones                          ocd ON ocd.id_oficina=dpgo.id_oficina
WHERE
   pgo.id_administracion=in_id_administracion AND 
   pgo.gestion=in_gestion AND 
   pgo.id_mes=in_id_mes AND
   pgo.estado=1 AND
   CASE
      WHEN 
         in_id_funcionario='0' 
      THEN 
         dpgo.id_funcionario>0
      ELSE 
         dpgo.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[])
   END 
GROUP BY
   fun.cedula_funcionario
) fp
ORDER BY
  fp.cedula::int, fp.og, fp.orden
) df;

END;
]]></definition>
</function>

<function name="total_remuneraciones_iva_contratado"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="1000">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<parameter name="id_funcionario">
		<type name="integer"/>
	</parameter>
	<parameter name="orden">
		<type name="integer"/>
	</parameter>
	<parameter name="concepto">
		<type name="text"/>
	</parameter>
	<parameter name="ene">
		<type name="numeric"/>
	</parameter>
	<parameter name="feb">
		<type name="numeric"/>
	</parameter>
	<parameter name="mar">
		<type name="numeric"/>
	</parameter>
	<parameter name="abr">
		<type name="numeric"/>
	</parameter>
	<parameter name="may">
		<type name="numeric"/>
	</parameter>
	<parameter name="jun">
		<type name="numeric"/>
	</parameter>
	<parameter name="jul">
		<type name="numeric"/>
	</parameter>
	<parameter name="ago">
		<type name="numeric"/>
	</parameter>
	<parameter name="sep">
		<type name="numeric"/>
	</parameter>
	<parameter name="oct">
		<type name="numeric"/>
	</parameter>
	<parameter name="nov">
		<type name="numeric"/>
	</parameter>
	<parameter name="dic">
		<type name="numeric"/>
	</parameter>
	<parameter name="objeto_gasto">
		<type name="integer"/>
	</parameter>
	<parameter name="sub_total">
		<type name="numeric"/>
	</parameter>
	<parameter name="aguinaldo">
		<type name="numeric"/>
	</parameter>
	<parameter name="total">
		<type name="numeric"/>
	</parameter>
	</return-type>
	<parameter name="in_id_administracion" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_gestion" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_id_funcionario" in="true">
		<type name="text"/>
	</parameter>
	<definition><![CDATA[
BEGIN
/*
  * Funcion para generar los IVAs realizados durante la gestión solicitada de los funcionarios contratados por mes y gestion
  * Creado    : 2014-10-31 12:09:00
  * Modificado: 2014-10-31 12:30:00
  * Autor: Lic. Gustavo Eloy Alcaraz Bogado
  * Parametros:
  *            in_id_administracion administracion del proceso		
  *            in_gestion           ejercicio aplicado 
  * 	       in_id_funcionario    identifiacador de funcionarios separados por coma o ingresar '0' para todos los funcionarios	 
  * ------------  
  */
RETURN QUERY 
SELECT
*
FROM
(
-- RETENCION IVA
SELECT
   *,
   (tot_sue.ene+tot_sue.feb+tot_sue.mar+tot_sue.abr+tot_sue.may+tot_sue.jun+tot_sue.jul+tot_sue.ago+tot_sue.sep+tot_sue.oct+tot_sue.nov+tot_sue.dic) as sub_total,
   ((tot_sue.ene+tot_sue.feb+tot_sue.mar+tot_sue.abr+tot_sue.may+tot_sue.jun+tot_sue.jul+tot_sue.ago+tot_sue.sep+tot_sue.oct+tot_sue.nov+tot_sue.dic)/12)::numeric(12,0) as aguinaldo,
   (tot_sue.ene+tot_sue.feb+tot_sue.mar+tot_sue.abr+tot_sue.may+tot_sue.jun+tot_sue.jul+tot_sue.ago+tot_sue.sep+tot_sue.oct+tot_sue.nov+tot_sue.dic)+
   ((tot_sue.ene+tot_sue.feb+tot_sue.mar+tot_sue.abr+tot_sue.may+tot_sue.jun+tot_sue.jul+tot_sue.ago+tot_sue.sep+tot_sue.oct+tot_sue.nov+tot_sue.dic)/12)::numeric(12,0) as total
FROM
(
SELECT 
   sueldo.id_funcionario,
   1::int as orden,
   'RETENCION IVA SUELDO'::text as concepto,
   -max(sueldo.ene) as ene,
   -max(sueldo.feb) as feb,
   -max(sueldo.mar) as mar,
   -max(sueldo.abr) as abr,
   -max(sueldo.may) as may,
   -max(sueldo.jun) as jun,
   -max(sueldo.jul) as jul,
   -max(sueldo.ago) as ago,
   -max(sueldo.sep) as sep,
   -max(sueldo.oct) as oct,
   -max(sueldo.nov) as nov,
   -max(sueldo.dic) as dic,
   max(sueldo.objeto_gasto) as objeto_gasto
FROM
(
-- ENERO
SELECT
   dps.id_funcionario,
   (CASE WHEN count(*)>1 THEN sum(dps.monto_iva) ELSE max(dps.monto_iva) END)::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,  
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(dps.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_salarios_detalles dps
   LEFT JOIN salarios_contratados.planillas_salarios           ps ON ps.id_planilla_salario=dps.id_planilla_salario
WHERE
   ps.id_estado=1 AND
   ps.id_administracion=in_id_administracion AND
   ps.id_mes=1 AND
   ps.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN dps.id_funcionario>0 ELSE dps.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   dps.id_funcionario
-----     
UNION
-----   
-- FEBRERO
SELECT
   dps.id_funcionario,
   0::numeric(12,0) as ene,
   (CASE WHEN count(*)>1 THEN sum(dps.monto_iva) ELSE max(dps.monto_iva) END)::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(dps.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_salarios_detalles dps
   LEFT JOIN salarios_contratados.planillas_salarios           ps ON ps.id_planilla_salario=dps.id_planilla_salario
WHERE
   ps.id_estado=1 AND
   ps.id_administracion=in_id_administracion AND
   ps.id_mes=2 AND
   ps.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN dps.id_funcionario>0 ELSE dps.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   dps.id_funcionario
-----     
UNION
-----   
-- MARZO
SELECT
   dps.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   (CASE WHEN count(*)>1 THEN sum(dps.monto_iva) ELSE max(dps.monto_iva) END)::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(dps.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_salarios_detalles dps
   LEFT JOIN salarios_contratados.planillas_salarios           ps ON ps.id_planilla_salario=dps.id_planilla_salario
WHERE
   ps.id_estado=1 AND
   ps.id_administracion=in_id_administracion AND
   ps.id_mes=3 AND
   ps.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN dps.id_funcionario>0 ELSE dps.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   dps.id_funcionario
-----     
UNION
-----   
-- ABRIL
SELECT
   dps.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   (CASE WHEN count(*)>1 THEN sum(dps.monto_iva) ELSE max(dps.monto_iva) END)::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(dps.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_salarios_detalles dps
   LEFT JOIN salarios_contratados.planillas_salarios           ps ON ps.id_planilla_salario=dps.id_planilla_salario
WHERE
   ps.id_estado=1 AND
   ps.id_administracion=in_id_administracion AND
   ps.id_mes=4 AND
   ps.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN dps.id_funcionario>0 ELSE dps.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   dps.id_funcionario
-----     
UNION
-----   
-- MAYO
SELECT
   dps.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   (CASE WHEN count(*)>1 THEN sum(dps.monto_iva) ELSE max(dps.monto_iva) END)::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(dps.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_salarios_detalles dps
   LEFT JOIN salarios_contratados.planillas_salarios           ps ON ps.id_planilla_salario=dps.id_planilla_salario
WHERE
   ps.id_estado=1 AND
   ps.id_administracion=in_id_administracion AND
   ps.id_mes=5 AND
   ps.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN dps.id_funcionario>0 ELSE dps.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   dps.id_funcionario
-----     
UNION
-----   
-- JUNIO
SELECT
   dps.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   (CASE WHEN count(*)>1 THEN sum(dps.monto_iva) ELSE max(dps.monto_iva) END)::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(dps.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_salarios_detalles dps
   LEFT JOIN salarios_contratados.planillas_salarios           ps ON ps.id_planilla_salario=dps.id_planilla_salario
WHERE
   ps.id_estado=1 AND
   ps.id_administracion=in_id_administracion AND
   ps.id_mes=6 AND
   ps.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN dps.id_funcionario>0 ELSE dps.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   dps.id_funcionario
-----     
UNION
-----   
-- JULIO
SELECT
   dps.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   (CASE WHEN count(*)>1 THEN sum(dps.monto_iva) ELSE max(dps.monto_iva) END)::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(dps.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_salarios_detalles dps
   LEFT JOIN salarios_contratados.planillas_salarios           ps ON ps.id_planilla_salario=dps.id_planilla_salario
WHERE
   ps.id_estado=1 AND
   ps.id_administracion=in_id_administracion AND
   ps.id_mes=7 AND
   ps.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN dps.id_funcionario>0 ELSE dps.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   dps.id_funcionario
-----     
UNION
-----   
-- AGOSTO
SELECT
   dps.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   (CASE WHEN count(*)>1 THEN sum(dps.monto_iva) ELSE max(dps.monto_iva) END)::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(dps.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_salarios_detalles dps
   LEFT JOIN salarios_contratados.planillas_salarios           ps ON ps.id_planilla_salario=dps.id_planilla_salario
WHERE
   ps.id_estado=1 AND
   ps.id_administracion=in_id_administracion AND
   ps.id_mes=8 AND
   ps.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN dps.id_funcionario>0 ELSE dps.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   dps.id_funcionario
-----     
UNION
-----   
-- SEPTIEMBRE
SELECT
   dps.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   (CASE WHEN count(*)>1 THEN sum(dps.monto_iva) ELSE max(dps.monto_iva) END)::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(dps.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_salarios_detalles dps
   LEFT JOIN salarios_contratados.planillas_salarios           ps ON ps.id_planilla_salario=dps.id_planilla_salario
WHERE
   ps.id_estado=1 AND
   ps.id_administracion=in_id_administracion AND
   ps.id_mes=9 AND
   ps.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN dps.id_funcionario>0 ELSE dps.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   dps.id_funcionario
-----     
UNION
-----   
-- OCTUBRE
SELECT
   dps.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   (CASE WHEN count(*)>1 THEN sum(dps.monto_iva) ELSE max(dps.monto_iva) END)::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(dps.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_salarios_detalles dps
   LEFT JOIN salarios_contratados.planillas_salarios           ps ON ps.id_planilla_salario=dps.id_planilla_salario
WHERE
   ps.id_estado=1 AND
   ps.id_administracion=in_id_administracion AND
   ps.id_mes=10 AND
   ps.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN dps.id_funcionario>0 ELSE dps.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   dps.id_funcionario 
-----     
UNION
-----   
-- NOVIEMBRE
SELECT
   dps.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   (CASE WHEN count(*)>1 THEN sum(dps.monto_iva) ELSE max(dps.monto_iva) END)::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(dps.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_salarios_detalles dps
   LEFT JOIN salarios_contratados.planillas_salarios           ps ON ps.id_planilla_salario=dps.id_planilla_salario
WHERE
   ps.id_estado=1 AND
   ps.id_administracion=in_id_administracion AND
   ps.id_mes=11 AND
   ps.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN dps.id_funcionario>0 ELSE dps.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   dps.id_funcionario
-----     
UNION
-----   
-- DICIEMBRE
SELECT
   dps.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   (CASE WHEN count(*)>1 THEN sum(dps.monto_iva) ELSE max(dps.monto_iva) END)::numeric(12,0) as dic,
   max(dps.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_salarios_detalles dps
   LEFT JOIN salarios_contratados.planillas_salarios           ps ON ps.id_planilla_salario=dps.id_planilla_salario
WHERE
   ps.id_estado=1 AND
   ps.id_administracion=in_id_administracion AND
   ps.id_mes=12 AND
   ps.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN dps.id_funcionario>0 ELSE dps.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   dps.id_funcionario     
) sueldo
GROUP BY 
   sueldo.id_funcionario
) tot_sue
UNION
-- REMUNERACION EXTRAORDINARIA [RE]
SELECT
   *,
   (tot_re.ene+tot_re.feb+tot_re.mar+tot_re.abr+tot_re.may+tot_re.jun+tot_re.jul+tot_re.ago+tot_re.sep+tot_re.oct+tot_re.nov+tot_re.dic) as sub_total,
   ((tot_re.ene+tot_re.feb+tot_re.mar+tot_re.abr+tot_re.may+tot_re.jun+tot_re.jul+tot_re.ago+tot_re.sep+tot_re.oct+tot_re.nov+tot_re.dic)/12)::numeric(12,0) as aguinaldo,
   (tot_re.ene+tot_re.feb+tot_re.mar+tot_re.abr+tot_re.may+tot_re.jun+tot_re.jul+tot_re.ago+tot_re.sep+tot_re.oct+tot_re.nov+tot_re.dic)+
   ((tot_re.ene+tot_re.feb+tot_re.mar+tot_re.abr+tot_re.may+tot_re.jun+tot_re.jul+tot_re.ago+tot_re.sep+tot_re.oct+tot_re.nov+tot_re.dic)/12)::numeric(12,0) as total
FROM
(
SELECT 
   re.id_funcionario,
   2::int as orden,
   ('RETENCION IVA REM. EXT. (RE)')::text as concepto,
   -max(re.ene) as ene,
   -max(re.feb) as feb,
   -max(re.mar) as mar,
   -max(re.abr) as abr,
   -max(re.may) as may,
   -max(re.jun) as jun,
   -max(re.jul) as jul,
   -max(re.ago) as ago,
   -max(re.sep) as sep,
   -max(re.oct) as oct,
   -max(re.nov) as nov,
   -max(re.dic) as dic,
   max(re.objeto_gasto) as objeto_gasto
FROM
(
-- ENERO
SELECT
   pd.id_funcionario,
   sum(pd.monto_iva)::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,  
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_re_detalles pd
   LEFT JOIN salarios_contratados.planillas_re           p ON p.id_planilla_re=pd.id_planilla_re
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=1 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- FEBRERO
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   sum(pd.monto_iva)::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_re_detalles   pd
   LEFT JOIN salarios_contratados.planillas_re  p ON p.id_planilla_re=pd.id_planilla_re
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=2 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- MARZO
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   sum(pd.monto_iva)::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_re_detalles pd
   LEFT JOIN salarios_contratados.planillas_re           p ON p.id_planilla_re=pd.id_planilla_re
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=3 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- ABRIL
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   sum(pd.monto_iva)::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_re_detalles pd
   LEFT JOIN salarios_contratados.planillas_re           p ON p.id_planilla_re=pd.id_planilla_re
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=4 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- MAYO
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   sum(pd.monto_iva)::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_re_detalles pd
   LEFT JOIN salarios_contratados.planillas_re           p ON p.id_planilla_re=pd.id_planilla_re
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=5 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- JUNIO
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   sum(pd.monto_iva)::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_re_detalles pd
   LEFT JOIN salarios_contratados.planillas_re           p ON p.id_planilla_re=pd.id_planilla_re
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=6 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- JULIO
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   sum(pd.monto_iva)::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_re_detalles pd
   LEFT JOIN salarios_contratados.planillas_re           p ON p.id_planilla_re=pd.id_planilla_re
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=7 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- AGOSTO
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   sum(pd.monto_iva)::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_re_detalles pd
   LEFT JOIN salarios_contratados.planillas_re           p ON p.id_planilla_re=pd.id_planilla_re
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=8 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- SEPTIEMBRE
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   sum(pd.monto_iva)::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_re_detalles pd
   LEFT JOIN salarios_contratados.planillas_re           p ON p.id_planilla_re=pd.id_planilla_re
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=9 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- OCTUBRE
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   sum(pd.monto_iva)::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_re_detalles pd
   LEFT JOIN salarios_contratados.planillas_re           p ON p.id_planilla_re=pd.id_planilla_re
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=10 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario 
-----     
UNION
-----   
-- NOVIEMBRE
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   sum(pd.monto_iva)::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_re_detalles pd
   LEFT JOIN salarios_contratados.planillas_re           p ON p.id_planilla_re=pd.id_planilla_re
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=11 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- DICIEMBRE
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   sum(pd.monto_iva)::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_re_detalles pd
   LEFT JOIN salarios_contratados.planillas_re           p ON p.id_planilla_re=pd.id_planilla_re
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=12 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario     
) re
GROUP BY 
   re.id_funcionario
) tot_re

UNION
-- REMUNERACION ADICIONAL [RA]
SELECT
   *,
   (tot_ra.ene+tot_ra.feb+tot_ra.mar+tot_ra.abr+tot_ra.may+tot_ra.jun+tot_ra.jul+tot_ra.ago+tot_ra.sep+tot_ra.oct+tot_ra.nov+tot_ra.dic) as sub_total,
   ((tot_ra.ene+tot_ra.feb+tot_ra.mar+tot_ra.abr+tot_ra.may+tot_ra.jun+tot_ra.jul+tot_ra.ago+tot_ra.sep+tot_ra.oct+tot_ra.nov+tot_ra.dic)/12)::numeric(12,0) as aguinaldo,
   (tot_ra.ene+tot_ra.feb+tot_ra.mar+tot_ra.abr+tot_ra.may+tot_ra.jun+tot_ra.jul+tot_ra.ago+tot_ra.sep+tot_ra.oct+tot_ra.nov+tot_ra.dic)+
   ((tot_ra.ene+tot_ra.feb+tot_ra.mar+tot_ra.abr+tot_ra.may+tot_ra.jun+tot_ra.jul+tot_ra.ago+tot_ra.sep+tot_ra.oct+tot_ra.nov+tot_ra.dic)/12)::numeric(12,0) as total
FROM
(
SELECT 
   ra.id_funcionario,
   3::int as orden,
   ('RETENCION IVA REM. ADI. (RA)')::text as concepto,
   -max(ra.ene) as ene,
   -max(ra.feb) as feb,
   -max(ra.mar) as mar,
   -max(ra.abr) as abr,
   -max(ra.may) as may,
   -max(ra.jun) as jun,
   -max(ra.jul) as jul,
   -max(ra.ago) as ago,
   -max(ra.sep) as sep,
   -max(ra.oct) as oct,
   -max(ra.nov) as nov,
   -max(ra.dic) as dic,
   max(ra.objeto_gasto) as objeto_gasto
FROM
(
-- ENERO
SELECT
   pd.id_funcionario,
   sum(pd.monto_iva)::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,  
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_ra_detalles pd
   LEFT JOIN salarios_contratados.planillas_ra           p ON p.id_planilla_ra=pd.id_planilla_ra
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=1 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- FEBRERO
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   sum(pd.monto_iva)::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_ra_detalles   pd
   LEFT JOIN salarios_contratados.planillas_ra  p ON p.id_planilla_ra=pd.id_planilla_ra
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=2 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- MARZO
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   sum(pd.monto_iva)::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_ra_detalles pd
   LEFT JOIN salarios_contratados.planillas_ra           p ON p.id_planilla_ra=pd.id_planilla_ra
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=3 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- ABRIL
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   sum(pd.monto_iva)::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_ra_detalles pd
   LEFT JOIN salarios_contratados.planillas_ra           p ON p.id_planilla_ra=pd.id_planilla_ra
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=4 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- MAYO
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   sum(pd.monto_iva)::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_ra_detalles pd
   LEFT JOIN salarios_contratados.planillas_ra           p ON p.id_planilla_ra=pd.id_planilla_ra
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=5 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- JUNIO
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   sum(pd.monto_iva)::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_ra_detalles pd
   LEFT JOIN salarios_contratados.planillas_ra           p ON p.id_planilla_ra=pd.id_planilla_ra
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=6 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- JULIO
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   sum(pd.monto_iva)::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_ra_detalles pd
   LEFT JOIN salarios_contratados.planillas_ra           p ON p.id_planilla_ra=pd.id_planilla_ra
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=7 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- AGOSTO
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   sum(pd.monto_iva)::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_ra_detalles pd
   LEFT JOIN salarios_contratados.planillas_ra           p ON p.id_planilla_ra=pd.id_planilla_ra
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=8 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- SEPTIEMBRE
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   sum(pd.monto_iva)::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_ra_detalles pd
   LEFT JOIN salarios_contratados.planillas_ra           p ON p.id_planilla_ra=pd.id_planilla_ra
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=9 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- OCTUBRE
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   sum(pd.monto_iva)::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_ra_detalles pd
   LEFT JOIN salarios_contratados.planillas_ra           p ON p.id_planilla_ra=pd.id_planilla_ra
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=10 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario 
-----     
UNION
-----   
-- NOVIEMBRE
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   sum(pd.monto_iva)::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_ra_detalles pd
   LEFT JOIN salarios_contratados.planillas_ra           p ON p.id_planilla_ra=pd.id_planilla_ra
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=11 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- DICIEMBRE
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   sum(pd.monto_iva)::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_ra_detalles pd
   LEFT JOIN salarios_contratados.planillas_ra           p ON p.id_planilla_ra=pd.id_planilla_ra
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=12 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario     
) ra
GROUP BY 
   ra.id_funcionario
) tot_ra

UNION
-- SUBSIDIO FAMILIAR
SELECT
   *,
   (tot_subsidio.ene+tot_subsidio.feb+tot_subsidio.mar+tot_subsidio.abr+tot_subsidio.may+tot_subsidio.jun+tot_subsidio.jul+tot_subsidio.ago+tot_subsidio.sep+tot_subsidio.oct+tot_subsidio.nov+tot_subsidio.dic) as sub_total,
   0::numeric(12,0) as aguinaldo,
   (tot_subsidio.ene+tot_subsidio.feb+tot_subsidio.mar+tot_subsidio.abr+tot_subsidio.may+tot_subsidio.jun+tot_subsidio.jul+tot_subsidio.ago+tot_subsidio.sep+tot_subsidio.oct+tot_subsidio.nov+tot_subsidio.dic) as total
FROM
(
SELECT 
   sub.id_funcionario,
   4::int as orden,
   'RETENCION IVA SUBSIDIO FAMILIAR'::text as concepto,
   -max(sub.ene) as ene,
   -max(sub.feb) as feb,
   -max(sub.mar) as mar,
   -max(sub.abr) as abr,
   -max(sub.may) as may,
   -max(sub.jun) as jun,
   -max(sub.jul) as jul,
   -max(sub.ago) as ago,
   -max(sub.sep) as sep,
   -max(sub.oct) as oct,
   -max(sub.nov) as nov,
   -max(sub.dic) as dic,
   max(sub.objeto_gasto) as objeto_gasto
FROM
(
-- ENERO
SELECT
   fs.id_funcionario,
   sum(pd.importe_iva)::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,  
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_subsidios_detalles pd
   LEFT JOIN salarios_contratados.planillas_subsidios           p ON p.id_planilla_subsidio=pd.id_planilla_subsidio
   LEFT JOIN salarios_contratados.funcionarios_subsidios       fs ON fs.id_funcionario_subsidio=pd.id_funcionario_subsidio
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=1 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN fs.id_funcionario>0 ELSE fs.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   fs.id_funcionario
-----     
UNION
-----   
-- FEBRERO
SELECT
   fs.id_funcionario,
   0::numeric(12,0) as ene,
   sum(pd.importe_iva)::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_subsidios_detalles   pd
   LEFT JOIN salarios_contratados.planillas_subsidios           p ON p.id_planilla_subsidio=pd.id_planilla_subsidio
   LEFT JOIN salarios_contratados.funcionarios_subsidios       fs ON fs.id_funcionario_subsidio=pd.id_funcionario_subsidio
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=2 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN fs.id_funcionario>0 ELSE fs.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   fs.id_funcionario
-----     
UNION
-----   
-- MARZO
SELECT
   fs.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   sum(pd.importe_iva)::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_subsidios_detalles pd
   LEFT JOIN salarios_contratados.planillas_subsidios           p ON p.id_planilla_subsidio=pd.id_planilla_subsidio
   LEFT JOIN salarios_contratados.funcionarios_subsidios       fs ON fs.id_funcionario_subsidio=pd.id_funcionario_subsidio
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=3 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN fs.id_funcionario>0 ELSE fs.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   fs.id_funcionario
-----     
UNION
-----   
-- ABRIL
SELECT
   fs.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   sum(pd.importe_iva)::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_subsidios_detalles pd
   LEFT JOIN salarios_contratados.planillas_subsidios           p ON p.id_planilla_subsidio=pd.id_planilla_subsidio
   LEFT JOIN salarios_contratados.funcionarios_subsidios       fs ON fs.id_funcionario_subsidio=pd.id_funcionario_subsidio
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=4 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN fs.id_funcionario>0 ELSE fs.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   fs.id_funcionario
-----     
UNION
-----   
-- MAYO
SELECT
   fs.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   sum(pd.importe_iva)::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_subsidios_detalles pd
   LEFT JOIN salarios_contratados.planillas_subsidios           p ON p.id_planilla_subsidio=pd.id_planilla_subsidio
   LEFT JOIN salarios_contratados.funcionarios_subsidios       fs ON fs.id_funcionario_subsidio=pd.id_funcionario_subsidio
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=5 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN fs.id_funcionario>0 ELSE fs.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   fs.id_funcionario
-----     
UNION
-----   
-- JUNIO
SELECT
   fs.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   sum(pd.importe_iva)::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_subsidios_detalles pd
   LEFT JOIN salarios_contratados.planillas_subsidios           p ON p.id_planilla_subsidio=pd.id_planilla_subsidio
   LEFT JOIN salarios_contratados.funcionarios_subsidios       fs ON fs.id_funcionario_subsidio=pd.id_funcionario_subsidio
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=6 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN fs.id_funcionario>0 ELSE fs.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   fs.id_funcionario
-----     
UNION
-----   
-- JULIO
SELECT
   fs.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   sum(pd.importe_iva)::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_subsidios_detalles pd
   LEFT JOIN salarios_contratados.planillas_subsidios           p ON p.id_planilla_subsidio=pd.id_planilla_subsidio
   LEFT JOIN salarios_contratados.funcionarios_subsidios       fs ON fs.id_funcionario_subsidio=pd.id_funcionario_subsidio
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=7 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN fs.id_funcionario>0 ELSE fs.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   fs.id_funcionario
-----     
UNION
-----   
-- AGOSTO
SELECT
   fs.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   sum(pd.importe_iva)::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_subsidios_detalles pd
   LEFT JOIN salarios_contratados.planillas_subsidios           p ON p.id_planilla_subsidio=pd.id_planilla_subsidio
   LEFT JOIN salarios_contratados.funcionarios_subsidios       fs ON fs.id_funcionario_subsidio=pd.id_funcionario_subsidio
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=8 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN fs.id_funcionario>0 ELSE fs.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   fs.id_funcionario
-----     
UNION
-----   
-- SEPTIEMBRE
SELECT
   fs.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   sum(pd.importe_iva)::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_subsidios_detalles pd
   LEFT JOIN salarios_contratados.planillas_subsidios           p ON p.id_planilla_subsidio=pd.id_planilla_subsidio
   LEFT JOIN salarios_contratados.funcionarios_subsidios       fs ON fs.id_funcionario_subsidio=pd.id_funcionario_subsidio
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=9 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN fs.id_funcionario>0 ELSE fs.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   fs.id_funcionario
-----     
UNION
-----   
-- OCTUBRE
SELECT
   fs.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   sum(pd.importe_iva)::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_subsidios_detalles pd
   LEFT JOIN salarios_contratados.planillas_subsidios           p ON p.id_planilla_subsidio=pd.id_planilla_subsidio
   LEFT JOIN salarios_contratados.funcionarios_subsidios       fs ON fs.id_funcionario_subsidio=pd.id_funcionario_subsidio
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=10 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN fs.id_funcionario>0 ELSE fs.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   fs.id_funcionario 
-----     
UNION
-----   
-- NOVIEMBRE
SELECT
   fs.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   sum(pd.importe_iva)::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_subsidios_detalles pd
   LEFT JOIN salarios_contratados.planillas_subsidios           p ON p.id_planilla_subsidio=pd.id_planilla_subsidio
   LEFT JOIN salarios_contratados.funcionarios_subsidios       fs ON fs.id_funcionario_subsidio=pd.id_funcionario_subsidio
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=11 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN fs.id_funcionario>0 ELSE fs.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   fs.id_funcionario
-----     
UNION
-----   
-- DICIEMBRE
SELECT
   fs.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   sum(pd.importe_iva)::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_subsidios_detalles pd
   LEFT JOIN salarios_contratados.planillas_subsidios           p ON p.id_planilla_subsidio=pd.id_planilla_subsidio
   LEFT JOIN salarios_contratados.funcionarios_subsidios       fs ON fs.id_funcionario_subsidio=pd.id_funcionario_subsidio
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=12 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN fs.id_funcionario>0 ELSE fs.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   fs.id_funcionario     
) sub
GROUP BY 
   sub.id_funcionario
) tot_subsidio


UNION
-- GRATIFICACION OCASIONAL
SELECT
   *,
   (tot_go.ene+tot_go.feb+tot_go.mar+tot_go.abr+tot_go.may+tot_go.jun+tot_go.jul+tot_go.ago+tot_go.sep+tot_go.oct+tot_go.nov+tot_go.dic) as sub_total,
   ((tot_go.ene+tot_go.feb+tot_go.mar+tot_go.abr+tot_go.may+tot_go.jun+tot_go.jul+tot_go.ago+tot_go.sep+tot_go.oct+tot_go.nov+tot_go.dic)/12)::numeric(12,0) as aguinaldo,
   (tot_go.ene+tot_go.feb+tot_go.mar+tot_go.abr+tot_go.may+tot_go.jun+tot_go.jul+tot_go.ago+tot_go.sep+tot_go.oct+tot_go.nov+tot_go.dic)+
   ((tot_go.ene+tot_go.feb+tot_go.mar+tot_go.abr+tot_go.may+tot_go.jun+tot_go.jul+tot_go.ago+tot_go.sep+tot_go.oct+tot_go.nov+tot_go.dic)/12)::numeric(12,0) as total
FROM
(
SELECT 
   go.id_funcionario,
   5::int as orden,
   'RETENCION IVA GRATIFICACION OCASIONAL'::text as concepto,
   -max(go.ene) as ene,
   -max(go.feb) as feb,
   -max(go.mar) as mar,
   -max(go.abr) as abr,
   -max(go.may) as may,
   -max(go.jun) as jun,
   -max(go.jul) as jul,
   -max(go.ago) as ago,
   -max(go.sep) as sep,
   -max(go.oct) as oct,
   -max(go.nov) as nov,
   -max(go.dic) as dic,
   max(go.objeto_gasto) as objeto_gasto
FROM
(
-- ENERO
SELECT
   pd.id_funcionario,
   sum(pd.importe_iva)::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,  
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_gratificaciones_ocasionales_detalles pd
   LEFT JOIN salarios_contratados.planillas_gratificaciones_ocasionales           p ON p.id_planilla_gratificacion_ocasional=pd.id_planilla_gratificacion_ocasional
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=1 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- FEBRERO
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   sum(pd.importe_iva)::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_gratificaciones_ocasionales_detalles   pd
   LEFT JOIN salarios_contratados.planillas_gratificaciones_ocasionales           p ON p.id_planilla_gratificacion_ocasional=pd.id_planilla_gratificacion_ocasional
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=2 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- MARZO
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   sum(pd.importe_iva)::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_gratificaciones_ocasionales_detalles pd
   LEFT JOIN salarios_contratados.planillas_gratificaciones_ocasionales           p ON p.id_planilla_gratificacion_ocasional=pd.id_planilla_gratificacion_ocasional
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=3 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- ABRIL
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   sum(pd.importe_iva)::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_gratificaciones_ocasionales_detalles pd
   LEFT JOIN salarios_contratados.planillas_gratificaciones_ocasionales           p ON p.id_planilla_gratificacion_ocasional=pd.id_planilla_gratificacion_ocasional
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=4 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- MAYO
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   sum(pd.importe_iva)::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_gratificaciones_ocasionales_detalles pd
   LEFT JOIN salarios_contratados.planillas_gratificaciones_ocasionales           p ON p.id_planilla_gratificacion_ocasional=pd.id_planilla_gratificacion_ocasional
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=5 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- JUNIO
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   sum(pd.importe_iva)::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_gratificaciones_ocasionales_detalles pd
   LEFT JOIN salarios_contratados.planillas_gratificaciones_ocasionales           p ON p.id_planilla_gratificacion_ocasional=pd.id_planilla_gratificacion_ocasional
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=6 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- JULIO
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   sum(pd.importe_iva)::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_gratificaciones_ocasionales_detalles pd
   LEFT JOIN salarios_contratados.planillas_gratificaciones_ocasionales           p ON p.id_planilla_gratificacion_ocasional=pd.id_planilla_gratificacion_ocasional
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=7 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- AGOSTO
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   sum(pd.importe_iva)::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_gratificaciones_ocasionales_detalles pd
   LEFT JOIN salarios_contratados.planillas_gratificaciones_ocasionales           p ON p.id_planilla_gratificacion_ocasional=pd.id_planilla_gratificacion_ocasional
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=8 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- SEPTIEMBRE
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   sum(pd.importe_iva)::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_gratificaciones_ocasionales_detalles pd
   LEFT JOIN salarios_contratados.planillas_gratificaciones_ocasionales           p ON p.id_planilla_gratificacion_ocasional=pd.id_planilla_gratificacion_ocasional
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=9 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- OCTUBRE
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   sum(pd.importe_iva)::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_gratificaciones_ocasionales_detalles pd
   LEFT JOIN salarios_contratados.planillas_gratificaciones_ocasionales           p ON p.id_planilla_gratificacion_ocasional=pd.id_planilla_gratificacion_ocasional
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=10 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario 
-----     
UNION
-----   
-- NOVIEMBRE
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   sum(pd.importe_iva)::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_gratificaciones_ocasionales_detalles pd
   LEFT JOIN salarios_contratados.planillas_gratificaciones_ocasionales           p ON p.id_planilla_gratificacion_ocasional=pd.id_planilla_gratificacion_ocasional
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=11 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- DICIEMBRE
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   sum(pd.importe_iva)::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_gratificaciones_ocasionales_detalles pd
   LEFT JOIN salarios_contratados.planillas_gratificaciones_ocasionales           p ON p.id_planilla_gratificacion_ocasional=pd.id_planilla_gratificacion_ocasional
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=12 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario     
) go
GROUP BY 
   go.id_funcionario
) tot_go

) remuneracion;

END;
]]></definition>
</function>

<function name="total_remuneraciones_percibido_contratado"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="1000">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<parameter name="id_funcionario">
		<type name="integer"/>
	</parameter>
	<parameter name="orden">
		<type name="integer"/>
	</parameter>
	<parameter name="concepto">
		<type name="text"/>
	</parameter>
	<parameter name="ene">
		<type name="numeric"/>
	</parameter>
	<parameter name="feb">
		<type name="numeric"/>
	</parameter>
	<parameter name="mar">
		<type name="numeric"/>
	</parameter>
	<parameter name="abr">
		<type name="numeric"/>
	</parameter>
	<parameter name="may">
		<type name="numeric"/>
	</parameter>
	<parameter name="jun">
		<type name="numeric"/>
	</parameter>
	<parameter name="jul">
		<type name="numeric"/>
	</parameter>
	<parameter name="ago">
		<type name="numeric"/>
	</parameter>
	<parameter name="sep">
		<type name="numeric"/>
	</parameter>
	<parameter name="oct">
		<type name="numeric"/>
	</parameter>
	<parameter name="nov">
		<type name="numeric"/>
	</parameter>
	<parameter name="dic">
		<type name="numeric"/>
	</parameter>
	<parameter name="objeto_gasto">
		<type name="integer"/>
	</parameter>
	<parameter name="sub_total">
		<type name="numeric"/>
	</parameter>
	<parameter name="aguinaldo">
		<type name="numeric"/>
	</parameter>
	<parameter name="total">
		<type name="numeric"/>
	</parameter>
	</return-type>
	<parameter name="in_id_administracion" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_gestion" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_id_funcionario" in="true">
		<type name="text"/>
	</parameter>
	<definition><![CDATA[
BEGIN
/*
  * Funcion para generar los pagos realizados durante la gestión solicitada de los funcionarios contratados por mes y gestion
  * Creado    : 2014-10-31 09:54:00
  * Modificado: 2015-02-09 08:48:00
  * Autor: Lic. Gustavo Eloy Alcaraz Bogado
  * Parametros:
  *            in_id_administracion administracion del proceso		
  *            in_gestion           ejercicio aplicado 
  * 	       in_id_funcionario    identificador de funcionarios separados por coma o ingresar '0' para todos los funcionarios	 
  * ------------  
  */
RETURN QUERY 
SELECT
*
FROM
(
-- SUELDO DEVENGADO
SELECT
   tot_sue.id_funcionario,
   tot_sue.orden,
   tot_sue.concepto,
   tot_sue.ene,
   tot_sue.feb,
   tot_sue.mar,
   tot_sue.abr,
   tot_sue.may,
   tot_sue.jun,
   tot_sue.jul,
   tot_sue.ago,
   tot_sue.sep,
   tot_sue.oct,
   tot_sue.nov,
   tot_sue.dic,
   tot_sue.objeto_gasto,
   (tot_sue.ene+tot_sue.feb+tot_sue.mar+tot_sue.abr+tot_sue.may+tot_sue.jun+tot_sue.jul+tot_sue.ago+tot_sue.sep+tot_sue.oct+tot_sue.nov+tot_sue.dic) as sub_total,
   --((tot_sue.ene+tot_sue.feb+tot_sue.mar+tot_sue.abr+tot_sue.may+tot_sue.jun+tot_sue.jul+tot_sue.ago+tot_sue.sep+tot_sue.oct+tot_sue.nov+tot_sue.dic)/12)::numeric(12,0) as aguinaldo,
   COALESCE(sc.ma::numeric(12,0),0) as aguinaldo,
   (tot_sue.ene+tot_sue.feb+tot_sue.mar+tot_sue.abr+tot_sue.may+tot_sue.jun+tot_sue.jul+tot_sue.ago+tot_sue.sep+tot_sue.oct+tot_sue.nov+tot_sue.dic)+
   COALESCE(sc.ma::numeric(12,0),0) as total
   --((tot_sue.ene+tot_sue.feb+tot_sue.mar+tot_sue.abr+tot_sue.may+tot_sue.jun+tot_sue.jul+tot_sue.ago+tot_sue.sep+tot_sue.oct+tot_sue.nov+tot_sue.dic)/12)::numeric(12,0) as total
FROM
(
SELECT 
   sueldo.id_funcionario,
   1::int as orden,
   'SUELDO DEVENGADO'::text as concepto,
   max(sueldo.ene) as ene,
   max(sueldo.feb) as feb,
   max(sueldo.mar) as mar,
   max(sueldo.abr) as abr,
   max(sueldo.may) as may,
   max(sueldo.jun) as jun,
   max(sueldo.jul) as jul,
   max(sueldo.ago) as ago,
   max(sueldo.sep) as sep,
   max(sueldo.oct) as oct,
   max(sueldo.nov) as nov,
   max(sueldo.dic) as dic,
   max(sueldo.objeto_gasto) as objeto_gasto
FROM
(
-- ENERO
SELECT
   dps.id_funcionario,
   (CASE WHEN count(*)>1 THEN sum(dps.monto_devengado+dps.monto_multa) ELSE max(dps.monto_devengado+dps.monto_multa) END)::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,  
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(dps.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_salarios_detalles dps
   LEFT JOIN salarios_contratados.planillas_salarios           ps ON ps.id_planilla_salario=dps.id_planilla_salario
WHERE
   ps.id_estado=1 AND
   ps.id_administracion=in_id_administracion AND
   ps.id_mes=1 AND
   ps.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN dps.id_funcionario>0 ELSE dps.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   dps.id_funcionario
-----     
UNION
-----   
-- FEBRERO
SELECT
   dps.id_funcionario,
   0::numeric(12,0) as ene,
   (CASE WHEN count(*)>1 THEN sum(dps.monto_devengado+dps.monto_multa) ELSE max(dps.monto_devengado+dps.monto_multa) END)::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(dps.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_salarios_detalles dps
   LEFT JOIN salarios_contratados.planillas_salarios           ps ON ps.id_planilla_salario=dps.id_planilla_salario
WHERE
   ps.id_estado=1 AND
   ps.id_administracion=in_id_administracion AND
   ps.id_mes=2 AND
   ps.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN dps.id_funcionario>0 ELSE dps.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   dps.id_funcionario
-----     
UNION
-----   
-- MARZO
SELECT
   dps.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   (CASE WHEN count(*)>1 THEN sum(dps.monto_devengado+dps.monto_multa) ELSE max(dps.monto_devengado+dps.monto_multa) END)::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(dps.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_salarios_detalles dps
   LEFT JOIN salarios_contratados.planillas_salarios           ps ON ps.id_planilla_salario=dps.id_planilla_salario
WHERE
   ps.id_estado=1 AND
   ps.id_administracion=in_id_administracion AND
   ps.id_mes=3 AND
   ps.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN dps.id_funcionario>0 ELSE dps.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   dps.id_funcionario
-----     
UNION
-----   
-- ABRIL
SELECT
   dps.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   (CASE WHEN count(*)>1 THEN sum(dps.monto_devengado+dps.monto_multa) ELSE max(dps.monto_devengado+dps.monto_multa) END)::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(dps.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_salarios_detalles dps
   LEFT JOIN salarios_contratados.planillas_salarios           ps ON ps.id_planilla_salario=dps.id_planilla_salario
WHERE
   ps.id_estado=1 AND
   ps.id_administracion=in_id_administracion AND
   ps.id_mes=4 AND
   ps.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN dps.id_funcionario>0 ELSE dps.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   dps.id_funcionario
-----     
UNION
-----   
-- MAYO
SELECT
   dps.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   (CASE WHEN count(*)>1 THEN sum(dps.monto_devengado+dps.monto_multa) ELSE max(dps.monto_devengado+dps.monto_multa) END)::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(dps.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_salarios_detalles dps
   LEFT JOIN salarios_contratados.planillas_salarios           ps ON ps.id_planilla_salario=dps.id_planilla_salario
WHERE
   ps.id_estado=1 AND
   ps.id_administracion=in_id_administracion AND
   ps.id_mes=5 AND
   ps.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN dps.id_funcionario>0 ELSE dps.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   dps.id_funcionario
-----     
UNION
-----   
-- JUNIO
SELECT
   dps.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   (CASE WHEN count(*)>1 THEN sum(dps.monto_devengado+dps.monto_multa) ELSE max(dps.monto_devengado+dps.monto_multa) END)::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(dps.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_salarios_detalles dps
   LEFT JOIN salarios_contratados.planillas_salarios           ps ON ps.id_planilla_salario=dps.id_planilla_salario
WHERE
   ps.id_estado=1 AND
   ps.id_administracion=in_id_administracion AND
   ps.id_mes=6 AND
   ps.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN dps.id_funcionario>0 ELSE dps.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   dps.id_funcionario
-----     
UNION
-----   
-- JULIO
SELECT
   dps.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   (CASE WHEN count(*)>1 THEN sum(dps.monto_devengado+dps.monto_multa) ELSE max(dps.monto_devengado+dps.monto_multa) END)::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(dps.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_salarios_detalles dps
   LEFT JOIN salarios_contratados.planillas_salarios           ps ON ps.id_planilla_salario=dps.id_planilla_salario
WHERE
   ps.id_estado=1 AND
   ps.id_administracion=in_id_administracion AND
   ps.id_mes=7 AND
   ps.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN dps.id_funcionario>0 ELSE dps.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   dps.id_funcionario
-----     
UNION
-----   
-- AGOSTO
SELECT
   dps.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   (CASE WHEN count(*)>1 THEN sum(dps.monto_devengado+dps.monto_multa) ELSE max(dps.monto_devengado+dps.monto_multa) END)::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(dps.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_salarios_detalles dps
   LEFT JOIN salarios_contratados.planillas_salarios           ps ON ps.id_planilla_salario=dps.id_planilla_salario
WHERE
   ps.id_estado=1 AND
   ps.id_administracion=in_id_administracion AND
   ps.id_mes=8 AND
   ps.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN dps.id_funcionario>0 ELSE dps.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   dps.id_funcionario
-----     
UNION
-----   
-- SEPTIEMBRE
SELECT
   dps.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   (CASE WHEN count(*)>1 THEN sum(dps.monto_devengado+dps.monto_multa) ELSE max(dps.monto_devengado+dps.monto_multa) END)::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(dps.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_salarios_detalles dps
   LEFT JOIN salarios_contratados.planillas_salarios           ps ON ps.id_planilla_salario=dps.id_planilla_salario
WHERE
   ps.id_estado=1 AND
   ps.id_administracion=in_id_administracion AND
   ps.id_mes=9 AND
   ps.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN dps.id_funcionario>0 ELSE dps.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   dps.id_funcionario
-----     
UNION
-----   
-- OCTUBRE
SELECT
   dps.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   (CASE WHEN count(*)>1 THEN sum(dps.monto_devengado+dps.monto_multa) ELSE max(dps.monto_devengado+dps.monto_multa) END)::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(dps.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_salarios_detalles dps
   LEFT JOIN salarios_contratados.planillas_salarios           ps ON ps.id_planilla_salario=dps.id_planilla_salario
WHERE
   ps.id_estado=1 AND
   ps.id_administracion=in_id_administracion AND
   ps.id_mes=10 AND
   ps.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN dps.id_funcionario>0 ELSE dps.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   dps.id_funcionario 
-----     
UNION
-----   
-- NOVIEMBRE
SELECT
   dps.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   (CASE WHEN count(*)>1 THEN sum(dps.monto_devengado+dps.monto_multa) ELSE max(dps.monto_devengado+dps.monto_multa) END)::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(dps.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_salarios_detalles dps
   LEFT JOIN salarios_contratados.planillas_salarios           ps ON ps.id_planilla_salario=dps.id_planilla_salario
WHERE
   ps.id_estado=1 AND
   ps.id_administracion=in_id_administracion AND
   ps.id_mes=11 AND
   ps.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN dps.id_funcionario>0 ELSE dps.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   dps.id_funcionario
-----     
UNION
-----   
-- DICIEMBRE
SELECT
   dps.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   (CASE WHEN count(*)>1 THEN sum(dps.monto_devengado+dps.monto_multa) ELSE max(dps.monto_devengado+dps.monto_multa) END)::numeric(12,0) as dic,
   max(dps.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_salarios_detalles dps
   LEFT JOIN salarios_contratados.planillas_salarios           ps ON ps.id_planilla_salario=dps.id_planilla_salario
WHERE
   ps.id_estado=1 AND
   ps.id_administracion=in_id_administracion AND
   ps.id_mes=12 AND
   ps.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN dps.id_funcionario>0 ELSE dps.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   dps.id_funcionario     
) sueldo
GROUP BY 
   sueldo.id_funcionario
) tot_sue
LEFT JOIN (
	-- AGUINALDO SUELDO CONTRATADOS [141_144_145] SC
	SELECT
	   fa.id_funcionario,
	   (sum(pad.monto)::numeric(12,0)/12)::numeric(12,0) as ma
	FROM
	   salarios_contratados.planillas_aguinaldos_detalles pad
	   LEFT JOIN salarios_contratados.planillas_aguinaldos pa ON pa.id_planilla_aguinaldo=pad.id_planilla_aguinaldo
	   LEFT JOIN salarios_contratados.funcionarios_aguinaldos fa ON fa.id_funcionario_aguinaldo=pad.id_funcionario_aguinaldo
	WHERE
	   pa.gestion=in_gestion AND
	   pa.id_tipo_aguinaldo=1
	GROUP BY 
	   pa.id_tipo_aguinaldo,fa.id_funcionario
) sc ON sc.id_funcionario=tot_sue.id_funcionario 
UNION
-- REMUNERACION EXTRAORDINARIA [RE]
SELECT
   tot_re.id_funcionario,
   tot_re.orden,
   tot_re.concepto,
   tot_re.ene,
   tot_re.feb,
   tot_re.mar,
   tot_re.abr,
   tot_re.may,
   tot_re.jun,
   tot_re.jul,
   tot_re.ago,
   tot_re.sep,
   tot_re.oct,
   tot_re.nov,
   tot_re.dic,
   tot_re.objeto_gasto,
   (tot_re.ene+tot_re.feb+tot_re.mar+tot_re.abr+tot_re.may+tot_re.jun+tot_re.jul+tot_re.ago+tot_re.sep+tot_re.oct+tot_re.nov+tot_re.dic) as sub_total,
   --((tot_re.ene+tot_re.feb+tot_re.mar+tot_re.abr+tot_re.may+tot_re.jun+tot_re.jul+tot_re.ago+tot_re.sep+tot_re.oct+tot_re.nov+tot_re.dic)/12)::numeric(12,0) as aguinaldo,
   COALESCE(re.ma::numeric(12,0),0) as aguinaldo,
   (tot_re.ene+tot_re.feb+tot_re.mar+tot_re.abr+tot_re.may+tot_re.jun+tot_re.jul+tot_re.ago+tot_re.sep+tot_re.oct+tot_re.nov+tot_re.dic)+
   --((tot_re.ene+tot_re.feb+tot_re.mar+tot_re.abr+tot_re.may+tot_re.jun+tot_re.jul+tot_re.ago+tot_re.sep+tot_re.oct+tot_re.nov+tot_re.dic)/12)::numeric(12,0) as total
   COALESCE(re.ma::numeric(12,0),0) as total
FROM
(
SELECT 
   re.id_funcionario,
   2::int as orden,
   ('REM. EXT. (RE) [PROM. '||(sum(re.hs)/count(*))::numeric(12,1)||' HS.]')::text as concepto,
   max(re.ene) as ene,
   max(re.feb) as feb,
   max(re.mar) as mar,
   max(re.abr) as abr,
   max(re.may) as may,
   max(re.jun) as jun,
   max(re.jul) as jul,
   max(re.ago) as ago,
   max(re.sep) as sep,
   max(re.oct) as oct,
   max(re.nov) as nov,
   max(re.dic) as dic,
   max(re.objeto_gasto) as objeto_gasto
FROM
(
-- ENERO
SELECT
   pd.id_funcionario,
   sum(pd.monto)::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,  
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   sum(pd.cantidad_horas)::numeric(12,0) as hs,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_re_detalles pd
   LEFT JOIN salarios_contratados.planillas_re           p ON p.id_planilla_re=pd.id_planilla_re
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=1 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- FEBRERO
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   sum(pd.monto)::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   sum(pd.cantidad_horas)::numeric(12,0) as hs,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_re_detalles   pd
   LEFT JOIN salarios_contratados.planillas_re  p ON p.id_planilla_re=pd.id_planilla_re
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=2 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- MARZO
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   sum(pd.monto)::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   sum(pd.cantidad_horas)::numeric(12,0) as hs,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_re_detalles pd
   LEFT JOIN salarios_contratados.planillas_re           p ON p.id_planilla_re=pd.id_planilla_re
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=3 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- ABRIL
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   sum(pd.monto)::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   sum(pd.cantidad_horas)::numeric(12,0) as hs,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_re_detalles pd
   LEFT JOIN salarios_contratados.planillas_re           p ON p.id_planilla_re=pd.id_planilla_re
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=4 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- MAYO
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   sum(pd.monto)::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   sum(pd.cantidad_horas)::numeric(12,0) as hs,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_re_detalles pd
   LEFT JOIN salarios_contratados.planillas_re           p ON p.id_planilla_re=pd.id_planilla_re
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=5 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- JUNIO
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   sum(pd.monto)::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   sum(pd.cantidad_horas)::numeric(12,0) as hs,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_re_detalles pd
   LEFT JOIN salarios_contratados.planillas_re           p ON p.id_planilla_re=pd.id_planilla_re
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=6 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- JULIO
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   sum(pd.monto)::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   sum(pd.cantidad_horas)::numeric(12,0) as hs,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_re_detalles pd
   LEFT JOIN salarios_contratados.planillas_re           p ON p.id_planilla_re=pd.id_planilla_re
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=7 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- AGOSTO
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   sum(pd.monto)::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   sum(pd.cantidad_horas)::numeric(12,0) as hs,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_re_detalles pd
   LEFT JOIN salarios_contratados.planillas_re           p ON p.id_planilla_re=pd.id_planilla_re
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=8 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- SEPTIEMBRE
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   sum(pd.monto)::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   sum(pd.cantidad_horas)::numeric(12,0) as hs,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_re_detalles pd
   LEFT JOIN salarios_contratados.planillas_re           p ON p.id_planilla_re=pd.id_planilla_re
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=9 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- OCTUBRE
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   sum(pd.monto)::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   sum(pd.cantidad_horas)::numeric(12,0) as hs,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_re_detalles pd
   LEFT JOIN salarios_contratados.planillas_re           p ON p.id_planilla_re=pd.id_planilla_re
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=10 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario 
-----     
UNION
-----   
-- NOVIEMBRE
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   sum(pd.monto)::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   sum(pd.cantidad_horas)::numeric(12,0) as hs,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_re_detalles pd
   LEFT JOIN salarios_contratados.planillas_re           p ON p.id_planilla_re=pd.id_planilla_re
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=11 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- DICIEMBRE
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   sum(pd.monto)::numeric(12,0) as dic,
   sum(pd.cantidad_horas)::numeric(12,0) as hs,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_re_detalles pd
   LEFT JOIN salarios_contratados.planillas_re           p ON p.id_planilla_re=pd.id_planilla_re
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=12 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario     
) re
GROUP BY 
   re.id_funcionario
) tot_re
LEFT JOIN (
	-- AGUINALDO REMUNERACION EXTRAORDINARIA CONTRATADOS [141_144_145] RE
	SELECT
	   fa.id_funcionario,
	   (sum(pad.monto)::numeric(12,0)/12)::numeric(12,0) as ma
	FROM
	   salarios_contratados.planillas_aguinaldos_detalles pad
	   LEFT JOIN salarios_contratados.planillas_aguinaldos pa ON pa.id_planilla_aguinaldo=pad.id_planilla_aguinaldo
	   LEFT JOIN salarios_contratados.funcionarios_aguinaldos fa ON fa.id_funcionario_aguinaldo=pad.id_funcionario_aguinaldo
	WHERE
	   pa.gestion=in_gestion AND
	   pa.id_tipo_aguinaldo=2
	GROUP BY 
	   pa.id_tipo_aguinaldo,fa.id_funcionario
) re ON re.id_funcionario=tot_re.id_funcionario

UNION
-- REMUNERACION ADICIONAL [RA]
SELECT
   tot_ra.id_funcionario,
   tot_ra.orden,
   tot_ra.concepto,
   tot_ra.ene,
   tot_ra.feb,
   tot_ra.mar,
   tot_ra.abr,
   tot_ra.may,
   tot_ra.jun,
   tot_ra.jul,
   tot_ra.ago,
   tot_ra.sep,
   tot_ra.oct,
   tot_ra.nov,
   tot_ra.dic,
   tot_ra.objeto_gasto,
   (tot_ra.ene+tot_ra.feb+tot_ra.mar+tot_ra.abr+tot_ra.may+tot_ra.jun+tot_ra.jul+tot_ra.ago+tot_ra.sep+tot_ra.oct+tot_ra.nov+tot_ra.dic) as sub_total,
   --((tot_ra.ene+tot_ra.feb+tot_ra.mar+tot_ra.abr+tot_ra.may+tot_ra.jun+tot_ra.jul+tot_ra.ago+tot_ra.sep+tot_ra.oct+tot_ra.nov+tot_ra.dic)/12)::numeric(12,0) as aguinaldo,
   COALESCE(ra.ma::numeric(12,0),0) as aguinaldo,
   (tot_ra.ene+tot_ra.feb+tot_ra.mar+tot_ra.abr+tot_ra.may+tot_ra.jun+tot_ra.jul+tot_ra.ago+tot_ra.sep+tot_ra.oct+tot_ra.nov+tot_ra.dic)+
   --((tot_ra.ene+tot_ra.feb+tot_ra.mar+tot_ra.abr+tot_ra.may+tot_ra.jun+tot_ra.jul+tot_ra.ago+tot_ra.sep+tot_ra.oct+tot_ra.nov+tot_ra.dic)/12)::numeric(12,0) as total
   COALESCE(ra.ma::numeric(12,0),0) as total
FROM
(
SELECT 
   ra.id_funcionario,
   3::int as orden,
   ('REM. ADI. (RA) [PROM. '||(sum(ra.hs)/count(*))::numeric(12,1)||' HS.]')::text as concepto,
   max(ra.ene) as ene,
   max(ra.feb) as feb,
   max(ra.mar) as mar,
   max(ra.abr) as abr,
   max(ra.may) as may,
   max(ra.jun) as jun,
   max(ra.jul) as jul,
   max(ra.ago) as ago,
   max(ra.sep) as sep,
   max(ra.oct) as oct,
   max(ra.nov) as nov,
   max(ra.dic) as dic,
   max(ra.objeto_gasto) as objeto_gasto
FROM
(
-- ENERO
SELECT
   pd.id_funcionario,
   sum(pd.monto)::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,  
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   sum(pd.cantidad_horas)::numeric(12,0) as hs,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_ra_detalles pd
   LEFT JOIN salarios_contratados.planillas_ra           p ON p.id_planilla_ra=pd.id_planilla_ra
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=1 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- FEBRERO
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   sum(pd.monto)::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   sum(pd.cantidad_horas)::numeric(12,0) as hs,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_ra_detalles   pd
   LEFT JOIN salarios_contratados.planillas_ra  p ON p.id_planilla_ra=pd.id_planilla_ra
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=2 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- MARZO
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   sum(pd.monto)::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   sum(pd.cantidad_horas)::numeric(12,0) as hs,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_ra_detalles pd
   LEFT JOIN salarios_contratados.planillas_ra           p ON p.id_planilla_ra=pd.id_planilla_ra
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=3 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- ABRIL
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   sum(pd.monto)::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   sum(pd.cantidad_horas)::numeric(12,0) as hs,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_ra_detalles pd
   LEFT JOIN salarios_contratados.planillas_ra           p ON p.id_planilla_ra=pd.id_planilla_ra
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=4 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- MAYO
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   sum(pd.monto)::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   sum(pd.cantidad_horas)::numeric(12,0) as hs,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_ra_detalles pd
   LEFT JOIN salarios_contratados.planillas_ra           p ON p.id_planilla_ra=pd.id_planilla_ra
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=5 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- JUNIO
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   sum(pd.monto)::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   sum(pd.cantidad_horas)::numeric(12,0) as hs,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_ra_detalles pd
   LEFT JOIN salarios_contratados.planillas_ra           p ON p.id_planilla_ra=pd.id_planilla_ra
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=6 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- JULIO
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   sum(pd.monto)::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   sum(pd.cantidad_horas)::numeric(12,0) as hs,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_ra_detalles pd
   LEFT JOIN salarios_contratados.planillas_ra           p ON p.id_planilla_ra=pd.id_planilla_ra
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=7 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- AGOSTO
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   sum(pd.monto)::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   sum(pd.cantidad_horas)::numeric(12,0) as hs,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_ra_detalles pd
   LEFT JOIN salarios_contratados.planillas_ra           p ON p.id_planilla_ra=pd.id_planilla_ra
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=8 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- SEPTIEMBRE
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   sum(pd.monto)::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   sum(pd.cantidad_horas)::numeric(12,0) as hs,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_ra_detalles pd
   LEFT JOIN salarios_contratados.planillas_ra           p ON p.id_planilla_ra=pd.id_planilla_ra
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=9 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- OCTUBRE
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   sum(pd.monto)::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   sum(pd.cantidad_horas)::numeric(12,0) as hs,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_ra_detalles pd
   LEFT JOIN salarios_contratados.planillas_ra           p ON p.id_planilla_ra=pd.id_planilla_ra
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=10 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario 
-----     
UNION
-----   
-- NOVIEMBRE
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   sum(pd.monto)::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   sum(pd.cantidad_horas)::numeric(12,0) as hs,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_ra_detalles pd
   LEFT JOIN salarios_contratados.planillas_ra           p ON p.id_planilla_ra=pd.id_planilla_ra
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=11 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- DICIEMBRE
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   sum(pd.monto)::numeric(12,0) as dic,
   sum(pd.cantidad_horas)::numeric(12,0) as hs,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_ra_detalles pd
   LEFT JOIN salarios_contratados.planillas_ra           p ON p.id_planilla_ra=pd.id_planilla_ra
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=12 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario     
) ra
GROUP BY 
   ra.id_funcionario
) tot_ra
LEFT JOIN (
	-- AGUINALDO REMUNERACION ADICIONAL CONTRATADOS [141_144_145] RA
	SELECT
	   fa.id_funcionario,
	   (sum(pad.monto)::numeric(12,0)/12)::numeric(12,0) as ma
	FROM
	   salarios_contratados.planillas_aguinaldos_detalles pad
	   LEFT JOIN salarios_contratados.planillas_aguinaldos pa ON pa.id_planilla_aguinaldo=pad.id_planilla_aguinaldo
	   LEFT JOIN salarios_contratados.funcionarios_aguinaldos fa ON fa.id_funcionario_aguinaldo=pad.id_funcionario_aguinaldo
	WHERE
	   pa.gestion=in_gestion AND
	   pa.id_tipo_aguinaldo=3
	GROUP BY 
	   pa.id_tipo_aguinaldo,fa.id_funcionario
) ra ON ra.id_funcionario=tot_ra.id_funcionario

UNION
-- SUBSIDIO FAMILIAR
SELECT
   *,
   (tot_subsidio.ene+tot_subsidio.feb+tot_subsidio.mar+tot_subsidio.abr+tot_subsidio.may+tot_subsidio.jun+tot_subsidio.jul+tot_subsidio.ago+tot_subsidio.sep+tot_subsidio.oct+tot_subsidio.nov+tot_subsidio.dic) as sub_total,
   0::numeric(12,0) as aguinaldo,
   (tot_subsidio.ene+tot_subsidio.feb+tot_subsidio.mar+tot_subsidio.abr+tot_subsidio.may+tot_subsidio.jun+tot_subsidio.jul+tot_subsidio.ago+tot_subsidio.sep+tot_subsidio.oct+tot_subsidio.nov+tot_subsidio.dic) as total
FROM
(
SELECT 
   sub.id_funcionario,
   4::int as orden,
   'SUBSIDIO FAMILIAR'::text as concepto,
   max(sub.ene) as ene,
   max(sub.feb) as feb,
   max(sub.mar) as mar,
   max(sub.abr) as abr,
   max(sub.may) as may,
   max(sub.jun) as jun,
   max(sub.jul) as jul,
   max(sub.ago) as ago,
   max(sub.sep) as sep,
   max(sub.oct) as oct,
   max(sub.nov) as nov,
   max(sub.dic) as dic,
   max(sub.objeto_gasto) as objeto_gasto
FROM
(
-- ENERO
SELECT
   fs.id_funcionario,
   sum(pd.importe_subsidio)::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,  
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_subsidios_detalles pd
   LEFT JOIN salarios_contratados.planillas_subsidios           p ON p.id_planilla_subsidio=pd.id_planilla_subsidio
   LEFT JOIN salarios_contratados.funcionarios_subsidios       fs ON fs.id_funcionario_subsidio=pd.id_funcionario_subsidio
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=1 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN fs.id_funcionario>0 ELSE fs.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   fs.id_funcionario
-----     
UNION
-----   
-- FEBRERO
SELECT
   fs.id_funcionario,
   0::numeric(12,0) as ene,
   sum(pd.importe_subsidio)::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_subsidios_detalles   pd
   LEFT JOIN salarios_contratados.planillas_subsidios           p ON p.id_planilla_subsidio=pd.id_planilla_subsidio
   LEFT JOIN salarios_contratados.funcionarios_subsidios       fs ON fs.id_funcionario_subsidio=pd.id_funcionario_subsidio
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=2 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN fs.id_funcionario>0 ELSE fs.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   fs.id_funcionario
-----     
UNION
-----   
-- MARZO
SELECT
   fs.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   sum(pd.importe_subsidio)::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_subsidios_detalles pd
   LEFT JOIN salarios_contratados.planillas_subsidios           p ON p.id_planilla_subsidio=pd.id_planilla_subsidio
   LEFT JOIN salarios_contratados.funcionarios_subsidios       fs ON fs.id_funcionario_subsidio=pd.id_funcionario_subsidio
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=3 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN fs.id_funcionario>0 ELSE fs.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   fs.id_funcionario
-----     
UNION
-----   
-- ABRIL
SELECT
   fs.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   sum(pd.importe_subsidio)::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_subsidios_detalles pd
   LEFT JOIN salarios_contratados.planillas_subsidios           p ON p.id_planilla_subsidio=pd.id_planilla_subsidio
   LEFT JOIN salarios_contratados.funcionarios_subsidios       fs ON fs.id_funcionario_subsidio=pd.id_funcionario_subsidio
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=4 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN fs.id_funcionario>0 ELSE fs.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   fs.id_funcionario
-----     
UNION
-----   
-- MAYO
SELECT
   fs.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   sum(pd.importe_subsidio)::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_subsidios_detalles pd
   LEFT JOIN salarios_contratados.planillas_subsidios           p ON p.id_planilla_subsidio=pd.id_planilla_subsidio
   LEFT JOIN salarios_contratados.funcionarios_subsidios       fs ON fs.id_funcionario_subsidio=pd.id_funcionario_subsidio
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=5 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN fs.id_funcionario>0 ELSE fs.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   fs.id_funcionario
-----     
UNION
-----   
-- JUNIO
SELECT
   fs.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   sum(pd.importe_subsidio)::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_subsidios_detalles pd
   LEFT JOIN salarios_contratados.planillas_subsidios           p ON p.id_planilla_subsidio=pd.id_planilla_subsidio
   LEFT JOIN salarios_contratados.funcionarios_subsidios       fs ON fs.id_funcionario_subsidio=pd.id_funcionario_subsidio
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=6 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN fs.id_funcionario>0 ELSE fs.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   fs.id_funcionario
-----     
UNION
-----   
-- JULIO
SELECT
   fs.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   sum(pd.importe_subsidio)::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_subsidios_detalles pd
   LEFT JOIN salarios_contratados.planillas_subsidios           p ON p.id_planilla_subsidio=pd.id_planilla_subsidio
   LEFT JOIN salarios_contratados.funcionarios_subsidios       fs ON fs.id_funcionario_subsidio=pd.id_funcionario_subsidio
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=7 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN fs.id_funcionario>0 ELSE fs.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   fs.id_funcionario
-----     
UNION
-----   
-- AGOSTO
SELECT
   fs.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   sum(pd.importe_subsidio)::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_subsidios_detalles pd
   LEFT JOIN salarios_contratados.planillas_subsidios           p ON p.id_planilla_subsidio=pd.id_planilla_subsidio
   LEFT JOIN salarios_contratados.funcionarios_subsidios       fs ON fs.id_funcionario_subsidio=pd.id_funcionario_subsidio
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=8 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN fs.id_funcionario>0 ELSE fs.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   fs.id_funcionario
-----     
UNION
-----   
-- SEPTIEMBRE
SELECT
   fs.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   sum(pd.importe_subsidio)::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_subsidios_detalles pd
   LEFT JOIN salarios_contratados.planillas_subsidios           p ON p.id_planilla_subsidio=pd.id_planilla_subsidio
   LEFT JOIN salarios_contratados.funcionarios_subsidios       fs ON fs.id_funcionario_subsidio=pd.id_funcionario_subsidio
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=9 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN fs.id_funcionario>0 ELSE fs.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   fs.id_funcionario
-----     
UNION
-----   
-- OCTUBRE
SELECT
   fs.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   sum(pd.importe_subsidio)::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_subsidios_detalles pd
   LEFT JOIN salarios_contratados.planillas_subsidios           p ON p.id_planilla_subsidio=pd.id_planilla_subsidio
   LEFT JOIN salarios_contratados.funcionarios_subsidios       fs ON fs.id_funcionario_subsidio=pd.id_funcionario_subsidio
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=10 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN fs.id_funcionario>0 ELSE fs.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   fs.id_funcionario 
-----     
UNION
-----   
-- NOVIEMBRE
SELECT
   fs.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   sum(pd.importe_subsidio)::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_subsidios_detalles pd
   LEFT JOIN salarios_contratados.planillas_subsidios           p ON p.id_planilla_subsidio=pd.id_planilla_subsidio
   LEFT JOIN salarios_contratados.funcionarios_subsidios       fs ON fs.id_funcionario_subsidio=pd.id_funcionario_subsidio
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=11 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN fs.id_funcionario>0 ELSE fs.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   fs.id_funcionario
-----     
UNION
-----   
-- DICIEMBRE
SELECT
   fs.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   sum(pd.importe_subsidio)::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_subsidios_detalles pd
   LEFT JOIN salarios_contratados.planillas_subsidios           p ON p.id_planilla_subsidio=pd.id_planilla_subsidio
   LEFT JOIN salarios_contratados.funcionarios_subsidios       fs ON fs.id_funcionario_subsidio=pd.id_funcionario_subsidio
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=12 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN fs.id_funcionario>0 ELSE fs.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   fs.id_funcionario     
) sub
GROUP BY 
   sub.id_funcionario
) tot_subsidio

UNION
-- GRATIFICACION OCASIONAL
SELECT
   tot_go.id_funcionario,
   tot_go.orden,
   tot_go.concepto,
   tot_go.ene,
   tot_go.feb,
   tot_go.mar,
   tot_go.abr,
   tot_go.may,
   tot_go.jun,
   tot_go.jul,
   tot_go.ago,
   tot_go.sep,
   tot_go.oct,
   tot_go.nov,
   tot_go.dic,
   tot_go.objeto_gasto,
   (tot_go.ene+tot_go.feb+tot_go.mar+tot_go.abr+tot_go.may+tot_go.jun+tot_go.jul+tot_go.ago+tot_go.sep+tot_go.oct+tot_go.nov+tot_go.dic) as sub_total,
   --((tot_go.ene+tot_go.feb+tot_go.mar+tot_go.abr+tot_go.may+tot_go.jun+tot_go.jul+tot_go.ago+tot_go.sep+tot_go.oct+tot_go.nov+tot_go.dic)/12)::numeric(12,0) as aguinaldo,
   COALESCE(goa.ma::numeric(12,0),0) as aguinaldo,
   (tot_go.ene+tot_go.feb+tot_go.mar+tot_go.abr+tot_go.may+tot_go.jun+tot_go.jul+tot_go.ago+tot_go.sep+tot_go.oct+tot_go.nov+tot_go.dic)+
   --((tot_go.ene+tot_go.feb+tot_go.mar+tot_go.abr+tot_go.may+tot_go.jun+tot_go.jul+tot_go.ago+tot_go.sep+tot_go.oct+tot_go.nov+tot_go.dic)/12)::numeric(12,0) as total
   COALESCE(goa.ma::numeric(12,0),0) as total
FROM
(
SELECT 
   go.id_funcionario,
   5::int as orden,
   'GRATIFICACION OCASIONAL'::text as concepto,
   max(go.ene) as ene,
   max(go.feb) as feb,
   max(go.mar) as mar,
   max(go.abr) as abr,
   max(go.may) as may,
   max(go.jun) as jun,
   max(go.jul) as jul,
   max(go.ago) as ago,
   max(go.sep) as sep,
   max(go.oct) as oct,
   max(go.nov) as nov,
   max(go.dic) as dic,
   max(go.objeto_gasto) as objeto_gasto
FROM
(
-- ENERO
SELECT
   pd.id_funcionario,
   sum(pd.importe_gratificacion)::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,  
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_gratificaciones_ocasionales_detalles pd
   LEFT JOIN salarios_contratados.planillas_gratificaciones_ocasionales           p ON p.id_planilla_gratificacion_ocasional=pd.id_planilla_gratificacion_ocasional
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=1 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- FEBRERO
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   sum(pd.importe_gratificacion)::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_gratificaciones_ocasionales_detalles   pd
   LEFT JOIN salarios_contratados.planillas_gratificaciones_ocasionales           p ON p.id_planilla_gratificacion_ocasional=pd.id_planilla_gratificacion_ocasional
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=2 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- MARZO
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   sum(pd.importe_gratificacion)::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_gratificaciones_ocasionales_detalles pd
   LEFT JOIN salarios_contratados.planillas_gratificaciones_ocasionales           p ON p.id_planilla_gratificacion_ocasional=pd.id_planilla_gratificacion_ocasional
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=3 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- ABRIL
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   sum(pd.importe_gratificacion)::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_gratificaciones_ocasionales_detalles pd
   LEFT JOIN salarios_contratados.planillas_gratificaciones_ocasionales           p ON p.id_planilla_gratificacion_ocasional=pd.id_planilla_gratificacion_ocasional
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=4 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- MAYO
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   sum(pd.importe_gratificacion)::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_gratificaciones_ocasionales_detalles pd
   LEFT JOIN salarios_contratados.planillas_gratificaciones_ocasionales           p ON p.id_planilla_gratificacion_ocasional=pd.id_planilla_gratificacion_ocasional
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=5 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- JUNIO
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   sum(pd.importe_gratificacion)::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_gratificaciones_ocasionales_detalles pd
   LEFT JOIN salarios_contratados.planillas_gratificaciones_ocasionales           p ON p.id_planilla_gratificacion_ocasional=pd.id_planilla_gratificacion_ocasional
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=6 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- JULIO
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   sum(pd.importe_gratificacion)::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_gratificaciones_ocasionales_detalles pd
   LEFT JOIN salarios_contratados.planillas_gratificaciones_ocasionales           p ON p.id_planilla_gratificacion_ocasional=pd.id_planilla_gratificacion_ocasional
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=7 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- AGOSTO
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   sum(pd.importe_gratificacion)::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_gratificaciones_ocasionales_detalles pd
   LEFT JOIN salarios_contratados.planillas_gratificaciones_ocasionales           p ON p.id_planilla_gratificacion_ocasional=pd.id_planilla_gratificacion_ocasional
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=8 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- SEPTIEMBRE
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   sum(pd.importe_gratificacion)::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_gratificaciones_ocasionales_detalles pd
   LEFT JOIN salarios_contratados.planillas_gratificaciones_ocasionales           p ON p.id_planilla_gratificacion_ocasional=pd.id_planilla_gratificacion_ocasional
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=9 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- OCTUBRE
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   sum(pd.importe_gratificacion)::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_gratificaciones_ocasionales_detalles pd
   LEFT JOIN salarios_contratados.planillas_gratificaciones_ocasionales           p ON p.id_planilla_gratificacion_ocasional=pd.id_planilla_gratificacion_ocasional
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=10 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario 
-----     
UNION
-----   
-- NOVIEMBRE
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   sum(pd.importe_gratificacion)::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_gratificaciones_ocasionales_detalles pd
   LEFT JOIN salarios_contratados.planillas_gratificaciones_ocasionales           p ON p.id_planilla_gratificacion_ocasional=pd.id_planilla_gratificacion_ocasional
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=11 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- DICIEMBRE
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   sum(pd.importe_gratificacion)::numeric(12,0) as dic,
   max(pd.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_gratificaciones_ocasionales_detalles pd
   LEFT JOIN salarios_contratados.planillas_gratificaciones_ocasionales           p ON p.id_planilla_gratificacion_ocasional=pd.id_planilla_gratificacion_ocasional
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=12 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario     
) go
GROUP BY 
   go.id_funcionario
) tot_go
LEFT JOIN (
	-- AGUINALDO GRATIFICACION OCASIONAL CONTRATADOS [141_144_145]
	SELECT
	   fa.id_funcionario,
	   (sum(pad.monto)::numeric(12,0)/12)::numeric(12,0) as ma
	FROM
	   salarios_contratados.planillas_aguinaldos_detalles pad
	   LEFT JOIN salarios_contratados.planillas_aguinaldos pa ON pa.id_planilla_aguinaldo=pad.id_planilla_aguinaldo
	   LEFT JOIN salarios_contratados.funcionarios_aguinaldos fa ON fa.id_funcionario_aguinaldo=pad.id_funcionario_aguinaldo
	WHERE
	   pa.gestion=in_gestion AND
	   pa.id_tipo_aguinaldo=4
	GROUP BY 
	   pa.id_tipo_aguinaldo,fa.id_funcionario
) goa ON goa.id_funcionario=tot_go.id_funcionario 
) remuneracion  

UNION
-- MULTAS
SELECT
   tot_multas.id_funcionario,
   tot_multas.orden,
   tot_multas.concepto,
   tot_multas.ene,
   tot_multas.feb,
   tot_multas.mar,
   tot_multas.abr,
   tot_multas.may,
   tot_multas.jun,
   tot_multas.jul,
   tot_multas.ago,
   tot_multas.sep,
   tot_multas.oct,
   tot_multas.nov,
   tot_multas.dic,
   tot_multas.objeto_gasto,
   (tot_multas.ene+tot_multas.feb+tot_multas.mar+tot_multas.abr+tot_multas.may+tot_multas.jun+tot_multas.jul+tot_multas.ago+tot_multas.sep+tot_multas.oct+tot_multas.nov+tot_multas.dic) as sub_total,
   0::numeric(12,0) as aguinaldo,
   (tot_multas.ene+tot_multas.feb+tot_multas.mar+tot_multas.abr+tot_multas.may+tot_multas.jun+tot_multas.jul+tot_multas.ago+tot_multas.sep+tot_multas.oct+tot_multas.nov+tot_multas.dic)::numeric(12,0) as total
FROM
(
SELECT 
   sueldo.id_funcionario,
   53::int as orden,
   'MULTAS'::text as concepto,
   -max(sueldo.ene) as ene,
   -max(sueldo.feb) as feb,
   -max(sueldo.mar) as mar,
   -max(sueldo.abr) as abr,
   -max(sueldo.may) as may,
   -max(sueldo.jun) as jun,
   -max(sueldo.jul) as jul,
   -max(sueldo.ago) as ago,
   -max(sueldo.sep) as sep,
   -max(sueldo.oct) as oct,
   -max(sueldo.nov) as nov,
   -max(sueldo.dic) as dic,
   max(sueldo.objeto_gasto) as objeto_gasto
FROM
(
-- ENERO
SELECT
   dps.id_funcionario,
   (CASE WHEN count(*)>1 THEN sum(dps.monto_multa) ELSE max(dps.monto_multa) END)::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,  
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(dps.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_salarios_detalles dps
   LEFT JOIN salarios_contratados.planillas_salarios           ps ON ps.id_planilla_salario=dps.id_planilla_salario
WHERE
   ps.id_estado=1 AND
   ps.id_administracion=in_id_administracion AND
   ps.id_mes=1 AND
   ps.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN dps.id_funcionario>0 ELSE dps.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   dps.id_funcionario
-----     
UNION
-----   
-- FEBRERO
SELECT
   dps.id_funcionario,
   0::numeric(12,0) as ene,
   (CASE WHEN count(*)>1 THEN sum(dps.monto_multa) ELSE max(dps.monto_multa) END)::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(dps.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_salarios_detalles dps
   LEFT JOIN salarios_contratados.planillas_salarios           ps ON ps.id_planilla_salario=dps.id_planilla_salario
WHERE
   ps.id_estado=1 AND
   ps.id_administracion=in_id_administracion AND
   ps.id_mes=2 AND
   ps.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN dps.id_funcionario>0 ELSE dps.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   dps.id_funcionario
-----     
UNION
-----   
-- MARZO
SELECT
   dps.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   (CASE WHEN count(*)>1 THEN sum(dps.monto_multa) ELSE max(dps.monto_multa) END)::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(dps.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_salarios_detalles dps
   LEFT JOIN salarios_contratados.planillas_salarios           ps ON ps.id_planilla_salario=dps.id_planilla_salario
WHERE
   ps.id_estado=1 AND
   ps.id_administracion=in_id_administracion AND
   ps.id_mes=3 AND
   ps.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN dps.id_funcionario>0 ELSE dps.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   dps.id_funcionario
-----     
UNION
-----   
-- ABRIL
SELECT
   dps.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   (CASE WHEN count(*)>1 THEN sum(dps.monto_multa) ELSE max(dps.monto_multa) END)::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(dps.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_salarios_detalles dps
   LEFT JOIN salarios_contratados.planillas_salarios           ps ON ps.id_planilla_salario=dps.id_planilla_salario
WHERE
   ps.id_estado=1 AND
   ps.id_administracion=in_id_administracion AND
   ps.id_mes=4 AND
   ps.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN dps.id_funcionario>0 ELSE dps.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   dps.id_funcionario
-----     
UNION
-----   
-- MAYO
SELECT
   dps.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   (CASE WHEN count(*)>1 THEN sum(dps.monto_multa) ELSE max(dps.monto_multa) END)::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(dps.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_salarios_detalles dps
   LEFT JOIN salarios_contratados.planillas_salarios           ps ON ps.id_planilla_salario=dps.id_planilla_salario
WHERE
   ps.id_estado=1 AND
   ps.id_administracion=in_id_administracion AND
   ps.id_mes=5 AND
   ps.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN dps.id_funcionario>0 ELSE dps.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   dps.id_funcionario
-----     
UNION
-----   
-- JUNIO
SELECT
   dps.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   (CASE WHEN count(*)>1 THEN sum(dps.monto_multa) ELSE max(dps.monto_multa) END)::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(dps.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_salarios_detalles dps
   LEFT JOIN salarios_contratados.planillas_salarios           ps ON ps.id_planilla_salario=dps.id_planilla_salario
WHERE
   ps.id_estado=1 AND
   ps.id_administracion=in_id_administracion AND
   ps.id_mes=6 AND
   ps.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN dps.id_funcionario>0 ELSE dps.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   dps.id_funcionario
-----     
UNION
-----   
-- JULIO
SELECT
   dps.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   (CASE WHEN count(*)>1 THEN sum(dps.monto_multa) ELSE max(dps.monto_multa) END)::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(dps.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_salarios_detalles dps
   LEFT JOIN salarios_contratados.planillas_salarios           ps ON ps.id_planilla_salario=dps.id_planilla_salario
WHERE
   ps.id_estado=1 AND
   ps.id_administracion=in_id_administracion AND
   ps.id_mes=7 AND
   ps.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN dps.id_funcionario>0 ELSE dps.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   dps.id_funcionario
-----     
UNION
-----   
-- AGOSTO
SELECT
   dps.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   (CASE WHEN count(*)>1 THEN sum(dps.monto_multa) ELSE max(dps.monto_multa) END)::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(dps.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_salarios_detalles dps
   LEFT JOIN salarios_contratados.planillas_salarios           ps ON ps.id_planilla_salario=dps.id_planilla_salario
WHERE
   ps.id_estado=1 AND
   ps.id_administracion=in_id_administracion AND
   ps.id_mes=8 AND
   ps.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN dps.id_funcionario>0 ELSE dps.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   dps.id_funcionario
-----     
UNION
-----   
-- SEPTIEMBRE
SELECT
   dps.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   (CASE WHEN count(*)>1 THEN sum(dps.monto_multa) ELSE max(dps.monto_multa) END)::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(dps.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_salarios_detalles dps
   LEFT JOIN salarios_contratados.planillas_salarios           ps ON ps.id_planilla_salario=dps.id_planilla_salario
WHERE
   ps.id_estado=1 AND
   ps.id_administracion=in_id_administracion AND
   ps.id_mes=9 AND
   ps.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN dps.id_funcionario>0 ELSE dps.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   dps.id_funcionario
-----     
UNION
-----   
-- OCTUBRE
SELECT
   dps.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   (CASE WHEN count(*)>1 THEN sum(dps.monto_multa) ELSE max(dps.monto_multa) END)::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(dps.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_salarios_detalles dps
   LEFT JOIN salarios_contratados.planillas_salarios           ps ON ps.id_planilla_salario=dps.id_planilla_salario
WHERE
   ps.id_estado=1 AND
   ps.id_administracion=in_id_administracion AND
   ps.id_mes=10 AND
   ps.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN dps.id_funcionario>0 ELSE dps.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   dps.id_funcionario 
-----     
UNION
-----   
-- NOVIEMBRE
SELECT
   dps.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   (CASE WHEN count(*)>1 THEN sum(dps.monto_multa) ELSE max(dps.monto_multa) END)::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   max(dps.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_salarios_detalles dps
   LEFT JOIN salarios_contratados.planillas_salarios           ps ON ps.id_planilla_salario=dps.id_planilla_salario
WHERE
   ps.id_estado=1 AND
   ps.id_administracion=in_id_administracion AND
   ps.id_mes=11 AND
   ps.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN dps.id_funcionario>0 ELSE dps.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   dps.id_funcionario
-----     
UNION
-----   
-- DICIEMBRE
SELECT
   dps.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   (CASE WHEN count(*)>1 THEN sum(dps.monto_multa) ELSE max(dps.monto_multa) END)::numeric(12,0) as dic,
   max(dps.objeto_gasto) as objeto_gasto
FROM
   salarios_contratados.planillas_salarios_detalles dps
   LEFT JOIN salarios_contratados.planillas_salarios           ps ON ps.id_planilla_salario=dps.id_planilla_salario
WHERE
   ps.id_estado=1 AND
   ps.id_administracion=in_id_administracion AND
   ps.id_mes=12 AND
   ps.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN dps.id_funcionario>0 ELSE dps.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   dps.id_funcionario     
) sueldo
GROUP BY 
   sueldo.id_funcionario
) tot_multas
WHERE (tot_multas.ene+tot_multas.feb+tot_multas.mar+tot_multas.abr+tot_multas.may+tot_multas.jun+tot_multas.jul+tot_multas.ago+tot_multas.sep+tot_multas.oct+tot_multas.nov+tot_multas.dic)::numeric(12,0)<0

UNION
-- OTROS DESCUENTOS
SELECT
   *,
   (tot_des.ene+tot_des.feb+tot_des.mar+tot_des.abr+tot_des.may+tot_des.jun+tot_des.jul+tot_des.ago+tot_des.sep+tot_des.oct+tot_des.nov+tot_des.dic) as sub_total,
   0::numeric(12,0) as aguinaldo,
   (tot_des.ene+tot_des.feb+tot_des.mar+tot_des.abr+tot_des.may+tot_des.jun+tot_des.jul+tot_des.ago+tot_des.sep+tot_des.oct+tot_des.nov+tot_des.dic) as total
FROM
(
SELECT 
   des.id_funcionario,
   55::int as orden,
   'OTROS DESCUENTOS '::text as concepto,
   -max(des.ene) as ene,
   -max(des.feb) as feb,
   -max(des.mar) as mar,
   -max(des.abr) as abr,
   -max(des.may) as may,
   -max(des.jun) as jun,
   -max(des.jul) as jul,
   -max(des.ago) as ago,
   -max(des.sep) as sep,
   -max(des.oct) as oct,
   -max(des.nov) as nov,
   -max(des.dic) as dic,
   0::int as objeto_gasto
FROM
(
-- ENERO
SELECT
   pd.id_funcionario,
   sum(pd.monto_descuento)::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,  
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   0::int as objeto_gasto
FROM
   salarios_contratados.planillas_descuentos_detalles pd
   LEFT JOIN salarios_contratados.planillas_descuentos           p ON p.id_planilla_descuento=pd.id_planilla_descuento
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=1 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- FEBRERO
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   sum(pd.monto_descuento)::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   0::int as objeto_gasto
FROM
   salarios_contratados.planillas_descuentos_detalles   pd
   LEFT JOIN salarios_contratados.planillas_descuentos           p ON p.id_planilla_descuento=pd.id_planilla_descuento
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=2 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- MARZO
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   sum(pd.monto_descuento)::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   0::int as objeto_gasto
FROM
   salarios_contratados.planillas_descuentos_detalles pd
   LEFT JOIN salarios_contratados.planillas_descuentos           p ON p.id_planilla_descuento=pd.id_planilla_descuento
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=3 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- ABRIL
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   sum(pd.monto_descuento)::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   0::int as objeto_gasto
FROM
   salarios_contratados.planillas_descuentos_detalles pd
   LEFT JOIN salarios_contratados.planillas_descuentos           p ON p.id_planilla_descuento=pd.id_planilla_descuento
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=4 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- MAYO
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   sum(pd.monto_descuento)::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   0::int as objeto_gasto
FROM
   salarios_contratados.planillas_descuentos_detalles pd
   LEFT JOIN salarios_contratados.planillas_descuentos           p ON p.id_planilla_descuento=pd.id_planilla_descuento
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=5 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- JUNIO
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   sum(pd.monto_descuento)::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   0::int as objeto_gasto
FROM
   salarios_contratados.planillas_descuentos_detalles pd
   LEFT JOIN salarios_contratados.planillas_descuentos           p ON p.id_planilla_descuento=pd.id_planilla_descuento
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=6 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- JULIO
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   sum(pd.monto_descuento)::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   0::int as objeto_gasto
FROM
   salarios_contratados.planillas_descuentos_detalles pd
   LEFT JOIN salarios_contratados.planillas_descuentos           p ON p.id_planilla_descuento=pd.id_planilla_descuento
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=7 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- AGOSTO
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   sum(pd.monto_descuento)::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   0::int as objeto_gasto
FROM
   salarios_contratados.planillas_descuentos_detalles pd
   LEFT JOIN salarios_contratados.planillas_descuentos           p ON p.id_planilla_descuento=pd.id_planilla_descuento
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=8 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- SEPTIEMBRE
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   sum(pd.monto_descuento)::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   0::int as objeto_gasto
FROM
   salarios_contratados.planillas_descuentos_detalles pd
   LEFT JOIN salarios_contratados.planillas_descuentos           p ON p.id_planilla_descuento=pd.id_planilla_descuento
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=9 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- OCTUBRE
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   sum(pd.monto_descuento)::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   0::int as objeto_gasto
FROM
   salarios_contratados.planillas_descuentos_detalles pd
   LEFT JOIN salarios_contratados.planillas_descuentos           p ON p.id_planilla_descuento=pd.id_planilla_descuento
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=10 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario 
-----     
UNION
-----   
-- NOVIEMBRE
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   sum(pd.monto_descuento)::numeric(12,0) as nov,
   0::numeric(12,0) as dic,
   0::int as objeto_gasto
FROM
   salarios_contratados.planillas_descuentos_detalles pd
   LEFT JOIN salarios_contratados.planillas_descuentos           p ON p.id_planilla_descuento=pd.id_planilla_descuento
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=11 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario
-----     
UNION
-----   
-- DICIEMBRE
SELECT
   pd.id_funcionario,
   0::numeric(12,0) as ene,
   0::numeric(12,0) as feb,
   0::numeric(12,0) as mar,
   0::numeric(12,0) as abr,
   0::numeric(12,0) as may,
   0::numeric(12,0) as jun,
   0::numeric(12,0) as jul,
   0::numeric(12,0) as ago,
   0::numeric(12,0) as sep,
   0::numeric(12,0) as oct,
   0::numeric(12,0) as nov,
   sum(pd.monto_descuento)::numeric(12,0) as dic,
   0::int as objeto_gasto
FROM
   salarios_contratados.planillas_descuentos_detalles pd
   LEFT JOIN salarios_contratados.planillas_descuentos           p ON p.id_planilla_descuento=pd.id_planilla_descuento
WHERE
   p.estado=1 AND
   p.id_administracion=in_id_administracion AND
   p.id_mes=12 AND
   p.gestion=in_gestion 
   AND CASE WHEN in_id_funcionario='0' THEN pd.id_funcionario>0 ELSE pd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END
GROUP BY 
   pd.id_funcionario     
) des
GROUP BY 
   des.id_funcionario
) tot_des
;

END;
]]></definition>
</function>

<function name="total_remuneraciones_resumen_contratado"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="1000">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<parameter name="id_funcionario">
		<type name="integer"/>
	</parameter>
	<parameter name="orden">
		<type name="integer"/>
	</parameter>
	<parameter name="cedula">
		<type name="text"/>
	</parameter>
	<parameter name="funcionario">
		<type name="text"/>
	</parameter>
	<parameter name="fecha_nac">
		<type name="text"/>
	</parameter>
	<parameter name="edad">
		<type name="text"/>
	</parameter>
	<parameter name="decreto_nomb">
		<type name="text"/>
	</parameter>
	<parameter name="fecha_nomb">
		<type name="text"/>
	</parameter>
	<parameter name="antiguedad">
		<type name="text"/>
	</parameter>
	<parameter name="categoria">
		<type name="text"/>
	</parameter>
	<parameter name="cargo">
		<type name="text"/>
	</parameter>
	<parameter name="sueldo_mensual">
		<type name="integer"/>
	</parameter>
	<parameter name="concepto">
		<type name="text"/>
	</parameter>
	<parameter name="ene">
		<type name="numeric"/>
	</parameter>
	<parameter name="feb">
		<type name="numeric"/>
	</parameter>
	<parameter name="mar">
		<type name="numeric"/>
	</parameter>
	<parameter name="abr">
		<type name="numeric"/>
	</parameter>
	<parameter name="may">
		<type name="numeric"/>
	</parameter>
	<parameter name="jun">
		<type name="numeric"/>
	</parameter>
	<parameter name="jul">
		<type name="numeric"/>
	</parameter>
	<parameter name="ago">
		<type name="numeric"/>
	</parameter>
	<parameter name="sep">
		<type name="numeric"/>
	</parameter>
	<parameter name="oct">
		<type name="numeric"/>
	</parameter>
	<parameter name="nov">
		<type name="numeric"/>
	</parameter>
	<parameter name="dic">
		<type name="numeric"/>
	</parameter>
	<parameter name="objeto_gasto">
		<type name="integer"/>
	</parameter>
	<parameter name="sub_total">
		<type name="numeric"/>
	</parameter>
	<parameter name="aguinaldo">
		<type name="numeric"/>
	</parameter>
	<parameter name="total">
		<type name="numeric"/>
	</parameter>
	<parameter name="n1_nombre">
		<type name="text"/>
	</parameter>
	<parameter name="n2_nombre">
		<type name="text"/>
	</parameter>
	<parameter name="n3_nombre">
		<type name="text"/>
	</parameter>
	<parameter name="n4_nombre">
		<type name="text"/>
	</parameter>
	<parameter name="n5_nombre">
		<type name="text"/>
	</parameter>
	<parameter name="n1">
		<type name="integer"/>
	</parameter>
	<parameter name="n2">
		<type name="integer"/>
	</parameter>
	<parameter name="n3">
		<type name="integer"/>
	</parameter>
	<parameter name="n4">
		<type name="integer"/>
	</parameter>
	<parameter name="n5">
		<type name="integer"/>
	</parameter>
	</return-type>
	<parameter name="in_id_administracion" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_gestion" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_id_funcionario" in="true">
		<type name="text"/>
	</parameter>
	<definition><![CDATA[
BEGIN
/*
  * Funcion para generar resumen de liquidaciones durante la gestión solicitada del personal contratado por mes y gestion
  * Creado    : 2014-11-03 11:52:00
  * Modificado: 2014-11-05 12:23:00
  * Autor: Lic. Gustavo Eloy Alcaraz Bogado
  * Parametros:
  *            in_id_administracion administracion del proceso		
  *            in_gestion           ejercicio aplicado 
  * 	       in_id_funcionario    identifiacador de funcionarios separados por coma o ingresar '0' para todos los funcionarios	 
  * ------------  
  */
RETURN QUERY 
SELECT
   f.id_funcionario,
   liq.orden,
   trim(replace(to_char(f.cedula_funcionario::int,'999,999,999'),',','.')::text) as cedula,
   f.ape_nom_funcionario::text,
   to_char(f.fecha_nac_funcionario,'dd/MM/YYYY')::text as fecha_nac,
   (extract(year from(age(now()::date,f.fecha_nac_funcionario)))|| 
           case when extract(year from(age(now()::date,f.fecha_nac_funcionario))) <= 1 
                then ' AÑO ' else ' AÑOS ' end
             || extract(month from(age(now()::date,f.fecha_nac_funcionario))) 
             || case when extract(month from(age(now()::date,f.fecha_nac_funcionario))) <= 1 
                      then ' MES ' else ' MESES ' end 
             || extract(day from(age(now()::date,f.fecha_nac_funcionario))) 
             || case when extract(day from(age(now()::date,f.fecha_nac_funcionario))) <= 1 then ' DIA' else ' DIAS' end)::text AS edad,
   dps.nro_contrato::text,
   (case when sa.fecha_inicio is not null then to_char(sa.fecha_inicio::timestamp with time zone, 'DD/MM/YYYY'::text) else '- - -' end)::text  AS fecha_nomb,--fecha_nomb
   funcion_antiguedad_en_texto(funcion_calcular_antiguedad(f.id_funcionario,now()::date))::text as antiguedad,
   dps.categoria::text,--categoria
   dps.descripcion_funcion::text,--cargo
   dps.monto_contrato::integer,--sueldo_mensual
   liq.concepto,
   liq.ene,liq.feb,liq.mar,liq.abr,
   liq.may,liq.jun,liq.jul,liq.ago,
   liq.sep,liq.oct,liq.nov,liq.dic,
   liq.objeto_gasto,
   liq.sub_total,
   liq.aguinaldo,
   liq.total,
   ofi.nombre_nivel1::text,
   ofi.nombre_nivel2::text,
   ofi.nombre_nivel3::text,
   ofi.nombre_nivel4::text,
   ofi.nombre_nivel5::text,
   ofi.nivel1,
   ofi.nivel2,
   ofi.nivel3,
   ofi.nivel4,
   ofi.nivel5
FROM 
   legajos.funcionarios f
   LEFT JOIN (
	SELECT
	   *
	FROM
	   (
	   (--CONCEPTOS PAGOS
	   SELECT 
	      *
	   FROM
	      salarios_contratados.total_remuneraciones_percibido_contratado(in_id_administracion,in_gestion,in_id_funcionario)
	   UNION
	   SELECT
	      suma_totales.id_funcionario::int as id_funcionario,
	      40::int as orden,
	      'SUMA DE TOTALES'::text as concepto,
	      CASE WHEN sum(suma_totales.ene)<0 THEN 0 ELSE sum(suma_totales.ene) END as ene,
	      CASE WHEN sum(suma_totales.feb)<0 THEN 0 ELSE sum(suma_totales.feb) END as feb,
	      CASE WHEN sum(suma_totales.mar)<0 THEN 0 ELSE sum(suma_totales.mar) END as mar,
	      CASE WHEN sum(suma_totales.abr)<0 THEN 0 ELSE sum(suma_totales.abr) END as abr,
	      CASE WHEN sum(suma_totales.may)<0 THEN 0 ELSE sum(suma_totales.may) END as may,
	      CASE WHEN sum(suma_totales.jun)<0 THEN 0 ELSE sum(suma_totales.jun) END as jun,
	      CASE WHEN sum(suma_totales.jul)<0 THEN 0 ELSE sum(suma_totales.jul) END as jul,
	      CASE WHEN sum(suma_totales.ago)<0 THEN 0 ELSE sum(suma_totales.ago) END as ago,
	      CASE WHEN sum(suma_totales.sep)<0 THEN 0 ELSE sum(suma_totales.sep) END as sep,
	      CASE WHEN sum(suma_totales.oct)<0 THEN 0 ELSE sum(suma_totales.oct) END as oct,
	      CASE WHEN sum(suma_totales.nov)<0 THEN 0 ELSE sum(suma_totales.nov) END as nov,
	      CASE WHEN sum(suma_totales.dic)<0 THEN 0 ELSE sum(suma_totales.dic) END as dic,
	      max(suma_totales.objeto_gasto) as objeto_gasto,
	      CASE WHEN sum(suma_totales.sub_total)<0 THEN 0 ELSE sum(suma_totales.sub_total) END as sub_total,
	      CASE WHEN sum(suma_totales.aguinaldo)<0 THEN 0 ELSE sum(suma_totales.aguinaldo) END as aguinaldo,
	      CASE WHEN sum(suma_totales.total)<0 THEN 0 ELSE sum(suma_totales.total) END as total
	   FROM
	      (--TOTAL SUMAS PAGOS
	      SELECT 
	         *
	      FROM
	         salarios_contratados.total_remuneraciones_percibido_contratado(in_id_administracion,in_gestion,in_id_funcionario) st
	      WHERE 
	         st.orden>0 AND st.orden<40
	      ) suma_totales
	   GROUP BY 
	      suma_totales.id_funcionario
	   UNION
	   --CONCEPTOS RETENCIONES IVA
	   SELECT 
	      ca.id_funcionario::int as id_funcionario,
	      50::int as orden,
	      'RETENCION IVA'::text as concepto,
	      sum(ca.ene) as ene,
	      sum(ca.feb) as feb,
	      sum(ca.mar) as mar,
	      sum(ca.abr) as abr,
	      sum(ca.may) as may,
	      sum(ca.jun) as jun,
	      sum(ca.jul) as jul,
	      sum(ca.ago) as ago,
	      sum(ca.sep) as sep,
	      sum(ca.oct) as oct,
	      sum(ca.nov) as nov,
	      sum(ca.dic) as dic,
	      max(ca.objeto_gasto) as objeto_gasto,
	      sum(ca.sub_total) as sub_total,
	      0 as aguinaldo,
	      sum(ca.total) as total
	   FROM
	      salarios_contratados.total_remuneraciones_iva_contratado(in_id_administracion,in_gestion,in_id_funcionario) ca
	   GROUP BY
	      ca.id_funcionario
	   )
	   UNION
	   --TOTAL RED BANCARIA
	   (
	   SELECT
	   resumen.id_funcionario::int as id_funcionario,60::int as orden,'TOTAL VIA RED BANCARIA'::text as concepto,
	      CASE WHEN sum(resumen.ene)<0 THEN 0 ELSE sum(resumen.ene) END as ene,
	      CASE WHEN sum(resumen.feb)<0 THEN 0 ELSE sum(resumen.feb) END as feb,
	      CASE WHEN sum(resumen.mar)<0 THEN 0 ELSE sum(resumen.mar) END as mar,
	      CASE WHEN sum(resumen.abr)<0 THEN 0 ELSE sum(resumen.abr) END as abr,
	      CASE WHEN sum(resumen.may)<0 THEN 0 ELSE sum(resumen.may) END as may,
	      CASE WHEN sum(resumen.jun)<0 THEN 0 ELSE sum(resumen.jun) END as jun,
	      CASE WHEN sum(resumen.jul)<0 THEN 0 ELSE sum(resumen.jul) END as jul,
	      CASE WHEN sum(resumen.ago)<0 THEN 0 ELSE sum(resumen.ago) END as ago,
	      CASE WHEN sum(resumen.sep)<0 THEN 0 ELSE sum(resumen.sep) END as sep,
	      CASE WHEN sum(resumen.oct)<0 THEN 0 ELSE sum(resumen.oct) END as oct,
	      CASE WHEN sum(resumen.nov)<0 THEN 0 ELSE sum(resumen.nov) END as nov,
	      CASE WHEN sum(resumen.dic)<0 THEN 0 ELSE sum(resumen.dic) END as dic,
	      max(resumen.objeto_gasto) as objeto_gasto,
	      CASE WHEN sum(resumen.sub_total)<0 THEN 0 ELSE sum(resumen.sub_total) END as sub_total,
	      CASE WHEN sum(resumen.aguinaldo)<0 THEN 0 ELSE sum(resumen.aguinaldo) END as aguinaldo,
	      CASE WHEN sum(resumen.total)<0 THEN 0 ELSE sum(resumen.total) END as total
	   FROM
	      (
	      (--CONCEPTOS PAGOS
	      SELECT 
	         *
	      FROM
	         salarios_contratados.total_remuneraciones_percibido_contratado(in_id_administracion,in_gestion,in_id_funcionario)
	      UNION
	      --CONCEPTOS RETENCION IVA
	      SELECT 
	         ca2.id_funcionario::int as id_funcionario,
	         50::int as orden,
	         'RETENCION IVA'::text as concepto,
	         sum(ca2.ene) as ene,
	         sum(ca2.feb) as feb,
	         sum(ca2.mar) as mar,
	         sum(ca2.abr) as abr,
	         sum(ca2.may) as may,
	         sum(ca2.jun) as jun,
	         sum(ca2.jul) as jul,
	         sum(ca2.ago) as ago,
	         sum(ca2.sep) as sep,
	         sum(ca2.oct) as oct,
	         sum(ca2.nov) as nov,
	         sum(ca2.dic) as dic,
	         max(ca2.objeto_gasto) as objeto_gasto,
	         sum(ca2.sub_total) as sub_total,
	         0 as aguinaldo,
	         sum(ca2.total) as total
	      FROM
	         salarios_contratados.total_remuneraciones_iva_contratado(in_id_administracion,in_gestion,in_id_funcionario) ca2
	      GROUP BY
	         ca2.id_funcionario
	     )
	     ) resumen
	   GROUP BY
	      resumen.id_funcionario
	   )
	) resumen
	WHERE
	CASE WHEN in_id_funcionario='0' THEN resumen.id_funcionario>0 ELSE resumen.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END 
	--id_funcionario IN(466)
   ) liq ON liq.id_funcionario=f.id_funcionario
   LEFT JOIN (
	SELECT
	   fc2.id_funcionario_contrato, 
	   fc2.id_oficina, 
	   fc2.gestion, 
	   fc2.id_administracion, 
	   fc2.id_funcionario_contratado, 
	   fc2.id_funcionario, 
	   fc2.id_tipo_contrato, 
	   fc2.nro_contrato, 
	   fc2.monto_contrato,  
	   fc2.porcentaje_iva, 
	   fc2.porcentaje_retencion, 
	   fc2.iva, 
	   fc2.ruc,
	   fc2.desde,
	   fc2.hasta, 
	   fc2.objeto_gasto, 
	   fc2.estado, 
	   fc2.categoria, 
	   fc2.id_oficina_presta,
	   fc2.cod_fuente_financiamiento,
           fun.descripcion_funcion
	FROM
	(
	   SELECT 
	      max(fc.id_funcionario_contrato) as id_funcionario_contrato
	   FROM 
	      salarios_contratados.funcionarios_contratos fc
	   WHERE 
	      CASE WHEN in_id_funcionario='0' THEN fc.id_funcionario>0 ELSE fc.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END AND
	      fc.id_administracion IN(in_id_administracion) AND
	      fc.gestion>=in_gestion 
	      --AND 6 between extract(month from fc.desde) AND extract(month from fc.hasta)
	   GROUP BY 
	      fc.id_funcionario
	) fc1
	LEFT JOIN (
	   SELECT 
	      fc.id_funcionario_contrato, 
	      fc.id_oficina, 
	      fc.gestion, 
              fc.id_administracion, 
	      fc.id_funcionario_contratado, 
	      fc.id_funcionario, 
              fc.id_tipo_contrato, 
	      fc.nro_contrato, 
	      fc.monto_contrato,  
	      fc.porcentaje_iva, 
	      fc.porcentaje_retencion, 
	      fc.iva, 
	      fc.ruc,
	      fc.desde, 
	      fc.hasta, 
	      fc.objeto_gasto, 
	      fc.estado, 
	      fc.categoria, 
	      fc.id_oficina_presta,
	      fc.cod_fuente_financiamiento
	   FROM 
	      salarios_contratados.funcionarios_contratos fc
	) fc2 ON fc2.id_funcionario_contrato=fc1.id_funcionario_contrato
	LEFT JOIN legajos.funcionarios_contratados fcon ON fcon.id_funcionario_contratado=fc2.id_funcionario_contratado
        LEFT JOIN legajos.funciones fun ON fun.id_funcion=fcon.id_funcion
 ) dps ON (dps.id_funcionario = f.id_funcionario)
 LEFT JOIN legajos.situacion_administrativa_actual sa ON sa.id_funcionario = f.id_funcionario
 LEFT JOIN legajos.oficinas_con_descripciones ofi ON ofi.id_oficina=dps.id_oficina_presta
WHERE
   CASE WHEN in_id_funcionario='0' THEN f.id_funcionario>0 ELSE f.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[]) END AND
   sa.id_tipo_funcionario='CON' AND
   liq.concepto IS NOT NULL
ORDER BY 
   1,2;

END;
]]></definition>
</function>

<function name="web_sfp_contratados_pagos"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="1000">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<parameter name="id_funcionario">
		<type name="integer"/>
	</parameter>
	<parameter name="orden">
		<type name="integer"/>
	</parameter>
	<parameter name="objeto_gasto">
		<type name="integer"/>
	</parameter>
	<parameter name="descripcion">
		<type name="text"/>
	</parameter>
	<parameter name="presupuestado">
		<type name="bigint"/>
	</parameter>
	<parameter name="id_oficina">
		<type name="integer"/>
	</parameter>
	</return-type>
	<parameter name="in_id_administracion" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_mes" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_gestion" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_id_funcionario" in="true">
		<type name="text"/>
	</parameter>
	<definition><![CDATA[
BEGIN
/*
  * Funcion para generar un listado por objeto de gasto de las liquidaciones de los contratados 
  * por administracion, mes, gestion y/o id_funcionario
  * Creado    : 2014-07-14 08:51:00
  * Modificado: 2014-08-07 16:42:00
  * Autor: Lic. Gustavo Eloy Alcaraz Bogado
  * Parametros:
  *            in_id_administracion administración del proceso		
  *            in_id_mes            mes de proceso
  *            in_gestion           ejercicio aplicado 
  * 	       in_id_funcionario    '0':todos '1782,687,...':ids_funcionarios específicos
  * Descripcion:  para la WEB con datos solicitados por la LEY 5.189/2014 "Que establece la obligatoriedad de la 
  *               provisión de Informaciones en el uso de los recursos públicos sobre remuneraciones y otras 
  *               retribuciones asignadas al servidor público de la República del Paraguay"
  * ------------  
  */
RETURN QUERY
-- [145] Honorarios Profesionales
SELECT 
  psd.id_funcionario,
  1::int as orden,
  max(psd.objeto_gasto) as objeto_gasto,
  'Honorarios Profesionales'::text as descripcion,
  sum(psd.monto_presupuestado::int) as presupuestado,
  max(psd.id_oficina) as id_oficina
FROM 
  salarios_contratados.planillas_salarios ps
  LEFT JOIN salarios_contratados.planillas_salarios_detalles psd ON psd.id_planilla_salario=ps.id_planilla_salario
WHERE 
  CASE 
     WHEN 1=in_id_administracion THEN ps.id_administracion IN (0,1)
     WHEN 2=in_id_administracion THEN ps.id_administracion IN (0,2)
     WHEN 3=in_id_administracion THEN ps.id_administracion IN (0,1,2)
  END AND
  ps.gestion= in_gestion AND
  ps.id_mes= in_mes AND
  ps.id_estado= 1 AND
  psd.objeto_gasto=145 AND
   (
     CASE
	WHEN 
	   '0'=in_id_funcionario
	THEN
	   psd.id_funcionario>0
	ELSE
	   psd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[])
     END  
   )
GROUP BY
  psd.id_funcionario
UNION ALL
-- [144] Jornales
SELECT 
  psd.id_funcionario,
  1::int as orden,
  max(psd.objeto_gasto) as objeto_gasto,
  'Jornales'::text as descripcion,  
  sum(psd.monto_presupuestado::int) as presupuestado,
  max(psd.id_oficina) as id_oficina
FROM 
  salarios_contratados.planillas_salarios ps
  LEFT JOIN salarios_contratados.planillas_salarios_detalles psd ON psd.id_planilla_salario=ps.id_planilla_salario
WHERE 
  CASE 
     WHEN 1=in_id_administracion THEN ps.id_administracion IN (0,1)
     WHEN 2=in_id_administracion THEN ps.id_administracion IN (0,2)
     WHEN 3=in_id_administracion THEN ps.id_administracion IN (0,1,2)
  END AND
  ps.gestion= in_gestion AND
  ps.id_mes= in_mes AND
  ps.id_estado= 1 AND
  psd.objeto_gasto=144 AND
   (
     CASE
	WHEN 
	   '0'=in_id_funcionario
	THEN
	   psd.id_funcionario>0
	ELSE
	   psd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[])
     END  
   )
GROUP BY
  psd.id_funcionario
UNION ALL
-- [141] Personal Técnico
SELECT 
  psd.id_funcionario,
  1::int as orden,
  max(psd.objeto_gasto) as objeto_gasto,
  'Personal Técnico'::text as descripcion,  
  sum(psd.monto_presupuestado::int) as presupuestado,
  max(psd.id_oficina) as id_oficina
FROM 
  salarios_contratados.planillas_salarios ps
  LEFT JOIN salarios_contratados.planillas_salarios_detalles psd ON psd.id_planilla_salario=ps.id_planilla_salario
WHERE 
  CASE 
     WHEN 1=in_id_administracion THEN ps.id_administracion IN (0,1)
     WHEN 2=in_id_administracion THEN ps.id_administracion IN (0,2)
     WHEN 3=in_id_administracion THEN ps.id_administracion IN (0,1,2)
  END AND
  ps.gestion= in_gestion AND
  ps.id_mes= in_mes AND
  ps.id_estado= 1 AND
  psd.objeto_gasto=141 AND
   (
     CASE
	WHEN 
	   '0'=in_id_funcionario
	THEN
	   psd.id_funcionario>0
	ELSE
	   psd.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[])
     END  
   )
GROUP BY
  psd.id_funcionario
UNION ALL
-- Remuneración Extraordinaria (RE)
SELECT 
  pred.id_funcionario,
  2::int as orden,
  max(pred.objeto_gasto) as objeto_gasto,
  'Remuneración Extraordinaria (RE)'::text as descripcion,
  sum(pred.monto::int) as presupuestado,
  max(pred.id_oficina) as id_oficina
FROM 
  salarios_contratados.planillas_re pre
  LEFT JOIN salarios_contratados.planillas_re_detalles pred ON pred.id_planilla_re=pre.id_planilla_re
WHERE 
  CASE 
     WHEN 1=in_id_administracion THEN pre.id_administracion IN (0,1)
     WHEN 2=in_id_administracion THEN pre.id_administracion IN (0,2)
     WHEN 3=in_id_administracion THEN pre.id_administracion IN (0,1,2)
  END AND
  pre.gestion= in_gestion AND
  pre.id_mes= in_mes AND
  pre.estado= 1 AND
   (
     CASE
	WHEN 
	   '0'=in_id_funcionario
	THEN
	   pred.id_funcionario>0
	ELSE
	   pred.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[])
     END  
   )
GROUP BY
  pred.id_funcionario
UNION ALL
-- Remuneración Adicional (RA)
SELECT 
  prad.id_funcionario,
  3::int as orden,
  max(prad.objeto_gasto) as objeto_gasto,
  'Remuneración Adicional (RA)'::text as descripcion,
  sum(prad.monto::int) as presupuestado,
  max(prad.id_oficina) as id_oficina
FROM 
  salarios_contratados.planillas_ra pra
  LEFT JOIN salarios_contratados.planillas_ra_detalles prad ON prad.id_planilla_ra=pra.id_planilla_ra
WHERE 
  CASE 
     WHEN 1=in_id_administracion THEN pra.id_administracion IN (0,1)
     WHEN 2=in_id_administracion THEN pra.id_administracion IN (0,2)
     WHEN 3=in_id_administracion THEN pra.id_administracion IN (0,1,2)
  END AND
  pra.gestion= in_gestion AND
  pra.id_mes= in_mes AND
  pra.estado= 1 AND
   (
     CASE
	WHEN 
	   '0'=in_id_funcionario
	THEN
	   prad.id_funcionario>0
	ELSE
	   prad.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[])
     END  
   )
GROUP BY
  prad.id_funcionario  
UNION ALL
-- [131] Subsidio Familiar (141,144,145)
SELECT 
  fs.id_funcionario,
  4::int as orden,
  max(psd.objeto_gasto) as objeto_gasto,
  'Subsidio Familiar'::text as descripcion,
  sum(psd.importe_subsidio::int) as presupuestado,
  max(psd.id_oficina) as id_oficina
FROM 
  salarios_contratados.planillas_subsidios ps
  LEFT JOIN salarios_contratados.planillas_subsidios_detalles psd ON psd.id_planilla_subsidio=ps.id_planilla_subsidio
  LEFT JOIN salarios_contratados.funcionarios_subsidios        fs ON fs.id_funcionario_subsidio=psd.id_funcionario_subsidio
WHERE 
  CASE 
     WHEN 1=in_id_administracion THEN ps.id_administracion IN (0,1)
     WHEN 2=in_id_administracion THEN ps.id_administracion IN (0,2)
     WHEN 3=in_id_administracion THEN ps.id_administracion IN (0,1,2)
  END AND
  ps.gestion= in_gestion AND
  ps.id_mes= in_mes AND
  ps.estado= 1 AND
   (
     CASE
	WHEN 
	   '0'=in_id_funcionario
	THEN
	   fs.id_funcionario>0
	ELSE
	   fs.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[])
     END  
   )
GROUP BY
  fs.id_funcionario
UNION ALL
--[141,144,145] Gratificación Ocasional
SELECT 
  pgod.id_funcionario,
  3::int as orden,
  max(pgod.objeto_gasto) as objeto_gasto,
  'Gratificación Ocasional'::text as descripcion,
  sum(pgod.importe_gratificacion::int) as presupuestado,
  max(pgod.id_oficina) as id_oficina
FROM 
  salarios_contratados.planillas_gratificaciones_ocasionales pgo
  LEFT JOIN salarios_contratados.planillas_gratificaciones_ocasionales_detalles pgod ON pgod.id_planilla_gratificacion_ocasional=pgo.id_planilla_gratificacion_ocasional
WHERE 
  CASE 
     WHEN 1=in_id_administracion THEN pgo.id_administracion IN (0,1)
     WHEN 2=in_id_administracion THEN pgo.id_administracion IN (0,2)
     WHEN 3=in_id_administracion THEN pgo.id_administracion IN (0,1,2)
  END AND
  pgo.gestion= in_gestion AND
  pgo.id_mes= in_mes AND
  pgo.estado= 1 AND
   (
     CASE
	WHEN 
	   '0'=in_id_funcionario
	THEN
	   pgod.id_funcionario>0
	ELSE
	   pgod.id_funcionario::text=ANY(('{'||in_id_funcionario||'}')::text[])
     END  
   )
GROUP BY
  pgod.id_funcionario
;

END;
]]></definition>
</function>

<function name="web_sfp_contratados_pagos_detalles"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="1000">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<parameter name="id">
		<type name="integer"/>
	</parameter>
	<parameter name="cedula">
		<type name="text"/>
	</parameter>
	<parameter name="nombres">
		<type name="text"/>
	</parameter>
	<parameter name="apellidos">
		<type name="text"/>
	</parameter>
	<parameter name="estado">
		<type name="text"/>
	</parameter>
	<parameter name="total_remunerado">
		<type name="bigint"/>
	</parameter>
	<parameter name="objeto_gasto">
		<type name="integer"/>
	</parameter>
	<parameter name="fuente">
		<type name="integer"/>
	</parameter>
	<parameter name="presupuestado">
		<type name="bigint"/>
	</parameter>
	<parameter name="descripcion">
		<type name="text"/>
	</parameter>
	<parameter name="nombre_cargo">
		<type name="text"/>
	</parameter>
	<parameter name="anho_ingreso">
		<type name="integer"/>
	</parameter>
	<parameter name="id_administracion">
		<type name="integer"/>
	</parameter>
	<parameter name="tipo">
		<type name="text"/>
	</parameter>
	<parameter name="orden">
		<type name="integer"/>
	</parameter>
	<parameter name="n1">
		<type name="integer"/>
	</parameter>
	<parameter name="n2">
		<type name="integer"/>
	</parameter>
	<parameter name="n3">
		<type name="integer"/>
	</parameter>
	<parameter name="n4">
		<type name="integer"/>
	</parameter>
	<parameter name="n5">
		<type name="integer"/>
	</parameter>
	<parameter name="id_oficina">
		<type name="integer"/>
	</parameter>
	<parameter name="tipo_funcionario">
		<type name="integer"/>
	</parameter>
	</return-type>
	<parameter name="in_id_administracion" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_id_mes" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_gestion" in="true">
		<type name="integer"/>
	</parameter>
	<parameter name="in_id_funcionario" in="true">
		<type name="text"/>
	</parameter>
	<definition><![CDATA[
BEGIN
/*
  * Funcion para generar un listado detallado de las liquidaciones de los contratados 
  * por administracion, mes, gestion y/o id_funcionario
  * Creado    : 2014-07-14 10:53:00
  * Modificado: 2014-07-11 12:00:00
  * Autor: Lic. Gustavo Eloy Alcaraz Bogado
  * Parametros:
  *            in_id_administracion administración del proceso		
  *            in_id_mes            mes de proceso
  *            in_gestion           ejercicio aplicado 
  * 	       in_id_funcionario    '0':todos '466,481,...':ids_funcionarios específicos
  * Descripcion:  para la WEB con datos solicitados por la LEY 5.189/2014 "Que establece la obligatoriedad de la 
  *               provisión de Informaciones en el uso de los recursos públicos sobre remuneraciones y otras 
  *               retribuciones asignadas al servidor público de la República del Paraguay"
  * ------------  
  */
RETURN QUERY
-- [141] Personal Técnico
-- [144] Jornales
-- [145] Honorarios Profesionales 
SELECT 
   f.id_funcionario as id,
   trim(replace(to_char(f.cedula_funcionario::int,'999,999,999'),',','.'))::text as cedula,
   initcap(f.nombre_funcionario::text) as nombres,
   initcap(f.apellido_funcionario::text) as apellidos,
   'Contratado'::text as estado,
   consolidado.total::bigint as total_remunerado,
   concepto.objeto_gasto,
   (
      SELECT
         CASE
            WHEN concepto.id_oficina::text=ANY(('{'||'
					     2168,2169,2170,2171,2172,2173,2174,2175,2176,2177,2178,2179,
                                             2180,2181,2182,2183,2184,2185,2186,2187,2249,2250,2251,2252,
                                             2253,2254,2255,2256,2257,2258,2259,2329,2330,2337,2498,2506,
                                             2507,2508,2511
                                             '||'}')::text[])
            THEN 30
            ELSE 10
           END
   ) as fuente,
   concepto.presupuestado,
   concepto.descripcion::text,
   fun.descripcion_funcion::text cargo,
   extract(year from saa.fecha_inicio)::int as anho_ingreso,
   f.id_administracion,
   saa.id_tipo_funcionario::text as tipo,
   concepto.orden,
   o.nivel1,
   o.nivel2,
   o.nivel3,
   o.nivel4,
   o.nivel5,
   concepto.id_oficina,
   2::integer as tipo_funcionario
FROM
   legajos.funcionarios f
   LEFT JOIN legajos.situacion_administrativa_actual saa ON saa.id_funcionario=f.id_funcionario
   LEFT JOIN (
      SELECT 
         l.id_funcionario,
	 l.orden,
	 l.objeto_gasto,
	 l.descripcion,
	 l.presupuestado,
	 l.id_oficina
      FROM
         salarios_contratados.web_sfp_contratados_pagos(in_id_administracion,in_id_mes,in_gestion,in_id_funcionario) l
   ) concepto ON concepto.id_funcionario=f.id_funcionario
   LEFT JOIN (
      SELECT 
         totales.id_funcionario,
         sum(totales.presupuestado) as total 
      FROM
         (
            SELECT
               s.id_funcionario,
               s.presupuestado
            FROM
               salarios_contratados.web_sfp_contratados_pagos(in_id_administracion,in_id_mes,in_gestion,in_id_funcionario) s
          ) totales
      GROUP BY
         totales.id_funcionario   
   ) consolidado ON consolidado.id_funcionario=f.id_funcionario
   -- CONTRATADOS
   LEFT JOIN (
	SELECT 
	   fc2.id_funcionario,
	   max(fc2.id_funcionario_contratado) as id_funcionario_contratado,
	   max(fc2.id_oficina) as id_oficina
	FROM 
	   salarios_contratados.funcionarios_contratos fc2
	WHERE 
	   fc2.gestion = in_gestion
	   AND fc2.id_administracion IN(0,1,2)
	   AND (in_id_mes BETWEEN  extract(MONTH from fc2.desde) AND extract(MONTH from fc2.hasta-1) OR fc2.hasta is null) 
	GROUP BY
	   fc2.id_funcionario
   ) fc ON fc.id_funcionario=f.id_funcionario
   LEFT JOIN legajos.funcionarios_contratados   fc3 ON (fc3.id_funcionario_contratado = fc.id_funcionario_contratado)
   LEFT JOIN legajos.funciones                  fun ON (fun.id_funcion = fc3.id_funcion)
   --LEFT JOIN salarios.categorias                  c ON (c.id_categoria = dc.id_categoria) AND c.gastos_de_representacion is false
   --LEFT JOIN salarios.cargos                    car ON (car.id_cargo = c.id_cargo)
   --LEFT JOIN legajos.oficinas_con_descripciones   o ON (o.id_oficina=fc.id_oficina)
   LEFT JOIN legajos.oficinas                    o ON (o.id_oficina=fc.id_oficina)
WHERE
   CASE 
      WHEN '1'=in_id_administracion THEN f.id_administracion IN (0,1)
      WHEN '2'=in_id_administracion THEN f.id_administracion IN (0,2)
      WHEN '3'=in_id_administracion THEN f.id_administracion IN (0,1,2)
   END AND
   saa.id_tipo_funcionario IN('CON')
   AND concepto.orden>0
   --f.estado_funcionario AND
   --AND concepto.id_oficina is not null
   --AND f.id_administracion IN(0,1)
   --AND f.id_funcionario IN(223,466,218,299,1432)
   --AND ff.f_f>0
;

END;
]]></definition>
</function>

<table name="aso_temporales">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<position x="807" y="50"/>
	<column name="id_aso_temporal" not-null="true" default-value="nextval('aso_temporales_id_aso_temporal_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="id_administracion" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="id_tipo_descuento" not-null="true">
		<type name="integer"/>
	</column>
	<column name="gestion" not-null="true">
		<type name="numeric" length="4" precision="0"/>
	</column>
	<column name="id_mes" not-null="true">
		<type name="integer"/>
	</column>
	<column name="cedula">
		<type name="character varying" length="12"/>
	</column>
	<column name="importe">
		<type name="numeric" length="12" precision="2"/>
	</column>
	<column name="usu_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
	<constraint name="aso_temporales_pkey" type="pk-constr" table="salarios_contratados.aso_temporales">
		<columns names="id_aso_temporal" ref-type="src-columns"/>
	</constraint>
</table>

<table name="autorizaciones">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<position x="1199" y="50"/>
	<column name="id_autorizacion" not-null="true" default-value="nextval('autorizaciones_id_autorizacion_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="id_administracion" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="id_tipo_descuento" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_funcionario" not-null="true">
		<type name="integer"/>
	</column>
	<column name="documento">
		<type name="bytea"/>
	</column>
	<column name="desde">
		<type name="date"/>
	</column>
	<column name="hasta">
		<type name="date"/>
	</column>
	<column name="estado" default-value="true">
		<type name="boolean"/>
	</column>
	<column name="usu_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
	<constraint name="autorizaciones_pkey" type="pk-constr" table="salarios_contratados.autorizaciones">
		<columns names="id_autorizacion" ref-type="src-columns"/>
	</constraint>
</table>

<table name="funcionarios_contratados_aumento">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<position x="1591" y="50"/>
	<column name="id_funcionario_contrato_aumento" not-null="true" default-value="nextval('funcionarios_contratados_aume_id_funcionario_contrato_aumen_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="id_funcionario_contratado_new" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_funcionario_contratado_old" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_funcionario" not-null="true">
		<type name="integer"/>
	</column>
	<column name="gestion" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_mes" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_administracion" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="dias_trabajados_new" not-null="true">
		<type name="integer"/>
	</column>
	<column name="dias_trabajados_old" not-null="true">
		<type name="integer"/>
	</column>
	<column name="activo" default-value="true">
		<type name="boolean"/>
	</column>
	<column name="usu_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
	<constraint name="funcionarios_contratados_aume_id_funcionario_gestion_id_mes_key" type="uq-constr" table="salarios_contratados.funcionarios_contratados_aumento">
		<columns names="id_funcionario,gestion,id_mes" ref-type="src-columns"/>
	</constraint>
	<constraint name="funcionarios_contratados_aumento_pkey" type="pk-constr" table="salarios_contratados.funcionarios_contratados_aumento">
		<columns names="id_funcionario_contrato_aumento" ref-type="src-columns"/>
	</constraint>
</table>

<view name="contratados_aumento">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<position x="2522" y="3412.6"/>
	<reference>
		<expression><![CDATA[ SELECT a.id_funcionario_contrato_aumento,
    a.id_funcionario_contratado_new,
    a.id_funcionario_contratado_old,
    a.id_funcionario,
    b.ape_nom_funcionario,
    a.gestion,
    a.id_mes,
    c.mes_descripcion,
    a.dias_trabajados_new,
    a.dias_trabajados_old,
    a.activo
   FROM ((salarios_contratados.funcionarios_contratados_aumento a
     LEFT JOIN legajos.funcionarios b ON ((a.id_funcionario = b.id_funcionario)))
     LEFT JOIN meses c ON ((a.id_mes = c.id_mes)));]]></expression>
	</reference>
</view>

<table name="demandantes">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<position x="2111" y="50"/>
	<column name="id_demandante" not-null="true" default-value="nextval('demandantes_id_demandante_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="id_administracion" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="dem_descripcion">
		<type name="character varying" length="200"/>
	</column>
	<column name="dem_documento">
		<type name="character varying" length="10"/>
	</column>
	<column name="usu_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
	<constraint name="demandante_dem_descripcion_dem_documento_key" type="uq-constr" table="salarios_contratados.demandantes">
		<columns names="dem_descripcion,dem_documento" ref-type="src-columns"/>
	</constraint>
	<constraint name="demandante_pkey" type="pk-constr" table="salarios_contratados.demandantes">
		<columns names="id_demandante" ref-type="src-columns"/>
	</constraint>
</table>

<table name="descuentos_aso">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<position x="2506" y="50"/>
	<column name="id_descuento_aso" not-null="true" default-value="nextval('descuentos_aso_id_descuento_aso_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="id_administracion" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="id_funcionario" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_mes" not-null="true">
		<type name="integer"/>
	</column>
	<column name="gestion" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_tipo_descuento" not-null="true">
		<type name="integer"/>
	</column>
	<column name="monto">
		<type name="numeric" length="15" precision="2"/>
	</column>
	<column name="ejecutado">
		<type name="numeric" length="15" precision="2"/>
	</column>
	<column name="estado" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="usu_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
	<constraint name="descuentos_aso_id_administracion_id_funcionario_id_mes_gest_key" type="uq-constr" table="salarios_contratados.descuentos_aso">
		<columns names="id_administracion,id_funcionario,id_mes,gestion,id_tipo_descuento" ref-type="src-columns"/>
	</constraint>
	<constraint name="descuentos_aso_pkey" type="pk-constr" table="salarios_contratados.descuentos_aso">
		<columns names="id_descuento_aso" ref-type="src-columns"/>
	</constraint>
</table>

<table name="descuentos_judiciales">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<position x="807" y="347.4"/>
	<column name="id_descuento_judicial" not-null="true" default-value="nextval('descuentos_judiciales_id_descuento_judicial_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="id_administracion" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="id_tipo_descuento" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_judicial" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_funcionario" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_mes" not-null="true">
		<type name="integer"/>
	</column>
	<column name="gestion" not-null="true">
		<type name="integer"/>
	</column>
	<column name="monto">
		<type name="numeric" length="12" precision="2"/>
	</column>
	<column name="ejecutado">
		<type name="numeric" length="12" precision="2"/>
	</column>
	<column name="estado" not-null="true" default-value="0">
		<type name="integer"/>
		<comment><![CDATA[0 = Creado, 1 = Procesado, 2 = Anulado]]></comment>
	</column>
	<column name="usu_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
	<constraint name="descuentos_judiciales_id_tipo_descuento_id_judicial_id_func_key" type="uq-constr" table="salarios_contratados.descuentos_judiciales">
		<columns names="id_tipo_descuento,id_judicial,id_funcionario,id_mes,gestion" ref-type="src-columns"/>
	</constraint>
	<constraint name="descuentos_judiciales_pkey" type="pk-constr" table="salarios_contratados.descuentos_judiciales">
		<columns names="id_descuento_judicial" ref-type="src-columns"/>
	</constraint>
</table>

<table name="funcionarios_aguinaldos">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<position x="1249" y="347.4"/>
	<column name="id_funcionario_aguinaldo" not-null="true" default-value="nextval('funcionarios_aguinaldos_id_funcionario_aguinaldo_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="id_administracion" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="id_funcionario" not-null="true">
		<type name="integer"/>
	</column>
	<column name="gestion" not-null="true">
		<type name="numeric" length="4" precision="0"/>
	</column>
	<column name="id_mes" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_oficina" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_tipo_aguinaldo" not-null="true">
		<type name="integer"/>
	</column>
	<column name="monto" not-null="true" default-value="0">
		<type name="numeric" length="15" precision="2"/>
	</column>
	<column name="id_detalle_planilla" not-null="true">
		<type name="integer"/>
	</column>
	<column name="objeto_gasto" not-null="true">
		<type name="integer"/>
	</column>
	<column name="estado" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="usu_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
	<constraint name="funcionarios_aguinaldos_pkey" type="pk-constr" table="salarios_contratados.funcionarios_aguinaldos">
		<columns names="id_funcionario_aguinaldo" ref-type="src-columns"/>
	</constraint>
</table>

<table name="funcionarios_bonificaciones">
	<schema name="salarios_contratados"/>
	<role name="dalcaraz"/>
	<position x="1693" y="347.4"/>
	<column name="id_funcionario_bonificacion" not-null="true" default-value="nextval('funcionarios_bonificaciones_id_funcionario_bonificacion_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="id_administracion" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="id_tipo_bonificacion" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_funcionario_contrato" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_oficina" not-null="true">
		<type name="integer"/>
	</column>
	<column name="gestion" not-null="true">
		<type name="numeric" length="4" precision="0"/>
	</column>
	<column name="id_mes" not-null="true">
		<type name="integer"/>
	</column>
	<column name="cantidad_dias" default-value="30">
		<type name="integer"/>
	</column>
	<column name="estado" default-value="true">
		<type name="boolean"/>
	</column>
	<column name="usu_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
	<constraint name="funcionarios_bonificaciones_id_tipo_bonificacion_id_funcionario" type="uq-constr" table="salarios_contratados.funcionarios_bonificaciones">
		<columns names="id_tipo_bonificacion,id_funcionario_contrato,gestion,id_mes" ref-type="src-columns"/>
	</constraint>
	<constraint name="funcionarios_bonificaciones_pkey" type="pk-constr" table="salarios_contratados.funcionarios_bonificaciones">
		<columns names="id_funcionario_bonificacion" ref-type="src-columns"/>
	</constraint>
</table>

<table name="funcionarios_contratos">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<position x="2171" y="347.4"/>
	<column name="id_funcionario_contrato" not-null="true" default-value="nextval('funcionarios_contratos_id_funcionario_contrato_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="id_oficina" not-null="true">
		<type name="integer"/>
	</column>
	<column name="gestion" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_administracion" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_funcionario_contratado" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_funcionario" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_tipo_contrato" not-null="true">
		<type name="integer"/>
	</column>
	<column name="nro_contrato">
		<type name="character varying" length="15"/>
	</column>
	<column name="monto_contrato">
		<type name="numeric" length="15" precision="2"/>
	</column>
	<column name="percibe_re" default-value="true">
		<type name="boolean"/>
	</column>
	<column name="percibe_ra" default-value="true">
		<type name="boolean"/>
	</column>
	<column name="percibe_aguinaldo" default-value="true">
		<type name="boolean"/>
	</column>
	<column name="percibe_premio" default-value="true">
		<type name="boolean"/>
	</column>
	<column name="porcentaje_iva">
		<type name="integer"/>
	</column>
	<column name="porcentaje_retencion">
		<type name="integer"/>
	</column>
	<column name="iva">
		<type name="integer"/>
	</column>
	<column name="ruc">
		<type name="character varying" length="15"/>
	</column>
	<column name="desde">
		<type name="date"/>
	</column>
	<column name="hasta">
		<type name="date"/>
	</column>
	<column name="objeto_gasto" not-null="true">
		<type name="integer"/>
	</column>
	<column name="estado" default-value="true">
		<type name="boolean"/>
	</column>
	<column name="categoria">
		<type name="character varying" length="3"/>
	</column>
	<column name="id_oficina_presta" not-null="true">
		<type name="integer"/>
	</column>
	<column name="usu_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="cod_fuente_financiamiento" default-value="10">
		<type name="integer"/>
	</column>
	<constraint name="funcionarios_contratos_pkey" type="pk-constr" table="salarios_contratados.funcionarios_contratos">
		<columns names="id_funcionario_contrato" ref-type="src-columns"/>
	</constraint>
</table>

<table name="funcionarios_gratificaciones_ocasionales">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<position x="2618" y="347.4"/>
	<column name="id_funcionario_gratificacion_ocasional" not-null="true" default-value="nextval('funcionarios_gratificaciones__id_funcionario_gratificacion__seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="id_administracion" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="id_oficina" not-null="true">
		<type name="integer"/>
	</column>
	<column name="gestion" not-null="true">
		<type name="numeric" length="4" precision="0"/>
	</column>
	<column name="id_mes" not-null="true">
		<type name="integer"/>
	</column>
	<column name="cedula" not-null="true">
		<type name="character varying" length="15"/>
	</column>
	<column name="monto" not-null="true">
		<type name="numeric" length="15" precision="3"/>
	</column>
	<column name="usu_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="estado" default-value="true">
		<type name="boolean"/>
	</column>
	<constraint name="funcionarios_gratificaciones_oc_cedula_gestion_id_mes_monto_key" type="uq-constr" table="salarios_contratados.funcionarios_gratificaciones_ocasionales">
		<columns names="cedula,gestion,id_mes,monto" ref-type="src-columns"/>
	</constraint>
	<constraint name="funcionarios_gratificaciones_ocasionales_pkey" type="pk-constr" table="salarios_contratados.funcionarios_gratificaciones_ocasionales">
		<columns names="id_funcionario_gratificacion_ocasional" ref-type="src-columns"/>
	</constraint>
</table>

<table name="funcionarios_serenos">
	<schema name="salarios_contratados"/>
	<role name="dalcaraz"/>
	<position x="807" y="840.8"/>
	<column name="id_funcionario_sereno" not-null="true" default-value="nextval('funcionarios_serenos_id_funcionario_sereno_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="id_administracion" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="id_oficina" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_funcionario_contrato" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_mes" not-null="true">
		<type name="integer"/>
	</column>
	<column name="gestion" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_tipo_pago" not-null="true" default-value="1">
		<type name="integer"/>
	</column>
	<column name="horas">
		<type name="integer"/>
	</column>
	<column name="estado" default-value="true">
		<type name="boolean"/>
	</column>
	<column name="usu_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
	<constraint name="funcionarios_serenos_pkey" type="pk-constr" table="salarios_contratados.funcionarios_serenos">
		<columns names="id_funcionario_sereno" ref-type="src-columns"/>
	</constraint>
</table>

<table name="funcionarios_subsidios">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<position x="1233" y="840.8"/>
	<column name="id_funcionario_subsidio" not-null="true" default-value="nextval('funcionarios_subsidios_id_funcionarios_subsidios_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="id_administracion" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="id_oficina" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_funcionario" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_mes" not-null="true">
		<type name="integer"/>
	</column>
	<column name="gestion" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_subsidio" not-null="true">
		<type name="integer"/>
	</column>
	<column name="cantidad">
		<type name="integer"/>
	</column>
	<column name="estado" default-value="true">
		<type name="boolean"/>
		<comment><![CDATA[0 = creado, 1 = procesado, 2 = anulado]]></comment>
	</column>
	<column name="usu_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
	<constraint name="funcionarios_subsidios_pkey" type="pk-constr" table="salarios_contratados.funcionarios_subsidios">
		<columns names="id_funcionario_subsidio" ref-type="src-columns"/>
	</constraint>
</table>

<table name="horas_no_compensadas">
	<schema name="salarios_contratados"/>
	<role name="dalcaraz"/>
	<position x="1667" y="840.8"/>
	<column name="id_hora_no_compensada" not-null="true" default-value="nextval('horas_no_compensadas_id_hora_no_compensada_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="id_administracion" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="id_funcionario" not-null="true">
		<type name="integer"/>
	</column>
	<column name="horas" not-null="true">
		<type name="integer"/>
	</column>
	<column name="estado" default-value="0">
		<type name="integer"/>
	</column>
	<column name="id_detalle_planilla_salario">
		<type name="integer"/>
	</column>
	<column name="usu_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
	<constraint name="horas_no_compensadas_pkey" type="pk-constr" table="salarios_contratados.horas_no_compensadas">
		<columns names="id_hora_no_compensada" ref-type="src-columns"/>
	</constraint>
</table>

<table name="judiciales">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<position x="2107" y="840.8"/>
	<column name="id_judicial" not-null="true" default-value="nextval('judiciales_id_judicial_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="id_administracion" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="id_bancos" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_funcionario" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_tipo_descuento" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_juzgado" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_demandante" not-null="true">
		<type name="integer"/>
	</column>
	<column name="fecha">
		<type name="date"/>
	</column>
	<column name="monto_justicia">
		<type name="numeric" length="12" precision="2"/>
	</column>
	<column name="monto_juicio">
		<type name="numeric" length="12" precision="2"/>
	</column>
	<column name="porcentaje_descontar">
		<type name="integer"/>
	</column>
	<column name="monto_descuento_mensual">
		<type name="numeric" length="12" precision="2"/>
	</column>
	<column name="monto_saldo">
		<type name="numeric" length="12" precision="2"/>
	</column>
	<column name="nro_cuenta">
		<type name="character varying" length="15"/>
	</column>
	<column name="estado" default-value="0">
		<type name="integer"/>
		<comment><![CDATA[0 = creado, 1 = procesado, 2 = anulado]]></comment>
	</column>
	<column name="usu_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="juez">
		<type name="character varying" length="80"/>
	</column>
	<column name="actuario">
		<type name="character varying" length="80"/>
	</column>
	<column name="observacion">
		<type name="text"/>
	</column>
	<constraint name="judiciales_pkey" type="pk-constr" table="salarios_contratados.judiciales">
		<columns names="id_judicial" ref-type="src-columns"/>
	</constraint>
</table>

<table name="juzgados">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<position x="2558" y="840.8"/>
	<column name="id_juzgado" not-null="true" default-value="nextval('juzgados_id_juzgado_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="id_administracion" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="id_departamento" not-null="true">
		<type name="integer"/>
	</column>
	<column name="juz_descripcion">
		<type name="character varying" length="150"/>
	</column>
	<column name="usu_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
	<constraint name="juzgado_pkey" type="pk-constr" table="salarios_contratados.juzgados">
		<columns names="id_juzgado" ref-type="src-columns"/>
	</constraint>
</table>

<table name="multas_aplicadas">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<position x="807" y="1250.2"/>
	<column name="id_multa_aplicada" not-null="true" default-value="nextval('multas_aplicadas_id_multa_aplicada_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="id_planilla_salario" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_multa_solicitada">
		<type name="integer"/>
	</column>
	<column name="id_administracion" not-null="true">
		<type name="integer"/>
	</column>
	<column name="gestion" not-null="true">
		<type name="numeric" length="4" precision="0"/>
	</column>
	<column name="id_mes" not-null="true">
		<type name="integer"/>
	</column>
	<column name="fecha" not-null="true">
		<type name="date"/>
	</column>
	<column name="total_solicitado" not-null="true" default-value="0">
		<type name="numeric" length="15" precision="2"/>
	</column>
	<column name="total_aplicado" not-null="true" default-value="0">
		<type name="numeric" length="15" precision="2"/>
	</column>
	<column name="total_diferencia" not-null="true" default-value="0">
		<type name="numeric" length="15" precision="2"/>
	</column>
	<column name="estado" not-null="true" default-value="0">
		<type name="integer"/>
		<comment><![CDATA[0 = creado, 1 = procesado, 2 = anulado]]></comment>
	</column>
	<column name="usu_alta" not-null="true">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" not-null="true" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta" not-null="true">
		<type name="character varying" length="30"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi">
		<type name="timestamp"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
	<constraint name="multas_aplicadas_pkey" type="pk-constr" table="salarios_contratados.multas_aplicadas">
		<columns names="id_multa_aplicada" ref-type="src-columns"/>
	</constraint>
</table>

<table name="multas_aplicadas_detalles">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<position x="1206" y="1250.2"/>
	<column name="id_multa_aplicada_detalle" not-null="true" default-value="nextval('multas_aplicadas_detalles_id_multa_aplicada_detalle_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="id_multa_aplicada" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_administracion" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_funcionario" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_multa_solicitada_detalle" not-null="true">
		<type name="integer"/>
	</column>
	<column name="importe_solicitado" not-null="true" default-value="0">
		<type name="numeric" length="15" precision="2"/>
	</column>
	<column name="importe_aplicado" not-null="true" default-value="0">
		<type name="numeric" length="15" precision="2"/>
	</column>
	<column name="importe_diferencia" not-null="true" default-value="0">
		<type name="numeric" length="15" precision="2"/>
	</column>
	<column name="usu_alta" not-null="true">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" not-null="true" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta" not-null="true">
		<type name="character varying" length="30"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi">
		<type name="timestamp"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
	<constraint name="multas_aplicadas_detalles_pkey" type="pk-constr" table="salarios_contratados.multas_aplicadas_detalles">
		<columns names="id_multa_aplicada_detalle" ref-type="src-columns"/>
	</constraint>
</table>

<table name="multas_solicitadas">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<position x="1658" y="1250.2"/>
	<column name="id_multa_solicitada" not-null="true" default-value="nextval('multas_solicitadas_id_multa_solicitada_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="id_administracion" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="id_multa_resolucion_contratado">
		<type name="integer"/>
	</column>
	<column name="gestion" not-null="true">
		<type name="numeric" length="4" precision="0"/>
	</column>
	<column name="id_mes" not-null="true">
		<type name="integer"/>
	</column>
	<column name="fecha">
		<type name="date"/>
	</column>
	<column name="total_multa">
		<type name="numeric" length="15" precision="2"/>
	</column>
	<column name="estado">
		<type name="integer"/>
		<comment><![CDATA[0 = creado, 1 = procesado, 2 = anulado]]></comment>
	</column>
	<column name="usu_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
	<constraint name="multas_solicitadas_pkey" type="pk-constr" table="salarios_contratados.multas_solicitadas">
		<columns names="id_multa_solicitada" ref-type="src-columns"/>
	</constraint>
</table>

<table name="multas_solicitadas_detalles">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<position x="2135" y="1250.2"/>
	<column name="id_multa_solicitada_detalle" not-null="true" default-value="nextval('multas_solicitadas_detalles_id_multa_solicitada_detalle_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="id_administracion" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="id_multa_solicitada" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_funcionario" not-null="true">
		<type name="integer"/>
	</column>
	<column name="monto_multa">
		<type name="numeric" length="12" precision="2"/>
	</column>
	<column name="cantidad_dias" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="importe_diario" not-null="true" default-value="0">
		<type name="numeric" length="12" precision="2"/>
	</column>
	<column name="usu_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
	<constraint name="multas_solicitadas_detalles_pkey" type="pk-constr" table="salarios_contratados.multas_solicitadas_detalles">
		<columns names="id_multa_solicitada_detalle" ref-type="src-columns"/>
	</constraint>
</table>

<table name="parametros_calculo_re_ra">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<position x="2596" y="1250.2"/>
	<column name="id_parametro_calculo_re_ra" not-null="true" default-value="nextval('parametros_calculo_re_ra_id_parametro_calculo_re_ra_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="constante_1" default-value="0">
		<type name="numeric" length="12" precision="2"/>
	</column>
	<column name="constante_2" default-value="0">
		<type name="numeric" length="12" precision="2"/>
	</column>
	<column name="constante_3" default-value="0">
		<type name="numeric" length="12" precision="2"/>
	</column>
	<column name="fecha_desde" default-value="now()">
		<type name="date"/>
	</column>
	<column name="fecha_hasta">
		<type name="date"/>
	</column>
	<column name="formula">
		<type name="character varying" length="100"/>
	</column>
	<column name="usu_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
	<constraint name="parametros_calculo_re_ra_pkey" type="pk-constr" table="salarios_contratados.parametros_calculo_re_ra">
		<columns names="id_parametro_calculo_re_ra" ref-type="src-columns"/>
	</constraint>
</table>

<table name="pedido_fondo_aguinaldo">
	<schema name="salarios_contratados"/>
	<role name="dalcaraz"/>
	<position x="807" y="1561.6"/>
	<column name="id_pedido_fondo_aguinaldo" not-null="true" default-value="nextval('pedido_fondo_aguinaldo_id_pedido_fondo_aguinaldo_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="id_administracion">
		<type name="integer"/>
	</column>
	<column name="gestion" not-null="true">
		<type name="numeric" length="4" precision="0"/>
	</column>
	<column name="id_tipo_aguinaldo" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_planilla_aguinaldo" not-null="true">
		<type name="integer"/>
	</column>
	<column name="importe_total_solicitado" not-null="true" default-value="0">
		<type name="numeric" length="15" precision="2"/>
	</column>
	<column name="importe_total_aplicado" not-null="true" default-value="0">
		<type name="numeric" length="15" precision="2"/>
	</column>
	<column name="cantidad_total_solicitado" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="cantidad_total_aplicado" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="estado" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="usu_alta" not-null="true" default-value="'--'::character varying">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" not-null="true" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
	<constraint name="pedido_fondo_aguinaldo_pkey" type="pk-constr" table="salarios_contratados.pedido_fondo_aguinaldo">
		<columns names="id_pedido_fondo_aguinaldo" ref-type="src-columns"/>
	</constraint>
</table>

<table name="pedido_fondo_aguinaldo_detalle">
	<schema name="salarios_contratados"/>
	<role name="dalcaraz"/>
	<position x="1267" y="1561.6"/>
	<column name="id_pedido_fondo_aguinaldo_detalle" not-null="true" default-value="nextval('pedido_fondo_aguinaldo_detall_id_pedido_fondo_aguinaldo_det_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="id_administracion">
		<type name="integer"/>
	</column>
	<column name="id_oficina" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_pedido_fondo_aguinaldo" not-null="true">
		<type name="integer"/>
	</column>
	<column name="cantidad_solicitado" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="cantidad_aplicado" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="importe_solicitado" not-null="true" default-value="0">
		<type name="numeric" length="15" precision="2"/>
	</column>
	<column name="importe_aplicado" not-null="true" default-value="0">
		<type name="numeric" length="15" precision="2"/>
	</column>
	<column name="importe_tope" not-null="true" default-value="0">
		<type name="numeric" length="15" precision="2"/>
	</column>
	<column name="usu_alta" not-null="true" default-value="'--'::character varying">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" not-null="true" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
	<constraint name="pedido_fondo_aguinaldo_detalle_pkey" type="pk-constr" table="salarios_contratados.pedido_fondo_aguinaldo_detalle">
		<columns names="id_pedido_fondo_aguinaldo_detalle" ref-type="src-columns"/>
	</constraint>
</table>

<table name="pedidos_fondos">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<position x="1780" y="1561.6"/>
	<column name="id_pedido_fondo" not-null="true" default-value="nextval('pedidos_fondos_id_pedido_fondo_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="id_administracion">
		<type name="integer"/>
	</column>
	<column name="gestion" not-null="true">
		<type name="numeric" length="4" precision="0"/>
	</column>
	<column name="id_mes" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_tipo_planilla" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_planilla" not-null="true">
		<type name="integer"/>
	</column>
	<column name="objeto_gasto">
		<type name="integer"/>
	</column>
	<column name="importe_presupuestado_solicitado" not-null="true" default-value="0">
		<type name="numeric" length="15" precision="2"/>
	</column>
	<column name="importe_presupuestado_aplicado" not-null="true" default-value="0">
		<type name="numeric" length="15" precision="2"/>
	</column>
	<column name="importe_total_multas_solicitado" not-null="true" default-value="0">
		<type name="numeric" length="15" precision="2"/>
	</column>
	<column name="importe_total_multas_aplicado" not-null="true" default-value="0">
		<type name="numeric" length="15" precision="2"/>
	</column>
	<column name="importe_total_devengado_solicitado" not-null="true" default-value="0">
		<type name="numeric" length="15" precision="2"/>
	</column>
	<column name="importe_total_devengado_aplicado" not-null="true" default-value="0">
		<type name="numeric" length="15" precision="2"/>
	</column>
	<column name="importe_total_iva_solicitado" not-null="true" default-value="0">
		<type name="numeric" length="15" precision="2"/>
	</column>
	<column name="importe_total_iva_aplicado" not-null="true" default-value="0">
		<type name="numeric" length="15" precision="2"/>
	</column>
	<column name="importe_total_descuentos_varios_solicitado" not-null="true" default-value="0">
		<type name="numeric" length="15" precision="2"/>
	</column>
	<column name="importe_total_descuentos_varios_aplicado" not-null="true" default-value="0">
		<type name="numeric" length="15" precision="2"/>
	</column>
	<column name="importe_total_liquido_solicitado" not-null="true" default-value="0">
		<type name="numeric" length="15" precision="2"/>
	</column>
	<column name="importe_total_liquido_aplicado" not-null="true" default-value="0">
		<type name="numeric" length="15" precision="2"/>
	</column>
	<column name="cantidad_total_solicitado" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="cantidad_total_aplicado" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="estado" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="usu_alta" not-null="true" default-value="'--'::character varying">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" not-null="true" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
	<constraint name="pedidos_fondos_pkey" type="pk-constr" table="salarios_contratados.pedidos_fondos">
		<columns names="id_pedido_fondo" ref-type="src-columns"/>
	</constraint>
</table>

<table name="pedidos_fondos_detalles">
	<schema name="salarios_contratados"/>
	<role name="dalcaraz"/>
	<position x="2327" y="1561.6"/>
	<column name="id_pedido_fondo_detalle" not-null="true" default-value="nextval('pedidos_fondos_detalles_id_pedido_fondo_detalle_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="id_estructura_presupuestaria" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_pedido_fondo" not-null="true">
		<type name="integer"/>
	</column>
	<column name="cantidad_solicitado" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="cantidad_aplicado" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="importe_presupuestado_solicitado" not-null="true" default-value="0">
		<type name="numeric" length="15" precision="2"/>
	</column>
	<column name="importe_presupuestado_aplicado" not-null="true" default-value="0">
		<type name="numeric" length="15" precision="2"/>
	</column>
	<column name="importe_total_multas_solicitado" not-null="true" default-value="0">
		<type name="numeric" length="15" precision="2"/>
	</column>
	<column name="importe_total_multas_aplicado" not-null="true" default-value="0">
		<type name="numeric" length="15" precision="2"/>
	</column>
	<column name="importe_total_devengado_solicitado" not-null="true" default-value="0">
		<type name="numeric" length="15" precision="2"/>
	</column>
	<column name="importe_total_devengado_aplicado" not-null="true" default-value="0">
		<type name="numeric" length="15" precision="2"/>
	</column>
	<column name="importe_total_iva_solicitado" not-null="true" default-value="0">
		<type name="numeric" length="15" precision="2"/>
	</column>
	<column name="importe_total_iva_aplicado" not-null="true" default-value="0">
		<type name="numeric" length="15" precision="2"/>
	</column>
	<column name="importe_total_descuentos_varios_solicitado" not-null="true" default-value="0">
		<type name="numeric" length="15" precision="2"/>
	</column>
	<column name="importe_total_descuentos_varios_aplicado" not-null="true" default-value="0">
		<type name="numeric" length="15" precision="2"/>
	</column>
	<column name="importe_total_liquido_solicitado" not-null="true" default-value="0">
		<type name="numeric" length="15" precision="2"/>
	</column>
	<column name="importe_total_liquido_aplicado" not-null="true" default-value="0">
		<type name="numeric" length="15" precision="2"/>
	</column>
	<column name="importe_tope_devengado" not-null="true" default-value="0">
		<type name="numeric" length="15" precision="2"/>
	</column>
	<column name="usu_alta" not-null="true" default-value="'--'::character varying">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" not-null="true" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
	<constraint name="pedidos_fondos_detalles_pkey" type="pk-constr" table="salarios_contratados.pedidos_fondos_detalles">
		<columns names="id_pedido_fondo_detalle" ref-type="src-columns"/>
	</constraint>
</table>

<table name="planillas_aguinaldos">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<position x="2874" y="1561.6"/>
	<column name="id_planilla_aguinaldo" not-null="true" default-value="nextval('planillas_aguinaldos_id_planilla_aguinaldo_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="id_administracion" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="id_tipo_aguinaldo" not-null="true">
		<type name="integer"/>
	</column>
	<column name="gestion" not-null="true">
		<type name="numeric" length="4" precision="0"/>
	</column>
	<column name="monto_total" not-null="true" default-value="0">
		<type name="numeric" length="20" precision="2"/>
	</column>
	<column name="estado" not-null="true">
		<type name="integer"/>
	</column>
	<column name="item" not-null="true">
		<type name="integer"/>
	</column>
	<column name="usu_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
	<constraint name="planillas_aguinaldos_pkey" type="pk-constr" table="salarios_contratados.planillas_aguinaldos">
		<columns names="id_planilla_aguinaldo" ref-type="src-columns"/>
	</constraint>
</table>

<table name="planillas_aguinaldos_detalles">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<position x="807" y="2027"/>
	<column name="id_planilla_aguinaldo_detalle" not-null="true" default-value="nextval('planillas_aguinaldos_detalles_id_planilla_aguinaldo_detalle_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="id_administracion" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="id_planilla_aguinaldo" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_mes" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_oficina" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_funcionario_aguinaldo" not-null="true">
		<type name="integer"/>
	</column>
	<column name="monto" not-null="true">
		<type name="numeric" length="15" precision="2"/>
	</column>
	<column name="objeto_gasto" not-null="true">
		<type name="integer"/>
	</column>
	<column name="estado" not-null="true">
		<type name="integer"/>
	</column>
	<column name="usu_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
	<constraint name="planillas_aguinaldos_detalles_pkey" type="pk-constr" table="salarios_contratados.planillas_aguinaldos_detalles">
		<columns names="id_planilla_aguinaldo_detalle" ref-type="src-columns"/>
	</constraint>
</table>

<table name="planillas_bonificaciones">
	<schema name="salarios_contratados"/>
	<role name="dalcaraz"/>
	<position x="1278" y="2027"/>
	<column name="id_planilla_bonificacion" not-null="true" default-value="nextval('planillas_bonificaciones_id_planilla_bonificacion_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="id_administracion" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="id_mes" not-null="true">
		<type name="integer"/>
	</column>
	<column name="gestion" not-null="true">
		<type name="numeric" length="4" precision="0"/>
	</column>
	<column name="fecha" default-value="now()">
		<type name="date"/>
	</column>
	<column name="monto_total" default-value="0">
		<type name="numeric" length="12" precision="2"/>
	</column>
	<column name="monto_iva" default-value="0">
		<type name="numeric" length="12" precision="2"/>
	</column>
	<column name="estado" default-value="0">
		<type name="integer"/>
	</column>
	<column name="usu_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
	<constraint name="planillas_bonificaciones_pkey" type="pk-constr" table="salarios_contratados.planillas_bonificaciones">
		<columns names="id_planilla_bonificacion" ref-type="src-columns"/>
	</constraint>
</table>

<table name="planillas_bonificaciones_detalles">
	<schema name="salarios_contratados"/>
	<role name="dalcaraz"/>
	<position x="1710" y="2027"/>
	<column name="id_planilla_bonificacion_detalle" not-null="true" default-value="nextval('planillas_bonificaciones_deta_id_planilla_bonificacion_deta_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="id_administracion" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="id_oficina" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_planilla_bonificacion" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_funcionario_bonificacion" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_funcionario" not-null="true">
		<type name="integer"/>
	</column>
	<column name="nro_contrato">
		<type name="character varying" length="15"/>
	</column>
	<column name="objeto_gasto">
		<type name="integer"/>
	</column>
	<column name="importe" default-value="0">
		<type name="numeric" length="12" precision="2"/>
	</column>
	<column name="importe_iva" default-value="0">
		<type name="numeric" length="12" precision="2"/>
	</column>
	<column name="cantidad_dias">
		<type name="integer"/>
	</column>
	<column name="usu_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
	<constraint name="planillas_bonificaciones_detalles_pkey" type="pk-constr" table="salarios_contratados.planillas_bonificaciones_detalles">
		<columns names="id_planilla_bonificacion_detalle" ref-type="src-columns"/>
	</constraint>
</table>

<table name="planillas_descuentos">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<comment><![CDATA[0=creado, 1=procesado, 2=anulado]]></comment>
	<position x="2195" y="2027"/>
	<column name="id_planilla_descuento" not-null="true" default-value="nextval('planillas_descuentos_id_planilla_descuento_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="id_administracion" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="gestion" not-null="true">
		<type name="numeric" length="4" precision="0"/>
	</column>
	<column name="id_mes" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_parametro" not-null="true">
		<type name="integer"/>
	</column>
	<column name="fecha">
		<type name="date"/>
	</column>
	<column name="total_descuento" default-value="0">
		<type name="numeric" length="15" precision="2"/>
	</column>
	<column name="total_importe_solicitado" not-null="true" default-value="0">
		<type name="numeric" length="15" precision="2"/>
	</column>
	<column name="id_planilla_salario">
		<type name="integer"/>
	</column>
	<column name="estado" default-value="0">
		<type name="integer"/>
		<comment><![CDATA[0 = Creado, 1 = Procesado, 2 = Anulado]]></comment>
	</column>
	<column name="usu_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
	<constraint name="planillas_descuentos_pkey" type="pk-constr" table="salarios_contratados.planillas_descuentos">
		<columns names="id_planilla_descuento" ref-type="src-columns"/>
	</constraint>
</table>

<table name="planillas_descuentos_detalles">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<position x="2622" y="2027"/>
	<column name="id_planilla_descuento_detalle" not-null="true" default-value="nextval('planillas_descuentos_detalles_id_planilla_descuento_detalle_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="id_administracion" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_funcionario" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_planilla_descuento" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_descuento_judicial">
		<type name="integer"/>
	</column>
	<column name="id_descuento_aso">
		<type name="integer"/>
	</column>
	<column name="monto_descuento" default-value="0">
		<type name="numeric" length="12" precision="2"/>
	</column>
	<column name="monto_solicitado" default-value="0">
		<type name="numeric" length="12" precision="2"/>
	</column>
	<column name="usu_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
	<constraint name="planillas_descuentos_detalles_pkey" type="pk-constr" table="salarios_contratados.planillas_descuentos_detalles">
		<columns names="id_planilla_descuento_detalle" ref-type="src-columns"/>
	</constraint>
</table>

<table name="planillas_gratificaciones_ocasionales_detalles">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<position x="807" y="2338.4"/>
	<column name="id_planilla_gratificacion_ocasional_detalle" not-null="true" default-value="nextval('planillas_gratificaciones_oca_id_planilla_gratificacion_oc_seq1'::regclass)">
		<type name="integer"/>
	</column>
	<column name="id_administracion" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="id_oficina" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_planilla_gratificacion_ocasional" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_funcionario" not-null="true">
		<type name="integer"/>
	</column>
	<column name="objeto_gasto">
		<type name="integer"/>
	</column>
	<column name="importe_gratificacion" default-value="0">
		<type name="numeric" length="12" precision="2"/>
	</column>
	<column name="importe_iva" default-value="0">
		<type name="numeric" length="12" precision="2"/>
	</column>
	<column name="usu_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
	<constraint name="planillas_gratificaciones_ocasionales_detalles_pkey" type="pk-constr" table="salarios_contratados.planillas_gratificaciones_ocasionales_detalles">
		<columns names="id_planilla_gratificacion_ocasional_detalle" ref-type="src-columns"/>
	</constraint>
</table>

<table name="planillas_gratificaciones_ocasionales">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<comment><![CDATA[0=creado, 1=procesado, 2=anulado]]></comment>
	<position x="1364" y="2338.4"/>
	<column name="id_planilla_gratificacion_ocasional" not-null="true" default-value="nextval('planillas_gratificaciones_oca_id_planilla_gratificacion_oca_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="id_administracion" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="id_mes" not-null="true">
		<type name="integer"/>
	</column>
	<column name="gestion" not-null="true">
		<type name="numeric" length="4" precision="0"/>
	</column>
	<column name="fecha" default-value="now()">
		<type name="date"/>
	</column>
	<column name="monto_total" default-value="0">
		<type name="numeric" length="12" precision="2"/>
	</column>
	<column name="monto_iva" default-value="0">
		<type name="numeric" length="12" precision="2"/>
	</column>
	<column name="estado" default-value="0">
		<type name="integer"/>
	</column>
	<column name="usu_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
	<constraint name="planillas_gratificaciones_ocasionales_pkey" type="pk-constr" table="salarios_contratados.planillas_gratificaciones_ocasionales">
		<columns names="id_planilla_gratificacion_ocasional" ref-type="src-columns"/>
	</constraint>
</table>

<table name="planillas_ra">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<comment><![CDATA[0=creado, 1=procesado, 2=anulado]]></comment>
	<position x="1869" y="2338.4"/>
	<column name="id_planilla_ra" not-null="true" default-value="nextval('planillas_ra_id_planilla_ra_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="id_parametro_calculo_re_ra" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_administracion" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="id_parametro" not-null="true">
		<type name="integer"/>
	</column>
	<column name="gestion" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_mes" not-null="true">
		<type name="integer"/>
	</column>
	<column name="fecha">
		<type name="date"/>
	</column>
	<column name="monto_total_ra" default-value="0">
		<type name="numeric" length="15" precision="2"/>
	</column>
	<column name="monto_total_iva" default-value="0">
		<type name="numeric" length="12" precision="2"/>
	</column>
	<column name="item" default-value="0">
		<type name="integer"/>
	</column>
	<column name="estado" default-value="0">
		<type name="integer"/>
	</column>
	<column name="usu_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
	<constraint name="planillas_ra_pkey" type="pk-constr" table="salarios_contratados.planillas_ra">
		<columns names="id_planilla_ra" ref-type="src-columns"/>
	</constraint>
</table>

<table name="planillas_ra_detalles">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<position x="2319" y="2338.4"/>
	<column name="id_planilla_ra_detalle" not-null="true" default-value="nextval('planillas_ra_detalles_id_planilla_ra_detalle_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="id_administracion" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="id_planilla_ra" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_aplicada_hora_detalle">
		<type name="integer"/>
	</column>
	<column name="id_funcionario" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_oficina" not-null="true">
		<type name="integer"/>
	</column>
	<column name="monto">
		<type name="numeric" length="12" precision="2"/>
	</column>
	<column name="monto_iva">
		<type name="numeric" length="10" precision="2"/>
	</column>
	<column name="cantidad_horas">
		<type name="integer"/>
	</column>
	<column name="objeto_gasto">
		<type name="integer"/>
	</column>
	<column name="nro_contrato">
		<type name="character varying" length="15"/>
	</column>
	<column name="categoria">
		<type name="character varying" length="3"/>
	</column>
	<column name="usu_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
	<constraint name="planillas_ra_detalles_pkey" type="pk-constr" table="salarios_contratados.planillas_ra_detalles">
		<columns names="id_planilla_ra_detalle" ref-type="src-columns"/>
	</constraint>
</table>

<table name="planillas_re">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<comment><![CDATA[0=creado, 1=procesado, 2=anulado]]></comment>
	<position x="2752" y="2338.4"/>
	<column name="id_planilla_re" not-null="true" default-value="nextval('planillas_re_id_planilla_re_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="id_parametro_calculo_re_ra" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_administracion" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="id_parametro" not-null="true">
		<type name="integer"/>
	</column>
	<column name="gestion" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_mes" not-null="true">
		<type name="integer"/>
	</column>
	<column name="fecha">
		<type name="date"/>
	</column>
	<column name="monto_total_re" default-value="0">
		<type name="numeric" length="15" precision="2"/>
	</column>
	<column name="monto_total_iva" default-value="0">
		<type name="numeric" length="12" precision="2"/>
	</column>
	<column name="item" default-value="0">
		<type name="integer"/>
	</column>
	<column name="estado" default-value="0">
		<type name="integer"/>
	</column>
	<column name="usu_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
	<constraint name="planillas_re_pkey" type="pk-constr" table="salarios_contratados.planillas_re">
		<columns names="id_planilla_re" ref-type="src-columns"/>
	</constraint>
</table>

<table name="planillas_re_detalles">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<position x="807" y="2663.8"/>
	<column name="id_planilla_re_detalle" not-null="true" default-value="nextval('planillas_re_detalles_id_planilla_re_detalle_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="id_administracion" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="id_planilla_re" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_aplicada_hora_detalle">
		<type name="integer"/>
	</column>
	<column name="id_funcionario" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_oficina" not-null="true">
		<type name="integer"/>
	</column>
	<column name="monto">
		<type name="numeric" length="12" precision="2"/>
	</column>
	<column name="monto_iva">
		<type name="numeric" length="10" precision="2"/>
	</column>
	<column name="cantidad_horas">
		<type name="integer"/>
	</column>
	<column name="objeto_gasto">
		<type name="integer"/>
	</column>
	<column name="nro_contrato">
		<type name="character varying" length="15"/>
	</column>
	<column name="categoria">
		<type name="character varying" length="3"/>
	</column>
	<column name="usu_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
	<constraint name="planillas_re_detalles_pkey" type="pk-constr" table="salarios_contratados.planillas_re_detalles">
		<columns names="id_planilla_re_detalle" ref-type="src-columns"/>
	</constraint>
</table>

<table name="planillas_salarios">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<comment><![CDATA[0=creado, 1=procesado, 2=anulado]]></comment>
	<position x="1240" y="2663.8"/>
	<column name="id_planilla_salario" not-null="true" default-value="nextval('planillas_salarios_id_planilla_salario_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="id_administracion" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="id_mes" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_tipo_contrato" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_parametro" not-null="true">
		<type name="integer"/>
	</column>
	<column name="gestion" not-null="true">
		<type name="numeric" length="4" precision="0"/>
	</column>
	<column name="item">
		<type name="integer"/>
	</column>
	<column name="fecha" default-value="now()">
		<type name="date"/>
	</column>
	<column name="total_presupuestado" not-null="true" default-value="0">
		<type name="numeric" length="15" precision="2"/>
	</column>
	<column name="total_devengado" not-null="true" default-value="0">
		<type name="numeric" length="15" precision="2"/>
	</column>
	<column name="total_monto_iva" default-value="0">
		<type name="numeric" length="15" precision="2"/>
	</column>
	<column name="total_multa" not-null="true" default-value="0">
		<type name="numeric" length="15" precision="2"/>
	</column>
	<column name="id_estado" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="usu_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
	<constraint name="planilla_salarios_pkey" type="pk-constr" table="salarios_contratados.planillas_salarios">
		<columns names="id_planilla_salario" ref-type="src-columns"/>
	</constraint>
</table>

<table name="planillas_salarios_detalles">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<position x="1648" y="2663.8"/>
	<column name="id_planilla_salario_detalle" not-null="true" default-value="nextval('planillas_salarios_detalles_id_planilla_salario_detalle_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="id_administracion" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="id_oficina" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_funcionario" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_planilla_salario" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_funcionario_contrato" not-null="true">
		<type name="integer"/>
	</column>
	<column name="dias_trabajados">
		<type name="integer"/>
	</column>
	<column name="objeto_gasto" not-null="true">
		<type name="integer"/>
	</column>
	<column name="cantidad_dias" not-null="true">
		<type name="numeric"/>
	</column>
	<column name="monto_presupuestado">
		<type name="numeric" length="12" precision="2"/>
	</column>
	<column name="monto_devengado">
		<type name="numeric" length="12" precision="2"/>
	</column>
	<column name="monto_multa">
		<type name="numeric" length="12" precision="2"/>
	</column>
	<column name="monto_iva">
		<type name="numeric" length="12" precision="2"/>
	</column>
	<column name="importe_liquido_sin_descuentos_varios" not-null="true" default-value="0">
		<type name="numeric" length="12" precision="2"/>
	</column>
	<column name="importe_descuentos_varios_solicitado" not-null="true" default-value="0">
		<type name="numeric" length="12" precision="2"/>
	</column>
	<column name="importe_descuentos_varios_aplicado" not-null="true" default-value="0">
		<type name="numeric" length="12" precision="2"/>
	</column>
	<column name="importe_descuentos_varios_diferencia" not-null="true" default-value="0">
		<type name="numeric" length="12" precision="2"/>
	</column>
	<column name="importe_liquido_con_descuentos_varios" not-null="true" default-value="0">
		<type name="numeric" length="12" precision="2"/>
	</column>
	<column name="usu_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="horas_no_compensadas">
		<type name="integer"/>
	</column>
	<column name="monto_horas_no_compensadas">
		<type name="numeric" length="12" precision="2"/>
	</column>
	<constraint name="planillas_salarios_detalles_pkey" type="pk-constr" table="salarios_contratados.planillas_salarios_detalles">
		<columns names="id_planilla_salario_detalle" ref-type="src-columns"/>
	</constraint>
</table>

<table name="planillas_salarios_estados">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<position x="2171" y="2663.8"/>
	<column name="id_estado" not-null="true" default-value="nextval('planillas_salarios_estados_id_estado_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="id_administracion" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="descripcion" not-null="true">
		<type name="character varying" length="100"/>
	</column>
	<column name="usu_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
	<constraint name="planillas_salarios_estados_pkey" type="pk-constr" table="salarios_contratados.planillas_salarios_estados">
		<columns names="id_estado" ref-type="src-columns"/>
	</constraint>
</table>

<table name="planillas_serenos">
	<schema name="salarios_contratados"/>
	<role name="dalcaraz"/>
	<position x="2566" y="2663.8"/>
	<column name="id_planilla_sereno" not-null="true" default-value="nextval('planillas_serenos_id_planilla_sereno_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="id_administracion" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="id_mes" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_tipo_pago" not-null="true">
		<type name="integer"/>
	</column>
	<column name="gestion" not-null="true">
		<type name="numeric" length="4" precision="0"/>
	</column>
	<column name="fecha" default-value="now()">
		<type name="date"/>
	</column>
	<column name="monto_total" default-value="0">
		<type name="numeric" length="12" precision="2"/>
	</column>
	<column name="monto_iva" default-value="0">
		<type name="numeric" length="12" precision="2"/>
	</column>
	<column name="estado" default-value="0">
		<type name="integer"/>
	</column>
	<column name="usu_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
	<constraint name="planillas_serenos_pkey" type="pk-constr" table="salarios_contratados.planillas_serenos">
		<columns names="id_planilla_sereno" ref-type="src-columns"/>
	</constraint>
</table>

<table name="planillas_serenos_detalles">
	<schema name="salarios_contratados"/>
	<role name="dalcaraz"/>
	<position x="807" y="3101.2"/>
	<column name="id_planilla_sereno_detalle" not-null="true" default-value="nextval('planillas_serenos_detalles_id_planilla_sereno_detalle_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="id_administracion" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="id_oficina" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_planilla_sereno" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_funcionario_sereno" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_funcionario" not-null="true">
		<type name="integer"/>
	</column>
	<column name="nro_contrato">
		<type name="character varying" length="15"/>
	</column>
	<column name="objeto_gasto">
		<type name="integer"/>
	</column>
	<column name="importe" default-value="0">
		<type name="numeric" length="12" precision="2"/>
	</column>
	<column name="importe_iva" default-value="0">
		<type name="numeric" length="12" precision="2"/>
	</column>
	<column name="horas">
		<type name="integer"/>
	</column>
	<column name="usu_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
	<constraint name="planillas_serenos_detalles_pkey" type="pk-constr" table="salarios_contratados.planillas_serenos_detalles">
		<columns names="id_planilla_sereno_detalle" ref-type="src-columns"/>
	</constraint>
</table>

<table name="planillas_subsidios">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<comment><![CDATA[0=creado, 1=procesado, 2=anulado]]></comment>
	<position x="1257" y="3101.2"/>
	<column name="id_planilla_subsidio" not-null="true" default-value="nextval('planillas_subsidios_id_planilla_subsidio_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="id_administracion" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="id_mes" not-null="true">
		<type name="integer"/>
	</column>
	<column name="gestion" not-null="true">
		<type name="numeric" length="4" precision="0"/>
	</column>
	<column name="fecha" default-value="now()">
		<type name="date"/>
	</column>
	<column name="monto_total" default-value="0">
		<type name="numeric" length="12" precision="2"/>
	</column>
	<column name="monto_iva" default-value="0">
		<type name="numeric" length="12" precision="2"/>
	</column>
	<column name="estado" default-value="0">
		<type name="integer"/>
	</column>
	<column name="usu_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
	<constraint name="planillas_subsidios_pkey" type="pk-constr" table="salarios_contratados.planillas_subsidios">
		<columns names="id_planilla_subsidio" ref-type="src-columns"/>
	</constraint>
</table>

<table name="planillas_subsidios_detalles">
	<schema name="salarios_contratados"/>
	<role name="dalcaraz"/>
	<position x="1665" y="3101.2"/>
	<column name="id_planilla_subsidio_detalle" not-null="true" default-value="nextval('planillas_subsidios_detalles_id_planilla_subsidio_detalle_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="id_administracion" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="id_oficina" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_planilla_subsidio" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_funcionario_subsidio" not-null="true">
		<type name="integer"/>
	</column>
	<column name="objeto_gasto">
		<type name="integer"/>
	</column>
	<column name="importe_subsidio" default-value="0">
		<type name="numeric" length="12" precision="2"/>
	</column>
	<column name="importe_iva" default-value="0">
		<type name="numeric" length="12" precision="2"/>
	</column>
	<column name="cantidad">
		<type name="integer"/>
	</column>
	<column name="usu_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
	<constraint name="planillas_subsidios_detalles_pkey" type="pk-constr" table="salarios_contratados.planillas_subsidios_detalles">
		<columns names="id_planilla_subsidio_detalle" ref-type="src-columns"/>
	</constraint>
</table>

<table name="situacion_personal">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<position x="2126" y="3101.2"/>
	<column name="id_situacion_personal" not-null="true" default-value="nextval('situacion_personal_id_situacion_personal_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="id_administracion" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="id_mes" not-null="true">
		<type name="integer"/>
	</column>
	<column name="gestion" not-null="true">
		<type name="integer"/>
	</column>
	<column name="fecha">
		<type name="date"/>
	</column>
	<column name="nro_documento">
		<type name="character varying" length="10"/>
	</column>
	<column name="documento">
		<type name="bytea"/>
	</column>
	<column name="estado" default-value="0">
		<type name="integer"/>
		<comment><![CDATA[0 = creado, 1 = procesado, 2 = anulado]]></comment>
	</column>
	<column name="usu_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
	<constraint name="situacion_personal_pkey" type="pk-constr" table="salarios_contratados.situacion_personal">
		<columns names="id_situacion_personal" ref-type="src-columns"/>
	</constraint>
</table>

<table name="situacion_personal_detalles">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<position x="2548" y="3101.2"/>
	<column name="id_situacion_personal_detalle" not-null="true" default-value="nextval('situacion_personal_detalles_id_situacion_personal_detalle_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="id_administracion" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="id_funcionario" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_situacion_personal" not-null="true">
		<type name="integer"/>
	</column>
	<column name="dias_trabajados">
		<type name="integer"/>
	</column>
	<column name="usu_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
	<constraint name="situacion_personal_detalles_id_funcionario_id_situacion_pers_ke" type="uq-constr" table="salarios_contratados.situacion_personal_detalles">
		<columns names="id_funcionario,id_situacion_personal" ref-type="src-columns"/>
	</constraint>
	<constraint name="situacion_personal_detalles_pkey" type="pk-constr" table="salarios_contratados.situacion_personal_detalles">
		<columns names="id_situacion_personal_detalle" ref-type="src-columns"/>
	</constraint>
</table>

<table name="subsidios">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<position x="807" y="3412.6"/>
	<column name="id_subsidio" not-null="true" default-value="nextval('subsidios_id_subsidio_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="id_administracion" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="descripcion">
		<type name="character varying" length="100"/>
	</column>
	<column name="importe">
		<type name="numeric" length="15" precision="2"/>
	</column>
	<column name="activo" default-value="true">
		<type name="boolean"/>
	</column>
	<column name="usu_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
	<constraint name="subsidios_descripcion_importe_key" type="uq-constr" table="salarios_contratados.subsidios">
		<columns names="descripcion,importe" ref-type="src-columns"/>
	</constraint>
	<constraint name="subsidios_pkey" type="pk-constr" table="salarios_contratados.subsidios">
		<columns names="id_subsidio" ref-type="src-columns"/>
	</constraint>
</table>

<table name="tipos_aguinaldos">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<position x="1202" y="3412.6"/>
	<column name="id_tipo_aguinaldo" not-null="true" default-value="nextval('tipos_aguinaldos_id_tipo_aguinaldo_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="id_administracion" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="descripcion">
		<type name="character varying" length="80"/>
	</column>
	<column name="origen_detalle_tabla">
		<type name="character varying" length="100"/>
	</column>
	<column name="origen_detalle_id">
		<type name="character varying" length="80"/>
	</column>
	<column name="origen_cabecera_tabla">
		<type name="character varying" length="100"/>
	</column>
	<column name="origen_cabecera_id">
		<type name="character varying" length="80"/>
	</column>
	<column name="usu_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
	<constraint name="tipos_aguinaldos_pkey" type="pk-constr" table="salarios_contratados.tipos_aguinaldos">
		<columns names="id_tipo_aguinaldo" ref-type="src-columns"/>
	</constraint>
</table>

<table name="tipos_bonificaciones">
	<schema name="salarios_contratados"/>
	<role name="dalcaraz"/>
	<position x="1632" y="3412.6"/>
	<column name="id_tipo_bonificacion" not-null="true" default-value="nextval('tipos_bonificaciones_id_tipo_bonificacion_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="id_administracion" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="descripcion">
		<type name="character varying" length="80"/>
	</column>
	<column name="monto" default-value="0">
		<type name="numeric" length="12" precision="2"/>
	</column>
	<column name="porcentaje" default-value="0">
		<type name="numeric" length="5" precision="2"/>
	</column>
	<column name="fecha_desde">
		<type name="date"/>
	</column>
	<column name="fecha_hasta">
		<type name="date"/>
	</column>
	<column name="porcentual" default-value="false">
		<type name="boolean"/>
	</column>
	<column name="estado" default-value="true">
		<type name="boolean"/>
	</column>
	<column name="usu_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
	<constraint name="tipos_bonificaciones_pkey" type="pk-constr" table="salarios_contratados.tipos_bonificaciones">
		<columns names="id_tipo_bonificacion" ref-type="src-columns"/>
	</constraint>
</table>

<table name="tipos_planillas">
	<schema name="salarios_contratados"/>
	<role name="dalcaraz"/>
	<position x="2042" y="3412.6"/>
	<column name="id_tipo_planilla" not-null="true" default-value="nextval('tipos_planillas_id_tipo_planilla_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="nombre_tabla" not-null="true">
		<type name="character varying" length="80"/>
	</column>
	<column name="nombre_id_planilla" not-null="true">
		<type name="character varying" length="80"/>
	</column>
	<column name="nombre_tabla_detalle" not-null="true">
		<type name="character varying" length="80"/>
	</column>
	<column name="nombre_id_detalle_planilla" not-null="true">
		<type name="character varying" length="80"/>
	</column>
	<column name="nombre_campo_presupuestado" not-null="true">
		<type name="character varying" length="80"/>
	</column>
	<column name="nombre_campo_multas" not-null="true">
		<type name="character varying" length="80"/>
	</column>
	<column name="nombre_campo_devengado" not-null="true">
		<type name="character varying" length="80"/>
	</column>
	<column name="nombre_campo_iva" not-null="true">
		<type name="character varying" length="80"/>
	</column>
	<column name="nombre_campo_descuentos_varios" not-null="true">
		<type name="character varying" length="80"/>
	</column>
	<column name="nombre_campo_liquido" not-null="true">
		<type name="character varying" length="80"/>
	</column>
	<column name="nombre_id_campo_estructura" not-null="true">
		<type name="character varying" length="80"/>
	</column>
	<column name="descripcion_tipo" not-null="true">
		<type name="character varying" length="80"/>
	</column>
	<column name="usu_alta" not-null="true" default-value="'--'::character varying">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" not-null="true" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
	<constraint name="tipos_planillas_pkey" type="pk-constr" table="salarios_contratados.tipos_planillas">
		<columns names="id_tipo_planilla" ref-type="src-columns"/>
	</constraint>
</table>

<view name="vista_aguinaldo_funcionario_contratado">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<position x="807" y="3752"/>
	<reference>
		<expression><![CDATA[ SELECT vafc.id_administracion,
    vafc.id_funcionario,
    vafc.cedula_funcionario,
    vafc.ape_nom_funcionario,
    vafc.gestion,
    vafc.ids_mes,
    vafc.ids_oficina,
    vafc.id_oficina_final,
    vafc.ids_funcionario_aguinaldo,
    vafc.detalles_montos,
    vafc.id_tipo_aguinaldo,
    vafc.monto_total,
    vafc.cantidad,
    vafc.objeto_gasto,
    vafc.estado,
    o.nivel1 AS n1,
    o.nivel2 AS n2,
    o.nombre_nivel2 AS oficina
   FROM (( SELECT fa.id_administracion,
            fa.id_funcionario,
            max((f.cedula_funcionario)::text) AS cedula_funcionario,
            max(btrim((f.ape_nom_funcionario)::text)) AS ape_nom_funcionario,
            fa.gestion,
            array_to_string(array_agg(fa.id_mes ORDER BY fa.id_mes), ' - '::text) AS ids_mes,
            array_to_string(array_agg(fa.id_oficina ORDER BY fa.id_mes), ' - '::text) AS ids_oficina,
            (array_agg(fa.id_oficina ORDER BY fa.id_mes))[array_length(array_agg(fa.id_oficina), 1)] AS id_oficina_final,
            array_to_string(array_agg(fa.id_funcionario_aguinaldo ORDER BY fa.id_mes), ' - '::text) AS ids_funcionario_aguinaldo,
            array_to_string(array_agg((fa.monto)::numeric(15,0) ORDER BY fa.id_mes), ' - '::text) AS detalles_montos,
            fa.id_tipo_aguinaldo,
            (sum(fa.monto))::numeric(15,0) AS monto_total,
            count(fa.id_mes) AS cantidad,
            fa.objeto_gasto,
            fa.estado
           FROM (salarios_contratados.funcionarios_aguinaldos fa
             LEFT JOIN legajos.funcionarios f ON ((f.id_funcionario = fa.id_funcionario)))
          GROUP BY fa.id_administracion, fa.gestion, fa.id_funcionario, fa.objeto_gasto, fa.id_tipo_aguinaldo, fa.estado) vafc
     LEFT JOIN legajos.oficinas_con_descripciones o ON ((o.id_oficina = vafc.id_oficina_final)));]]></expression>
	</reference>
</view>

<view name="vista_funcionarios_bonificaciones">
	<schema name="salarios_contratados"/>
	<role name="dalcaraz"/>
	<position x="1281.6" y="3752"/>
	<reference>
		<expression><![CDATA[ SELECT a.id_administracion,
    a.id_mes,
    a.gestion,
    a.id_oficina,
    ((((((((((e.nivel1 || '-'::text) || e.nivel2) || '-'::text) || e.nivel3) || '-'::text) || e.nivel4) || '-'::text) || e.nivel5) || ' - '::text) || (e.nombre)::text) AS oficina,
    e.nivel1 AS n1,
    e.nivel2 AS n2,
    a.id_funcionario_bonificacion,
    d.id_funcionario,
    d.cedula_funcionario,
    d.ape_nom_funcionario,
    c.nro_contrato,
    c.objeto_gasto,
        CASE
            WHEN (f.porcentual IS TRUE) THEN (((((c.monto_contrato * f.porcentaje) / (100)::numeric) / (30)::numeric) * (a.cantidad_dias)::numeric))::integer
            ELSE (((f.monto / (30)::numeric) * (a.cantidad_dias)::numeric))::integer
        END AS importe,
    salarios_contratados.funcion_obtener_retencion(
        CASE
            WHEN (f.porcentual IS TRUE) THEN ((((((c.monto_contrato * f.porcentaje) / (100)::numeric) / (30)::numeric) * (a.cantidad_dias)::numeric))::integer)::numeric(12,2)
            ELSE ((((f.monto / (30)::numeric) * (a.cantidad_dias)::numeric))::integer)::numeric(12,2)
        END, c.porcentaje_iva, c.porcentaje_retencion) AS iva,
    a.cantidad_dias
   FROM ((((salarios_contratados.funcionarios_bonificaciones a
     JOIN salarios_contratados.funcionarios_contratos c ON ((c.id_funcionario_contrato = a.id_funcionario_contrato)))
     JOIN legajos.funcionarios d ON ((d.id_funcionario = c.id_funcionario)))
     JOIN legajos.oficinas e ON ((e.id_oficina = a.id_oficina)))
     JOIN salarios_contratados.tipos_bonificaciones f ON ((f.id_tipo_bonificacion = a.id_tipo_bonificacion)))
  WHERE (a.estado IS TRUE);]]></expression>
	</reference>
</view>

<view name="vista_funcionarios_contratados_aumento">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<position x="1710.2" y="3752"/>
	<reference>
		<expression><![CDATA[ SELECT f.ape_nom_funcionario,
    da.id_funcionario,
    t.id_funcionario_contratado_old,
    t.id_funcionario_contratado_new,
    fc.monto_contrato AS monto_contrato_old,
    fc2.monto_contrato AS monto_contrato_new
   FROM ((((( SELECT a.id_funcionario_contratado AS id_funcionario_contratado_new,
            ( SELECT fc2_1.id_funcionario_contratado
                   FROM legajos.funcionarios_contratados fc2_1
                  WHERE ((fc2_1.fecha_hasta = a.fecha_desde) AND (fc2_1.id_dato_administrativo = a.id_dato_administrativo))) AS id_funcionario_contratado_old
           FROM legajos.funcionarios_contratados a
          WHERE (a.id_funcionario_contratado > 0)) t
     JOIN legajos.funcionarios_contratados fc ON ((t.id_funcionario_contratado_new = fc.id_funcionario_contratado)))
     JOIN legajos.datos_administrativos da ON ((da.id_dato_administrativo = fc.id_dato_administrativo)))
     JOIN legajos.funcionarios f ON (((f.id_funcionario = da.id_funcionario) AND (f.estado_funcionario = true))))
     JOIN legajos.funcionarios_contratados fc2 ON ((t.id_funcionario_contratado_old = fc2.id_funcionario_contratado)))
  WHERE (NOT (t.id_funcionario_contratado_old IS NULL));]]></expression>
	</reference>
</view>

<view name="vista_multas_solicitadas">
	<schema name="salarios_contratados"/>
	<role name="dalcaraz"/>
	<position x="2192.8" y="3752"/>
	<reference>
		<expression><![CDATA[ SELECT a.id_multa_resolucion_contratado,
    a.id_funcionario,
    a.cant_dias_resolucion AS cantidad_dias,
    b.ape_nom_funcionario AS funcionario,
    b.cedula_funcionario AS cedula
   FROM (control.detalle_multas_resolucion_contratados a
     LEFT JOIN legajos.funcionarios b ON ((a.id_funcionario = b.id_funcionario)))
  WHERE (a.anulado IS FALSE);]]></expression>
	</reference>
</view>

<view name="vista_pagos_realizados_contratados">
	<schema name="salarios_contratados"/>
	<role name="postgres"/>
	<comment><![CDATA[Muestra los objetos de gastos, concepto de pago, esquemas/tablas involucradas (cabecera/detalle/secundaria)]]></comment>
	<position x="2556.4" y="3752"/>
	<reference>
		<expression><![CDATA[ SELECT 141 AS objeto_gasto,
    'SALARIOS - PERSONAL TECNICO'::text AS concepto,
    2 AS tipo,
    'salarios_contratados'::text AS esquema,
    'planillas_salarios'::text AS tabla_cabecera,
    'id_planilla_salario'::text AS id_tabla_cabecera,
    'planillas_salarios_detalles'::text AS tabla_detalle,
    'id_planilla_salario_detalle'::text AS id_tabla_detalle,
    'legajos.funcionarios'::text AS tabla_secundaria,
    'id_funcionario'::text AS id_tabla_secundaria,
    1 AS aguinaldo
UNION ALL
 SELECT 144 AS objeto_gasto,
    'SALARIOS - JORNAL'::text AS concepto,
    2 AS tipo,
    'salarios_contratados'::text AS esquema,
    'planillas_salarios'::text AS tabla_cabecera,
    'id_planilla_salario'::text AS id_tabla_cabecera,
    'planillas_salarios_detalles'::text AS tabla_detalle,
    'id_planilla_salario_detalle'::text AS id_tabla_detalle,
    'legajos.funcionarios'::text AS tabla_secundaria,
    'id_funcionario'::text AS id_tabla_secundaria,
    1 AS aguinaldo
UNION ALL
 SELECT 145 AS objeto_gasto,
    'SALARIOS - PROFESIONAL'::text AS concepto,
    2 AS tipo,
    'salarios_contratados'::text AS esquema,
    'planillas_salarios'::text AS tabla_cabecera,
    'id_planilla_salario'::text AS id_tabla_cabecera,
    'planillas_salarios_detalles'::text AS tabla_detalle,
    'id_planilla_salario_detalle'::text AS id_tabla_detalle,
    'legajos.funcionarios'::text AS tabla_secundaria,
    'id_funcionario'::text AS id_tabla_secundaria,
    1 AS aguinaldo
UNION ALL
 SELECT 141 AS objeto_gasto,
    'REMUNERACION EXTRAORDINARIA (RE) - PERSONAL TECNICO'::text AS concepto,
    2 AS tipo,
    'salarios_contratados'::text AS esquema,
    'planillas_re'::text AS tabla_cabecera,
    'id_planilla_re'::text AS id_tabla_cabecera,
    'planillas_re_detalles'::text AS tabla_detalle,
    'id_planilla_re_detalle'::text AS id_tabla_detalle,
    'legajos.funcionarios'::text AS tabla_secundaria,
    'id_funcionario'::text AS id_tabla_secundaria,
    1 AS aguinaldo
UNION ALL
 SELECT 144 AS objeto_gasto,
    'REMUNERACION EXTRAORDINARIA (RE) - JORNAL'::text AS concepto,
    2 AS tipo,
    'salarios_contratados'::text AS esquema,
    'planillas_re'::text AS tabla_cabecera,
    'id_planilla_re'::text AS id_tabla_cabecera,
    'planillas_re_detalles'::text AS tabla_detalle,
    'id_planilla_re_detalle'::text AS id_tabla_detalle,
    'legajos.funcionarios'::text AS tabla_secundaria,
    'id_funcionario'::text AS id_tabla_secundaria,
    1 AS aguinaldo
UNION ALL
 SELECT 145 AS objeto_gasto,
    'REMUNERACION EXTRAORDINARIA (RE) - PROFESIONAL'::text AS concepto,
    2 AS tipo,
    'salarios_contratados'::text AS esquema,
    'planillas_re'::text AS tabla_cabecera,
    'id_planilla_re'::text AS id_tabla_cabecera,
    'planillas_re_detalles'::text AS tabla_detalle,
    'id_planilla_re_detalle'::text AS id_tabla_detalle,
    'legajos.funcionarios'::text AS tabla_secundaria,
    'id_funcionario'::text AS id_tabla_secundaria,
    1 AS aguinaldo
UNION ALL
 SELECT 141 AS objeto_gasto,
    'REMUNERACION ADICIONAL (RA) - PERSONAL TECNICO'::text AS concepto,
    2 AS tipo,
    'salarios_contratados'::text AS esquema,
    'planillas_ra'::text AS tabla_cabecera,
    'id_planilla_ra'::text AS id_tabla_cabecera,
    'planillas_ra_detalles'::text AS tabla_detalle,
    'id_planilla_ra_detalle'::text AS id_tabla_detalle,
    'legajos.funcionarios'::text AS tabla_secundaria,
    'id_funcionario'::text AS id_tabla_secundaria,
    1 AS aguinaldo
UNION ALL
 SELECT 144 AS objeto_gasto,
    'REMUNERACION ADICIONAL (RA) - JORNAL'::text AS concepto,
    2 AS tipo,
    'salarios_contratados'::text AS esquema,
    'planillas_ra'::text AS tabla_cabecera,
    'id_planilla_ra'::text AS id_tabla_cabecera,
    'planillas_ra_detalles'::text AS tabla_detalle,
    'id_planilla_ra_detalle'::text AS id_tabla_detalle,
    'legajos.funcionarios'::text AS tabla_secundaria,
    'id_funcionario'::text AS id_tabla_secundaria,
    1 AS aguinaldo
UNION ALL
 SELECT 145 AS objeto_gasto,
    'REMUNERACION ADICIONAL (RA) - PROFESIONAL'::text AS concepto,
    2 AS tipo,
    'salarios_contratados'::text AS esquema,
    'planillas_ra'::text AS tabla_cabecera,
    'id_planilla_ra'::text AS id_tabla_cabecera,
    'planillas_ra_detalles'::text AS tabla_detalle,
    'id_planilla_ra_detalle'::text AS id_tabla_detalle,
    'legajos.funcionarios'::text AS tabla_secundaria,
    'id_funcionario'::text AS id_tabla_secundaria,
    1 AS aguinaldo
UNION ALL
 SELECT 141 AS objeto_gasto,
    (btrim(a.descripcion) || ' - PERSONAL TECNICO'::text) AS concepto,
    2 AS tipo,
    'salarios_contratados'::text AS esquema,
    'planillas_subsidios'::text AS tabla_cabecera,
    'id_planilla_subsidio'::text AS id_tabla_cabecera,
    'planillas_subsidios_detalles'::text AS tabla_detalle,
    'id_planilla_subsidio_detalle'::text AS id_tabla_detalle,
    'salarios_contratados.funcionarios_subsidios'::text AS tabla_secundaria,
    'id_funcionario_subsidio'::text AS id_tabla_secundaria,
    0 AS aguinaldo
   FROM ( SELECT DISTINCT btrim((b.descripcion)::text) AS descripcion
           FROM ((salarios_contratados.planillas_subsidios_detalles psd
             LEFT JOIN salarios_contratados.funcionarios_subsidios fs ON ((fs.id_funcionario_subsidio = psd.id_funcionario_subsidio)))
             LEFT JOIN salarios_contratados.subsidios b ON ((b.id_subsidio = fs.id_subsidio)))
          ORDER BY (btrim((b.descripcion)::text))) a
UNION ALL
 SELECT 144 AS objeto_gasto,
    (btrim(a.descripcion) || ' - JORNAL'::text) AS concepto,
    2 AS tipo,
    'salarios_contratados'::text AS esquema,
    'planillas_subsidios'::text AS tabla_cabecera,
    'id_planilla_subsidio'::text AS id_tabla_cabecera,
    'planillas_subsidios_detalles'::text AS tabla_detalle,
    'id_planilla_subsidio_detalle'::text AS id_tabla_detalle,
    'salarios_contratados.funcionarios_subsidios'::text AS tabla_secundaria,
    'id_funcionario_subsidio'::text AS id_tabla_secundaria,
    0 AS aguinaldo
   FROM ( SELECT DISTINCT btrim((b.descripcion)::text) AS descripcion
           FROM ((salarios_contratados.planillas_subsidios_detalles psd
             LEFT JOIN salarios_contratados.funcionarios_subsidios fs ON ((fs.id_funcionario_subsidio = psd.id_funcionario_subsidio)))
             LEFT JOIN salarios_contratados.subsidios b ON ((b.id_subsidio = fs.id_subsidio)))
          ORDER BY (btrim((b.descripcion)::text))) a
UNION ALL
 SELECT 145 AS objeto_gasto,
    (btrim(a.descripcion) || ' - PROFESIONAL'::text) AS concepto,
    2 AS tipo,
    'salarios_contratados'::text AS esquema,
    'planillas_subsidios'::text AS tabla_cabecera,
    'id_planilla_subsidio'::text AS id_tabla_cabecera,
    'planillas_subsidios_detalles'::text AS tabla_detalle,
    'id_planilla_subsidio_detalle'::text AS id_tabla_detalle,
    'salarios_contratados.funcionarios_subsidios'::text AS tabla_secundaria,
    'id_funcionario_subsidio'::text AS id_tabla_secundaria,
    0 AS aguinaldo
   FROM ( SELECT DISTINCT btrim((b.descripcion)::text) AS descripcion
           FROM ((salarios_contratados.planillas_subsidios_detalles psd
             LEFT JOIN salarios_contratados.funcionarios_subsidios fs ON ((fs.id_funcionario_subsidio = psd.id_funcionario_subsidio)))
             LEFT JOIN salarios_contratados.subsidios b ON ((b.id_subsidio = fs.id_subsidio)))
          ORDER BY (btrim((b.descripcion)::text))) a
UNION ALL
 SELECT 141 AS objeto_gasto,
    'GRATIFICACION OCASIONAL - PERSONAL TECNICO'::text AS concepto,
    2 AS tipo,
    'salarios_contratados'::text AS esquema,
    'planillas_gratificaciones_ocasionales'::text AS tabla_cabecera,
    'id_planilla_gratificacion_ocasional'::text AS id_tabla_cabecera,
    'planillas_gratificaciones_ocasionales_detalles'::text AS tabla_detalle,
    'id_planilla_gratificacion_ocasional_detalle'::text AS id_tabla_detalle,
    'legajos.funcionarios'::text AS tabla_secundaria,
    'id_funcionario'::text AS id_tabla_secundaria,
    1 AS aguinaldo
UNION ALL
 SELECT 144 AS objeto_gasto,
    'GRATIFICACION OCASIONAL - JORNAL'::text AS concepto,
    2 AS tipo,
    'salarios_contratados'::text AS esquema,
    'planillas_gratificaciones_ocasionales'::text AS tabla_cabecera,
    'id_planilla_gratificacion_ocasional'::text AS id_tabla_cabecera,
    'planillas_gratificaciones_ocasionales_detalles'::text AS tabla_detalle,
    'id_planilla_gratificacion_ocasional_detalle'::text AS id_tabla_detalle,
    'legajos.funcionarios'::text AS tabla_secundaria,
    'id_funcionario'::text AS id_tabla_secundaria,
    1 AS aguinaldo
UNION ALL
 SELECT 145 AS objeto_gasto,
    'GRATIFICACION OCASIONAL - PROFESIONAL'::text AS concepto,
    2 AS tipo,
    'salarios_contratados'::text AS esquema,
    'planillas_gratificaciones_ocasionales'::text AS tabla_cabecera,
    'id_planilla_gratificacion_ocasional'::text AS id_tabla_cabecera,
    'planillas_gratificaciones_ocasionales_detalles'::text AS tabla_detalle,
    'id_planilla_gratificacion_ocasional_detalle'::text AS id_tabla_detalle,
    'legajos.funcionarios'::text AS tabla_secundaria,
    'id_funcionario'::text AS id_tabla_secundaria,
    1 AS aguinaldo;]]></expression>
	</reference>
</view>

<view name="vista_registros_psd">
	<schema name="salarios_contratados"/>
	<role name="dalcaraz"/>
	<position x="807" y="3839.4"/>
	<reference>
		<expression><![CDATA[ SELECT datos.id_administracion,
    datos.id_funcionario_contrato,
    datos.id_tipo_contrato,
    datos.objeto_gasto,
    datos.id_oficina,
    datos.id_funcionario,
    datos.monto_contrato,
    datos.porcentaje_iva,
    datos.porcentaje_retencion,
    datos.gestion,
    datos.estado,
    datos.cedula,
    datos.funcionario,
    datos.dias_trabajados,
    datos.cantidad_dias,
    ((((datos.monto_contrato / (30)::numeric))::integer * datos.dias_trabajados))::numeric(15,2) AS monto_devengado,
    ((((((datos.monto_contrato / (30)::numeric))::integer)::numeric * datos.cantidad_dias))::integer)::numeric(15,2) AS monto_multa,
    salarios_contratados.funcion_obtener_retencion(datos.monto_contrato, datos.porcentaje_iva, datos.porcentaje_retencion) AS monto_retencion_iva
   FROM ( SELECT datos_1.id_administracion,
            datos_1.id_funcionario_contrato,
            datos_1.id_tipo_contrato,
            datos_1.objeto_gasto,
            datos_1.id_oficina,
            datos_1.id_funcionario,
            datos_1.monto_contrato,
            datos_1.porcentaje_iva,
            datos_1.porcentaje_retencion,
            datos_1.gestion,
            datos_1.estado,
            datos_1.cedula,
            datos_1.funcionario,
                CASE
                    WHEN (sp.dias_trabajados IS NULL) THEN 30
                    ELSE sp.dias_trabajados
                END AS dias_trabajados,
                CASE
                    WHEN (cd.cantidad_dias IS NULL) THEN (0)::numeric
                    ELSE (cd.cantidad_dias)::numeric
                END AS cantidad_dias
           FROM ((( SELECT fc.id_administracion,
                    fc.id_funcionario_contrato,
                    fc.id_tipo_contrato,
                    fc.objeto_gasto,
                    fc.id_oficina,
                    fc.id_funcionario,
                    fc.monto_contrato,
                    fc.porcentaje_iva,
                    fc.porcentaje_retencion,
                    fc.gestion,
                    fc.estado,
                    f.cedula_funcionario AS cedula,
                    f.ape_nom_funcionario AS funcionario
                   FROM (salarios_contratados.funcionarios_contratos fc
                     JOIN legajos.funcionarios f ON ((fc.id_funcionario = f.id_funcionario)))) datos_1
             LEFT JOIN ( SELECT spd.id_funcionario,
                    spd.dias_trabajados
                   FROM (salarios_contratados.situacion_personal sp_1
                     JOIN salarios_contratados.situacion_personal_detalles spd ON ((spd.id_situacion_personal = sp_1.id_situacion_personal)))) sp ON ((sp.id_funcionario = datos_1.id_funcionario)))
             LEFT JOIN ( SELECT msd.id_funcionario,
                    msd.cantidad_dias
                   FROM (salarios_contratados.multas_solicitadas_detalles msd
                     JOIN salarios_contratados.multas_solicitadas ms ON ((ms.id_multa_solicitada = msd.id_multa_solicitada)))) cd ON ((cd.id_funcionario = datos_1.id_funcionario)))) datos;]]></expression>
	</reference>
</view>

<trigger name="actualiza_contrato" firing-type="BEFORE" per-line="true" constraint="false"
	 ins-event="true" del-event="false" upd-event="false" trunc-event="false"
	 table="salarios_contratados.funcionarios_contratos">
		<function signature="salarios_contratados.actualiza_contrato()"/>
</trigger>

<trigger name="actualiza_importes_totales" firing-type="AFTER" per-line="true" constraint="false"
	 ins-event="true" del-event="true" upd-event="true" trunc-event="false"
	 table="salarios_contratados.planillas_salarios_detalles">
		<function signature="salarios_contratados.planilla_salarios_actualiza_importes_totales()"/>
</trigger>

<trigger name="actualiza_importes_totales" firing-type="AFTER" per-line="true" constraint="false"
	 ins-event="true" del-event="true" upd-event="true" trunc-event="false"
	 table="salarios_contratados.planillas_gratificaciones_ocasionales_detalles">
		<function signature="salarios_contratados.planillas_gratificaciones_ocasionales_actualiza_importes_totale()"/>
</trigger>

<trigger name="actualiza_importes_totales" firing-type="AFTER" per-line="true" constraint="false"
	 ins-event="true" del-event="true" upd-event="true" trunc-event="false"
	 table="salarios_contratados.planillas_ra_detalles">
		<function signature="salarios_contratados.planillas_ra_detalles_actualiza_importes_totales()"/>
</trigger>

<trigger name="actualiza_importes_totales" firing-type="AFTER" per-line="true" constraint="false"
	 ins-event="true" del-event="true" upd-event="true" trunc-event="false"
	 table="salarios_contratados.planillas_re_detalles">
		<function signature="salarios_contratados.planillas_re_detalles_actualiza_importes_totales()"/>
</trigger>

<trigger name="actualiza_importes_totales" firing-type="AFTER" per-line="true" constraint="false"
	 ins-event="true" del-event="true" upd-event="true" trunc-event="false"
	 table="salarios_contratados.planillas_subsidios_detalles">
		<function signature="salarios_contratados.planillas_subsidios_detalles_actualiza_importes_totales()"/>
</trigger>

<trigger name="actualiza_importes_totales" firing-type="AFTER" per-line="true" constraint="false"
	 ins-event="true" del-event="true" upd-event="true" trunc-event="false"
	 table="salarios_contratados.planillas_aguinaldos_detalles">
		<function signature="salarios_contratados.planillas_aguinaldos_detalles_actualiza_importes_totales()"/>
</trigger>

<trigger name="actualiza_importes_totales" firing-type="AFTER" per-line="true" constraint="false"
	 ins-event="true" del-event="true" upd-event="true" trunc-event="false"
	 table="salarios_contratados.planillas_serenos_detalles">
		<function signature="salarios_contratados.planillas_serenos_detalles_actualiza_importes_totales()"/>
</trigger>

<trigger name="actualiza_importes_totales" firing-type="AFTER" per-line="true" constraint="false"
	 ins-event="true" del-event="true" upd-event="true" trunc-event="false"
	 table="salarios_contratados.planillas_bonificaciones_detalles">
		<function signature="salarios_contratados.planillas_bonificaciones_detalles_actualiza_importes_totales()"/>
</trigger>

<trigger name="actualiza_montos_pedido_fondo" firing-type="AFTER" per-line="true" constraint="false"
	 ins-event="true" del-event="true" upd-event="true" trunc-event="false"
	 table="salarios_contratados.pedidos_fondos_detalles">
		<function signature="salarios_contratados.pedido_fondo_actualiza_montos()"/>
</trigger>

<trigger name="actualiza_montos_pedido_fondo_aguinaldo" firing-type="AFTER" per-line="true" constraint="false"
	 ins-event="true" del-event="true" upd-event="true" trunc-event="false"
	 table="salarios_contratados.pedido_fondo_aguinaldo_detalle">
		<function signature="salarios_contratados.pedido_fondo_aguinaldo_actualiza_montos()"/>
</trigger>

<table name="gestiones">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="50" y="50"/>
	<column name="gestion" not-null="true">
		<type name="numeric" length="4" precision="0"/>
	</column>
	<column name="id_administracion" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="usu_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="activo" not-null="true" default-value="false">
		<type name="boolean"/>
	</column>
	<column name="fec_alta" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
</table>

<schema name="seguridad" rect-visible="true" fill-color="#b0f8c8">
	<role name="postgres"/>
</schema>

<table name="administracion">
	<schema name="seguridad"/>
	<role name="postgres"/>
	<position x="3305" y="50"/>
	<column name="id_administracion" not-null="true" default-value="nextval('administracion_id_administracion_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="nombre" not-null="true">
		<type name="character varying" length="255"/>
	</column>
	<column name="usu_alta" not-null="true">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
</table>

<table name="meses">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="422" y="50"/>
	<column name="id_mes" not-null="true" default-value="nextval('meses_id_mes_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="id_administracion" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="mes_descripcion">
		<type name="character varying" length="20"/>
	</column>
	<column name="usu_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
</table>

<schema name="salarios" rect-visible="true" fill-color="#ee9029">
	<role name="postgres"/>
</schema>

<table name="tipos_descuentos">
	<schema name="salarios"/>
	<role name="postgres"/>
	<position x="50" y="3932.8"/>
	<column name="id_tipo_descuento" not-null="true" default-value="nextval('tipos_descuentos_id_tipo_descuento_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="id_administracion" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="descripcion">
		<type name="text"/>
	</column>
	<column name="abreviatura">
		<type name="character varying" length="20"/>
	</column>
	<column name="aso" default-value="false">
		<type name="boolean"/>
		<comment><![CDATA[Este campo permite identificar si este registro pertenece a descuentos varios, cuando el valor esta en TRUE o si es un descuento judicial (cobro de guaranies o prestación alimentaria) cuando el valor esta en FALSE.-]]></comment>
	</column>
	<column name="orden">
		<type name="integer"/>
	</column>
	<column name="usu_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
</table>

<schema name="legajos" rect-visible="true" fill-color="#a66d52">
	<role name="postgres"/>
</schema>

<table name="funcionarios">
	<schema name="legajos"/>
	<role name="postgres"/>
	<position x="812" y="3932.8"/>
	<column name="id_funcionario" not-null="true" default-value="nextval('funcionarios_id_funcionario_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="id_administracion" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="cedula_funcionario">
		<type name="character varying" length="15"/>
	</column>
	<column name="nombre_funcionario">
		<type name="character varying" length="80"/>
	</column>
	<column name="apellido_funcionario">
		<type name="character varying" length="80"/>
	</column>
	<column name="ape_nom_funcionario">
		<type name="character varying" length="100"/>
	</column>
	<column name="fecha_nac_funcionario">
		<type name="date"/>
	</column>
	<column name="estado_funcionario" default-value="true">
		<type name="boolean"/>
	</column>
	<column name="foto">
		<type name="bytea"/>
	</column>
	<column name="usu_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
</table>

<table name="oficinas">
	<schema name="legajos"/>
	<role name="postgres"/>
	<position x="1224" y="3932.8"/>
	<column name="id_oficina" not-null="true" default-value="nextval('oficinas_id_oficina_seq1'::regclass)">
		<type name="integer"/>
	</column>
	<column name="id_administracion" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="id_estructura_presupuestaria" not-null="true">
		<type name="integer"/>
	</column>
	<column name="gestion" not-null="true">
		<type name="numeric" length="4" precision="0"/>
	</column>
	<column name="id_edificio">
		<type name="integer"/>
	</column>
	<column name="nombre">
		<type name="character varying" length="255"/>
	</column>
	<column name="nivel1">
		<type name="integer"/>
	</column>
	<column name="nivel2">
		<type name="integer"/>
	</column>
	<column name="nivel3">
		<type name="integer"/>
	</column>
	<column name="nivel4">
		<type name="integer"/>
	</column>
	<column name="nivel5">
		<type name="integer"/>
	</column>
	<column name="estado">
		<type name="boolean"/>
	</column>
	<column name="usu_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
</table>

<table name="funcionarios_contratados">
	<schema name="legajos"/>
	<role name="jcabrera"/>
	<position x="1678" y="3932.8"/>
	<column name="id_funcionario_contratado" not-null="true" default-value="nextval('funcionarios_contratados_id_funcionario_contratado_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="id_administracion" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="id_tipo_documento_administrativo" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_tipo_evento_administrativo" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_tipo_disposicion_dependencia" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_oficina_presta" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_funcion" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_dato_administrativo" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_tipo_contrato" not-null="true">
		<type name="integer"/>
	</column>
	<column name="nro_disposicion">
		<type name="character varying" length="10"/>
	</column>
	<column name="nro_contrato">
		<type name="character varying" length="15"/>
	</column>
	<column name="fecha_desde">
		<type name="date"/>
	</column>
	<column name="fecha_hasta">
		<type name="date"/>
	</column>
	<column name="monto_contrato">
		<type name="integer"/>
	</column>
	<column name="funcion">
		<type name="text"/>
	</column>
	<column name="fecha_disposicion">
		<type name="date"/>
	</column>
	<column name="obj_codigo">
		<type name="numeric" length="3" precision="0"/>
	</column>
	<column name="rem_complementarias">
		<type name="boolean"/>
	</column>
	<column name="percibe_re">
		<type name="boolean"/>
	</column>
	<column name="percibe_ra">
		<type name="boolean"/>
	</column>
	<column name="percibe_aguinaldo" default-value="true">
		<type name="boolean"/>
	</column>
	<column name="contrato_actual" default-value="false">
		<type name="boolean"/>
	</column>
	<column name="nro_expediente">
		<type name="character varying" length="20"/>
	</column>
	<column name="carga_horaria_diaria">
		<type name="numeric" length="2" precision="0"/>
	</column>
	<column name="usu_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="categoria" default-value="'---'::character varying">
		<type name="character varying" length="3"/>
	</column>
	<column name="cod_fuente_financiamiento">
		<type name="integer"/>
	</column>
	<column name="id_oficina_financia">
		<type name="integer"/>
	</column>
</table>

<table name="tipo_contrato">
	<schema name="legajos"/>
	<role name="postgres"/>
	<position x="2153" y="3932.8"/>
	<column name="id_tipo_contrato" not-null="true" default-value="nextval('tipo_contrato_id_tipo_contrato_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="id_administracion" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="descripcion_tipo">
		<type name="character varying" length="80"/>
	</column>
	<column name="usu_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
</table>

<table name="bancos">
	<schema name="salarios"/>
	<role name="postgres"/>
	<position x="427" y="3932.8"/>
	<column name="id_bancos" not-null="true" default-value="nextval('bancos_id_bancos_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="id_administracion" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="ban_descripcion">
		<type name="character varying" length="50"/>
	</column>
	<column name="usu_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
</table>

<table name="departamentos">
	<schema name="legajos"/>
	<role name="postgres"/>
	<position x="2525" y="3932.8"/>
	<column name="id_departamento" not-null="true" default-value="nextval('departamentos_id_departamento_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="id_administracion" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="id_pais" not-null="true">
		<type name="integer"/>
	</column>
	<column name="depar_descripcion">
		<type name="character varying" length="100"/>
	</column>
	<column name="usu_alta">
		<type name="character varying"/>
	</column>
	<column name="fec_alta" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying"/>
	</column>
	<column name="fec_modi" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
</table>

<schema name="control" rect-visible="true" fill-color="#f9730a">
	<role name="postgres"/>
</schema>

<table name="multas_resolucion_contratados">
	<schema name="control"/>
	<role name="mcaniza"/>
	<position x="2925" y="3932.8"/>
	<column name="id_multa_resolucion_contratado" not-null="true" default-value="nextval('multas_resolucion_contratados_id_multa_resolucion_contratad_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="id_mes" not-null="true">
		<type name="integer"/>
	</column>
	<column name="gestion" not-null="true">
		<type name="numeric" length="4" precision="0"/>
	</column>
	<column name="id_administracion" not-null="true">
		<type name="integer"/>
	</column>
	<column name="resolucion_nro" default-value="0">
		<type name="integer"/>
	</column>
	<column name="fecha_resolucion">
		<type name="date"/>
	</column>
	<column name="documento">
		<type name="bytea"/>
	</column>
	<column name="fecha_inicio">
		<type name="date"/>
	</column>
	<column name="fecha_fin">
		<type name="date"/>
	</column>
	<column name="estado" default-value="0">
		<type name="integer"/>
		<comment><![CDATA[0 = creado, 1 = controlado, 2 = finiquitado, 3 = anulado]]></comment>
	</column>
	<column name="usu_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
</table>

<table name="aplicadas_horas_detalle">
	<schema name="control"/>
	<role name="caquino"/>
	<position x="3387" y="3932.8"/>
	<column name="id_aplicada_hora_detalle" not-null="true" default-value="nextval('aplicadas_horas_detalle_id_aplicada_hora_detalle_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="id_administracion" not-null="true" default-value="0">
		<type name="integer"/>
	</column>
	<column name="id_aplicada_hora" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_pedido_hora_detalle" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_funcionario" not-null="true">
		<type name="integer"/>
	</column>
	<column name="id_oficina" not-null="true">
		<type name="integer"/>
	</column>
	<column name="horas_re">
		<type name="numeric" length="5" precision="2"/>
	</column>
	<column name="horas_ra">
		<type name="numeric" length="5" precision="2"/>
	</column>
	<column name="usu_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_alta" default-value="now()">
		<type name="timestamp"/>
	</column>
	<column name="usu_modi">
		<type name="character varying" length="30"/>
	</column>
	<column name="fec_modi">
		<type name="timestamp"/>
	</column>
	<column name="ip_alta">
		<type name="character varying" length="30"/>
	</column>
	<column name="ip_modi">
		<type name="character varying" length="30"/>
	</column>
</table>

<constraint name="aso_temporales_gestion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="public.gestiones" table="salarios_contratados.aso_temporales">
	<columns names="gestion" ref-type="src-columns"/>
	<columns names="gestion" ref-type="dst-columns"/>
</constraint>

<constraint name="aso_temporales_id_administracion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="seguridad.administracion" table="salarios_contratados.aso_temporales">
	<columns names="id_administracion" ref-type="src-columns"/>
	<columns names="id_administracion" ref-type="dst-columns"/>
</constraint>

<constraint name="aso_temporales_id_mes_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="public.meses" table="salarios_contratados.aso_temporales">
	<columns names="id_mes" ref-type="src-columns"/>
	<columns names="id_mes" ref-type="dst-columns"/>
</constraint>

<constraint name="aso_temporales_id_tipo_descuento_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="salarios.tipos_descuentos" table="salarios_contratados.aso_temporales">
	<columns names="id_tipo_descuento" ref-type="src-columns"/>
	<columns names="id_tipo_descuento" ref-type="dst-columns"/>
</constraint>

<constraint name="autorizaciones_id_administracion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="seguridad.administracion" table="salarios_contratados.autorizaciones">
	<columns names="id_administracion" ref-type="src-columns"/>
	<columns names="id_administracion" ref-type="dst-columns"/>
</constraint>

<constraint name="autorizaciones_id_funcionario_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="legajos.funcionarios" table="salarios_contratados.autorizaciones">
	<columns names="id_funcionario" ref-type="src-columns"/>
	<columns names="id_funcionario" ref-type="dst-columns"/>
</constraint>

<constraint name="autorizaciones_id_tipo_descuento_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="salarios.tipos_descuentos" table="salarios_contratados.autorizaciones">
	<columns names="id_tipo_descuento" ref-type="src-columns"/>
	<columns names="id_tipo_descuento" ref-type="dst-columns"/>
</constraint>

<constraint name="funcionarios_contratados_aumento_gestion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="public.gestiones" table="salarios_contratados.funcionarios_contratados_aumento">
	<columns names="gestion" ref-type="src-columns"/>
	<columns names="gestion" ref-type="dst-columns"/>
</constraint>

<constraint name="funcionarios_contratados_aumento_id_administracion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="seguridad.administracion" table="salarios_contratados.funcionarios_contratados_aumento">
	<columns names="id_administracion" ref-type="src-columns"/>
	<columns names="id_administracion" ref-type="dst-columns"/>
</constraint>

<constraint name="funcionarios_contratados_aumento_id_funcionario_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="legajos.funcionarios" table="salarios_contratados.funcionarios_contratados_aumento">
	<columns names="id_funcionario" ref-type="src-columns"/>
	<columns names="id_funcionario" ref-type="dst-columns"/>
</constraint>

<constraint name="funcionarios_contratados_aumento_id_mes_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="public.meses" table="salarios_contratados.funcionarios_contratados_aumento">
	<columns names="id_mes" ref-type="src-columns"/>
	<columns names="id_mes" ref-type="dst-columns"/>
</constraint>

<constraint name="demandante_id_administracion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="seguridad.administracion" table="salarios_contratados.demandantes">
	<columns names="id_administracion" ref-type="src-columns"/>
	<columns names="id_administracion" ref-type="dst-columns"/>
</constraint>

<constraint name="descuentos_aso_gestion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="public.gestiones" table="salarios_contratados.descuentos_aso">
	<columns names="gestion" ref-type="src-columns"/>
	<columns names="gestion" ref-type="dst-columns"/>
</constraint>

<constraint name="descuentos_aso_id_administracion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="seguridad.administracion" table="salarios_contratados.descuentos_aso">
	<columns names="id_administracion" ref-type="src-columns"/>
	<columns names="id_administracion" ref-type="dst-columns"/>
</constraint>

<constraint name="descuentos_aso_id_funcionario_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="legajos.funcionarios" table="salarios_contratados.descuentos_aso">
	<columns names="id_funcionario" ref-type="src-columns"/>
	<columns names="id_funcionario" ref-type="dst-columns"/>
</constraint>

<constraint name="descuentos_aso_id_mes_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="public.meses" table="salarios_contratados.descuentos_aso">
	<columns names="id_mes" ref-type="src-columns"/>
	<columns names="id_mes" ref-type="dst-columns"/>
</constraint>

<constraint name="descuentos_aso_id_tipo_descuento_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="salarios.tipos_descuentos" table="salarios_contratados.descuentos_aso">
	<columns names="id_tipo_descuento" ref-type="src-columns"/>
	<columns names="id_tipo_descuento" ref-type="dst-columns"/>
</constraint>

<constraint name="descuentos_judiciales_gestion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="public.gestiones" table="salarios_contratados.descuentos_judiciales">
	<columns names="gestion" ref-type="src-columns"/>
	<columns names="gestion" ref-type="dst-columns"/>
</constraint>

<constraint name="descuentos_judiciales_id_administracion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="seguridad.administracion" table="salarios_contratados.descuentos_judiciales">
	<columns names="id_administracion" ref-type="src-columns"/>
	<columns names="id_administracion" ref-type="dst-columns"/>
</constraint>

<constraint name="descuentos_judiciales_id_funcionario_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="legajos.funcionarios" table="salarios_contratados.descuentos_judiciales">
	<columns names="id_funcionario" ref-type="src-columns"/>
	<columns names="id_funcionario" ref-type="dst-columns"/>
</constraint>

<constraint name="descuentos_judiciales_id_mes_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="public.meses" table="salarios_contratados.descuentos_judiciales">
	<columns names="id_mes" ref-type="src-columns"/>
	<columns names="id_mes" ref-type="dst-columns"/>
</constraint>

<constraint name="descuentos_judiciales_id_tipo_descuento_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="salarios.tipos_descuentos" table="salarios_contratados.descuentos_judiciales">
	<columns names="id_tipo_descuento" ref-type="src-columns"/>
	<columns names="id_tipo_descuento" ref-type="dst-columns"/>
</constraint>

<constraint name="funcionarios_aguinaldo_id_administracion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="seguridad.administracion" table="salarios_contratados.funcionarios_aguinaldos">
	<columns names="id_administracion" ref-type="src-columns"/>
	<columns names="id_administracion" ref-type="dst-columns"/>
</constraint>

<constraint name="funcionarios_aguinaldos_gestion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="public.gestiones" table="salarios_contratados.funcionarios_aguinaldos">
	<columns names="gestion" ref-type="src-columns"/>
	<columns names="gestion" ref-type="dst-columns"/>
</constraint>

<constraint name="funcionarios_aguinaldos_id_administracion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="seguridad.administracion" table="salarios_contratados.funcionarios_aguinaldos">
	<columns names="id_administracion" ref-type="src-columns"/>
	<columns names="id_administracion" ref-type="dst-columns"/>
</constraint>

<constraint name="funcionarios_aguinaldos_id_funcionario_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="legajos.funcionarios" table="salarios_contratados.funcionarios_aguinaldos">
	<columns names="id_funcionario" ref-type="src-columns"/>
	<columns names="id_funcionario" ref-type="dst-columns"/>
</constraint>

<constraint name="funcionarios_aguinaldos_id_mes_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="public.meses" table="salarios_contratados.funcionarios_aguinaldos">
	<columns names="id_mes" ref-type="src-columns"/>
	<columns names="id_mes" ref-type="dst-columns"/>
</constraint>

<constraint name="funcionarios_aguinaldos_id_oficina_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="legajos.oficinas" table="salarios_contratados.funcionarios_aguinaldos">
	<columns names="id_oficina" ref-type="src-columns"/>
	<columns names="id_oficina" ref-type="dst-columns"/>
</constraint>

<constraint name="funcionarios_bonificaciones_gestion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="public.gestiones" table="salarios_contratados.funcionarios_bonificaciones">
	<columns names="gestion" ref-type="src-columns"/>
	<columns names="gestion" ref-type="dst-columns"/>
</constraint>

<constraint name="funcionarios_bonificaciones_id_administracion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="seguridad.administracion" table="salarios_contratados.funcionarios_bonificaciones">
	<columns names="id_administracion" ref-type="src-columns"/>
	<columns names="id_administracion" ref-type="dst-columns"/>
</constraint>

<constraint name="funcionarios_bonificaciones_id_funcionario_contrato_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="salarios_contratados.funcionarios_contratos" table="salarios_contratados.funcionarios_bonificaciones">
	<columns names="id_funcionario_contrato" ref-type="src-columns"/>
	<columns names="id_funcionario_contrato" ref-type="dst-columns"/>
</constraint>

<constraint name="funcionarios_bonificaciones_id_mes_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="public.meses" table="salarios_contratados.funcionarios_bonificaciones">
	<columns names="id_mes" ref-type="src-columns"/>
	<columns names="id_mes" ref-type="dst-columns"/>
</constraint>

<constraint name="funcionarios_bonificaciones_id_oficina_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="legajos.oficinas" table="salarios_contratados.funcionarios_bonificaciones">
	<columns names="id_oficina" ref-type="src-columns"/>
	<columns names="id_oficina" ref-type="dst-columns"/>
</constraint>

<constraint name="funcionarios_bonificaciones_id_tipo_bonificacion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="salarios_contratados.tipos_bonificaciones" table="salarios_contratados.funcionarios_bonificaciones">
	<columns names="id_tipo_bonificacion" ref-type="src-columns"/>
	<columns names="id_tipo_bonificacion" ref-type="dst-columns"/>
</constraint>

<constraint name="funcionarios_contratados_id_oficina_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="legajos.oficinas" table="salarios_contratados.funcionarios_contratos">
	<columns names="id_oficina" ref-type="src-columns"/>
	<columns names="id_oficina" ref-type="dst-columns"/>
</constraint>

<constraint name="funcionarios_contratados_id_oficina_prestafkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="legajos.oficinas" table="salarios_contratados.funcionarios_contratos">
	<columns names="id_oficina_presta" ref-type="src-columns"/>
	<columns names="id_oficina" ref-type="dst-columns"/>
</constraint>

<constraint name="funcionarios_contratos_gestion_fkey" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="public.gestiones" table="salarios_contratados.funcionarios_contratos">
	<columns names="gestion" ref-type="src-columns"/>
	<columns names="gestion" ref-type="dst-columns"/>
</constraint>

<constraint name="funcionarios_contratos_id_administracion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="seguridad.administracion" table="salarios_contratados.funcionarios_contratos">
	<columns names="id_administracion" ref-type="src-columns"/>
	<columns names="id_administracion" ref-type="dst-columns"/>
</constraint>

<constraint name="funcionarios_contratos_id_funcionario_contratado_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="legajos.funcionarios_contratados" table="salarios_contratados.funcionarios_contratos">
	<columns names="id_funcionario_contratado" ref-type="src-columns"/>
	<columns names="id_funcionario_contratado" ref-type="dst-columns"/>
</constraint>

<constraint name="funcionarios_contratos_id_funcionario_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="legajos.funcionarios" table="salarios_contratados.funcionarios_contratos">
	<columns names="id_funcionario" ref-type="src-columns"/>
	<columns names="id_funcionario" ref-type="dst-columns"/>
</constraint>

<constraint name="funcionarios_contratos_id_tipo_contrato_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="legajos.tipo_contrato" table="salarios_contratados.funcionarios_contratos">
	<columns names="id_tipo_contrato" ref-type="src-columns"/>
	<columns names="id_tipo_contrato" ref-type="dst-columns"/>
</constraint>

<constraint name="funcionarios_gratificaciones_ocasionales_gestion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="public.gestiones" table="salarios_contratados.funcionarios_gratificaciones_ocasionales">
	<columns names="gestion" ref-type="src-columns"/>
	<columns names="gestion" ref-type="dst-columns"/>
</constraint>

<constraint name="funcionarios_gratificaciones_ocasionales_id_administracion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="seguridad.administracion" table="salarios_contratados.funcionarios_gratificaciones_ocasionales">
	<columns names="id_administracion" ref-type="src-columns"/>
	<columns names="id_administracion" ref-type="dst-columns"/>
</constraint>

<constraint name="funcionarios_gratificaciones_ocasionales_id_mes_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="public.meses" table="salarios_contratados.funcionarios_gratificaciones_ocasionales">
	<columns names="id_mes" ref-type="src-columns"/>
	<columns names="id_mes" ref-type="dst-columns"/>
</constraint>

<constraint name="funcionarios_gratificaciones_ocasionales_id_oficina_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="legajos.oficinas" table="salarios_contratados.funcionarios_gratificaciones_ocasionales">
	<columns names="id_oficina" ref-type="src-columns"/>
	<columns names="id_oficina" ref-type="dst-columns"/>
</constraint>

<constraint name="funcionarios_serenos_gestion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="public.gestiones" table="salarios_contratados.funcionarios_serenos">
	<columns names="gestion" ref-type="src-columns"/>
	<columns names="gestion" ref-type="dst-columns"/>
</constraint>

<constraint name="funcionarios_serenos_id_administracion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="seguridad.administracion" table="salarios_contratados.funcionarios_serenos">
	<columns names="id_administracion" ref-type="src-columns"/>
	<columns names="id_administracion" ref-type="dst-columns"/>
</constraint>

<constraint name="funcionarios_serenos_id_funcionario_contrato_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="salarios_contratados.funcionarios_contratos" table="salarios_contratados.funcionarios_serenos">
	<columns names="id_funcionario_contrato" ref-type="src-columns"/>
	<columns names="id_funcionario_contrato" ref-type="dst-columns"/>
</constraint>

<constraint name="funcionarios_serenos_id_mes_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="public.meses" table="salarios_contratados.funcionarios_serenos">
	<columns names="id_mes" ref-type="src-columns"/>
	<columns names="id_mes" ref-type="dst-columns"/>
</constraint>

<constraint name="funcionarios_subsidios_gestion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="public.gestiones" table="salarios_contratados.funcionarios_subsidios">
	<columns names="gestion" ref-type="src-columns"/>
	<columns names="gestion" ref-type="dst-columns"/>
</constraint>

<constraint name="funcionarios_subsidios_id_administracion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="seguridad.administracion" table="salarios_contratados.funcionarios_subsidios">
	<columns names="id_administracion" ref-type="src-columns"/>
	<columns names="id_administracion" ref-type="dst-columns"/>
</constraint>

<constraint name="funcionarios_subsidios_id_funcionario_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="legajos.funcionarios" table="salarios_contratados.funcionarios_subsidios">
	<columns names="id_funcionario" ref-type="src-columns"/>
	<columns names="id_funcionario" ref-type="dst-columns"/>
</constraint>

<constraint name="funcionarios_subsidios_id_mes_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="public.meses" table="salarios_contratados.funcionarios_subsidios">
	<columns names="id_mes" ref-type="src-columns"/>
	<columns names="id_mes" ref-type="dst-columns"/>
</constraint>

<constraint name="horas_no_compensadas_id_administracion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="seguridad.administracion" table="salarios_contratados.horas_no_compensadas">
	<columns names="id_administracion" ref-type="src-columns"/>
	<columns names="id_administracion" ref-type="dst-columns"/>
</constraint>

<constraint name="horas_no_compensadas_id_funcionario_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="legajos.funcionarios" table="salarios_contratados.horas_no_compensadas">
	<columns names="id_funcionario" ref-type="src-columns"/>
	<columns names="id_funcionario" ref-type="dst-columns"/>
</constraint>

<constraint name="judiciales_id_administracion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="seguridad.administracion" table="salarios_contratados.judiciales">
	<columns names="id_administracion" ref-type="src-columns"/>
	<columns names="id_administracion" ref-type="dst-columns"/>
</constraint>

<constraint name="judiciales_id_bancos_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="salarios.bancos" table="salarios_contratados.judiciales">
	<columns names="id_bancos" ref-type="src-columns"/>
	<columns names="id_bancos" ref-type="dst-columns"/>
</constraint>

<constraint name="judiciales_id_demandante_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="salarios_contratados.demandantes" table="salarios_contratados.judiciales">
	<columns names="id_demandante" ref-type="src-columns"/>
	<columns names="id_demandante" ref-type="dst-columns"/>
</constraint>

<constraint name="judiciales_id_funcionario_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="legajos.funcionarios" table="salarios_contratados.judiciales">
	<columns names="id_funcionario" ref-type="src-columns"/>
	<columns names="id_funcionario" ref-type="dst-columns"/>
</constraint>

<constraint name="judiciales_id_juzgado_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="salarios_contratados.juzgados" table="salarios_contratados.judiciales">
	<columns names="id_juzgado" ref-type="src-columns"/>
	<columns names="id_juzgado" ref-type="dst-columns"/>
</constraint>

<constraint name="judiciales_id_tipo_descuento_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="salarios.tipos_descuentos" table="salarios_contratados.judiciales">
	<columns names="id_tipo_descuento" ref-type="src-columns"/>
	<columns names="id_tipo_descuento" ref-type="dst-columns"/>
</constraint>

<constraint name="juzgado_id_administracion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="seguridad.administracion" table="salarios_contratados.juzgados">
	<columns names="id_administracion" ref-type="src-columns"/>
	<columns names="id_administracion" ref-type="dst-columns"/>
</constraint>

<constraint name="juzgado_id_departamento_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="legajos.departamentos" table="salarios_contratados.juzgados">
	<columns names="id_departamento" ref-type="src-columns"/>
	<columns names="id_departamento" ref-type="dst-columns"/>
</constraint>

<constraint name="multas_aplicadas_gestion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="public.gestiones" table="salarios_contratados.multas_aplicadas">
	<columns names="gestion" ref-type="src-columns"/>
	<columns names="gestion" ref-type="dst-columns"/>
</constraint>

<constraint name="multas_aplicadas_id_administracion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="seguridad.administracion" table="salarios_contratados.multas_aplicadas">
	<columns names="id_administracion" ref-type="src-columns"/>
	<columns names="id_administracion" ref-type="dst-columns"/>
</constraint>

<constraint name="multas_aplicadas_id_mes_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="public.meses" table="salarios_contratados.multas_aplicadas">
	<columns names="id_mes" ref-type="src-columns"/>
	<columns names="id_mes" ref-type="dst-columns"/>
</constraint>

<constraint name="multas_aplicadas_id_multa_solicitada_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="salarios_contratados.multas_solicitadas" table="salarios_contratados.multas_aplicadas">
	<columns names="id_multa_solicitada" ref-type="src-columns"/>
	<columns names="id_multa_solicitada" ref-type="dst-columns"/>
</constraint>

<constraint name="multas_aplicadas_detalles_id_administracion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="seguridad.administracion" table="salarios_contratados.multas_aplicadas_detalles">
	<columns names="id_administracion" ref-type="src-columns"/>
	<columns names="id_administracion" ref-type="dst-columns"/>
</constraint>

<constraint name="multas_aplicadas_detalles_id_funcionario_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="legajos.funcionarios" table="salarios_contratados.multas_aplicadas_detalles">
	<columns names="id_funcionario" ref-type="src-columns"/>
	<columns names="id_funcionario" ref-type="dst-columns"/>
</constraint>

<constraint name="multas_aplicadas_detalles_id_multa_aplicada_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="salarios_contratados.multas_aplicadas" table="salarios_contratados.multas_aplicadas_detalles">
	<columns names="id_multa_aplicada" ref-type="src-columns"/>
	<columns names="id_multa_aplicada" ref-type="dst-columns"/>
</constraint>

<constraint name="multas_aplicadas_detalles_id_multa_solicitada_detalle_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="salarios_contratados.multas_solicitadas_detalles" table="salarios_contratados.multas_aplicadas_detalles">
	<columns names="id_multa_solicitada_detalle" ref-type="src-columns"/>
	<columns names="id_multa_solicitada_detalle" ref-type="dst-columns"/>
</constraint>

<constraint name="multas_solicitadas_gestion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="public.gestiones" table="salarios_contratados.multas_solicitadas">
	<columns names="gestion" ref-type="src-columns"/>
	<columns names="gestion" ref-type="dst-columns"/>
</constraint>

<constraint name="multas_solicitadas_id_administracion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="seguridad.administracion" table="salarios_contratados.multas_solicitadas">
	<columns names="id_administracion" ref-type="src-columns"/>
	<columns names="id_administracion" ref-type="dst-columns"/>
</constraint>

<constraint name="multas_solicitadas_id_mes_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="public.meses" table="salarios_contratados.multas_solicitadas">
	<columns names="id_mes" ref-type="src-columns"/>
	<columns names="id_mes" ref-type="dst-columns"/>
</constraint>

<constraint name="multas_solicitadas_id_multa_resolucion_contratado_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="control.multas_resolucion_contratados" table="salarios_contratados.multas_solicitadas">
	<columns names="id_multa_resolucion_contratado" ref-type="src-columns"/>
	<columns names="id_multa_resolucion_contratado" ref-type="dst-columns"/>
</constraint>

<constraint name="multas_solicitadas_detalles_id_administracion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="seguridad.administracion" table="salarios_contratados.multas_solicitadas_detalles">
	<columns names="id_administracion" ref-type="src-columns"/>
	<columns names="id_administracion" ref-type="dst-columns"/>
</constraint>

<constraint name="multas_solicitadas_detalles_id_funcionario_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="legajos.funcionarios" table="salarios_contratados.multas_solicitadas_detalles">
	<columns names="id_funcionario" ref-type="src-columns"/>
	<columns names="id_funcionario" ref-type="dst-columns"/>
</constraint>

<constraint name="multas_solicitadas_detalles_id_multa_solicitada_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="salarios_contratados.multas_solicitadas" table="salarios_contratados.multas_solicitadas_detalles">
	<columns names="id_multa_solicitada" ref-type="src-columns"/>
	<columns names="id_multa_solicitada" ref-type="dst-columns"/>
</constraint>

<constraint name="pedido_fondo_aguinaldo_gestion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="public.gestiones" table="salarios_contratados.pedido_fondo_aguinaldo">
	<columns names="gestion" ref-type="src-columns"/>
	<columns names="gestion" ref-type="dst-columns"/>
</constraint>

<constraint name="pedido_fondo_aguinaldo_id_planilla_aguinaldo_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="salarios_contratados.planillas_aguinaldos" table="salarios_contratados.pedido_fondo_aguinaldo">
	<columns names="id_planilla_aguinaldo" ref-type="src-columns"/>
	<columns names="id_planilla_aguinaldo" ref-type="dst-columns"/>
</constraint>

<constraint name="pedido_fondo_aguinaldo_id_tipo_aguinaldo_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="salarios_contratados.tipos_aguinaldos" table="salarios_contratados.pedido_fondo_aguinaldo">
	<columns names="id_tipo_aguinaldo" ref-type="src-columns"/>
	<columns names="id_tipo_aguinaldo" ref-type="dst-columns"/>
</constraint>

<constraint name="pedido_fondo_aguinaldo_detalle_id_pedido_fondo_aguinaldo_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="salarios_contratados.pedido_fondo_aguinaldo" table="salarios_contratados.pedido_fondo_aguinaldo_detalle">
	<columns names="id_pedido_fondo_aguinaldo" ref-type="src-columns"/>
	<columns names="id_pedido_fondo_aguinaldo" ref-type="dst-columns"/>
</constraint>

<constraint name="pedido_fondo_aguinaldo_detalle_id_planilla_aguinaldo_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="legajos.oficinas" table="salarios_contratados.pedido_fondo_aguinaldo_detalle">
	<columns names="id_oficina" ref-type="src-columns"/>
	<columns names="id_oficina" ref-type="dst-columns"/>
</constraint>

<constraint name="pedidos_fondos_gestion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="public.gestiones" table="salarios_contratados.pedidos_fondos">
	<columns names="gestion" ref-type="src-columns"/>
	<columns names="gestion" ref-type="dst-columns"/>
</constraint>

<constraint name="pedidos_fondos_id_mes_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="public.meses" table="salarios_contratados.pedidos_fondos">
	<columns names="id_mes" ref-type="src-columns"/>
	<columns names="id_mes" ref-type="dst-columns"/>
</constraint>

<constraint name="pedidos_fondos_id_tipo_planilla_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="salarios_contratados.tipos_planillas" table="salarios_contratados.pedidos_fondos">
	<columns names="id_tipo_planilla" ref-type="src-columns"/>
	<columns names="id_tipo_planilla" ref-type="dst-columns"/>
</constraint>

<constraint name="pedidos_fondos_detalles_id_estructura_presupuestaria_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="legajos.oficinas" table="salarios_contratados.pedidos_fondos_detalles">
	<columns names="id_estructura_presupuestaria" ref-type="src-columns"/>
	<columns names="id_oficina" ref-type="dst-columns"/>
</constraint>

<constraint name="pedidos_fondos_detalles_id_pedido_fondo_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="salarios_contratados.pedidos_fondos" table="salarios_contratados.pedidos_fondos_detalles">
	<columns names="id_pedido_fondo" ref-type="src-columns"/>
	<columns names="id_pedido_fondo" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_aguinaldos_id_administracion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="seguridad.administracion" table="salarios_contratados.planillas_aguinaldos">
	<columns names="id_administracion" ref-type="src-columns"/>
	<columns names="id_administracion" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_aguinaldos_detalle_id_planilla_aguinaldo_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="salarios_contratados.planillas_aguinaldos" table="salarios_contratados.planillas_aguinaldos_detalles">
	<columns names="id_planilla_aguinaldo" ref-type="src-columns"/>
	<columns names="id_planilla_aguinaldo" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_aguinaldos_detalles_id_administracion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="seguridad.administracion" table="salarios_contratados.planillas_aguinaldos_detalles">
	<columns names="id_administracion" ref-type="src-columns"/>
	<columns names="id_administracion" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_bonificaciones_gestion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="public.gestiones" table="salarios_contratados.planillas_bonificaciones">
	<columns names="gestion" ref-type="src-columns"/>
	<columns names="gestion" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_bonificaciones_id_administracion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="seguridad.administracion" table="salarios_contratados.planillas_bonificaciones">
	<columns names="id_administracion" ref-type="src-columns"/>
	<columns names="id_administracion" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_bonificaciones_id_mes_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="public.meses" table="salarios_contratados.planillas_bonificaciones">
	<columns names="id_mes" ref-type="src-columns"/>
	<columns names="id_mes" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_bonificaciones_detalles_id_administracion_ocasional_f" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="seguridad.administracion" table="salarios_contratados.planillas_bonificaciones_detalles">
	<columns names="id_administracion" ref-type="src-columns"/>
	<columns names="id_administracion" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_bonificaciones_detalles_id_funcionario_bonificacion_f" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="salarios_contratados.funcionarios_bonificaciones" table="salarios_contratados.planillas_bonificaciones_detalles">
	<columns names="id_funcionario_bonificacion" ref-type="src-columns"/>
	<columns names="id_funcionario_bonificacion" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_bonificaciones_detalles_id_oficina_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="legajos.oficinas" table="salarios_contratados.planillas_bonificaciones_detalles">
	<columns names="id_oficina" ref-type="src-columns"/>
	<columns names="id_oficina" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_bonificaciones_detalles_id_planilla_bonificacion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="salarios_contratados.planillas_bonificaciones" table="salarios_contratados.planillas_bonificaciones_detalles">
	<columns names="id_planilla_bonificacion" ref-type="src-columns"/>
	<columns names="id_planilla_bonificacion" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_descuentos_gestion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="public.gestiones" table="salarios_contratados.planillas_descuentos">
	<columns names="gestion" ref-type="src-columns"/>
	<columns names="gestion" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_descuentos_id_administracion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="seguridad.administracion" table="salarios_contratados.planillas_descuentos">
	<columns names="id_administracion" ref-type="src-columns"/>
	<columns names="id_administracion" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_descuentos_id_mes_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="public.meses" table="salarios_contratados.planillas_descuentos">
	<columns names="id_mes" ref-type="src-columns"/>
	<columns names="id_mes" ref-type="dst-columns"/>
</constraint>

<constraint name="fk_descuentos_aso_id_descuento_judicial" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="salarios_contratados.descuentos_judiciales" table="salarios_contratados.planillas_descuentos_detalles">
	<columns names="id_descuento_judicial" ref-type="src-columns"/>
	<columns names="id_descuento_judicial" ref-type="dst-columns"/>
</constraint>

<constraint name="fk_descuentos_aso_id_descuentos_aso" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="salarios_contratados.descuentos_aso" table="salarios_contratados.planillas_descuentos_detalles">
	<columns names="id_descuento_aso" ref-type="src-columns"/>
	<columns names="id_descuento_aso" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_descuentos_detalles_id_administracion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="seguridad.administracion" table="salarios_contratados.planillas_descuentos_detalles">
	<columns names="id_administracion" ref-type="src-columns"/>
	<columns names="id_administracion" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_descuentos_detalles_id_funcionario_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="legajos.funcionarios" table="salarios_contratados.planillas_descuentos_detalles">
	<columns names="id_funcionario" ref-type="src-columns"/>
	<columns names="id_funcionario" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_descuentos_detalles_id_planilla_descuento_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="salarios_contratados.planillas_descuentos" table="salarios_contratados.planillas_descuentos_detalles">
	<columns names="id_planilla_descuento" ref-type="src-columns"/>
	<columns names="id_planilla_descuento" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_gratificaciones_ocasionales_detalles_id_administracio" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="seguridad.administracion" table="salarios_contratados.planillas_gratificaciones_ocasionales_detalles">
	<columns names="id_administracion" ref-type="src-columns"/>
	<columns names="id_administracion" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_gratificaciones_ocasionales_detalles_id_funcionario_f" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="legajos.funcionarios" table="salarios_contratados.planillas_gratificaciones_ocasionales_detalles">
	<columns names="id_funcionario" ref-type="src-columns"/>
	<columns names="id_funcionario" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_gratificaciones_ocasionales_detalles_id_oficina_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="legajos.oficinas" table="salarios_contratados.planillas_gratificaciones_ocasionales_detalles">
	<columns names="id_oficina" ref-type="src-columns"/>
	<columns names="id_oficina" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_gratificaciones_ocasionales_detalles_id_planilla_grat" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="salarios_contratados.planillas_gratificaciones_ocasionales" table="salarios_contratados.planillas_gratificaciones_ocasionales_detalles">
	<columns names="id_planilla_gratificacion_ocasional" ref-type="src-columns"/>
	<columns names="id_planilla_gratificacion_ocasional" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_gratificaciones_ocasionales_gestion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="public.gestiones" table="salarios_contratados.planillas_gratificaciones_ocasionales">
	<columns names="gestion" ref-type="src-columns"/>
	<columns names="gestion" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_gratificaciones_ocasionales_id_administracion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="seguridad.administracion" table="salarios_contratados.planillas_gratificaciones_ocasionales">
	<columns names="id_administracion" ref-type="src-columns"/>
	<columns names="id_administracion" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_gratificaciones_ocasionales_id_mes_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="public.meses" table="salarios_contratados.planillas_gratificaciones_ocasionales">
	<columns names="id_mes" ref-type="src-columns"/>
	<columns names="id_mes" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_ra_gestion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="public.gestiones" table="salarios_contratados.planillas_ra">
	<columns names="gestion" ref-type="src-columns"/>
	<columns names="gestion" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_ra_id_administracion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="seguridad.administracion" table="salarios_contratados.planillas_ra">
	<columns names="id_administracion" ref-type="src-columns"/>
	<columns names="id_administracion" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_ra_id_mes_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="public.meses" table="salarios_contratados.planillas_ra">
	<columns names="id_mes" ref-type="src-columns"/>
	<columns names="id_mes" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_ra_id_parametro_calculo_re_ra_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="salarios_contratados.parametros_calculo_re_ra" table="salarios_contratados.planillas_ra">
	<columns names="id_parametro_calculo_re_ra" ref-type="src-columns"/>
	<columns names="id_parametro_calculo_re_ra" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_ra_detalles_id_administracion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="seguridad.administracion" table="salarios_contratados.planillas_ra_detalles">
	<columns names="id_administracion" ref-type="src-columns"/>
	<columns names="id_administracion" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_ra_detalles_id_aplicada_hora_detalle_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="control.aplicadas_horas_detalle" table="salarios_contratados.planillas_ra_detalles">
	<columns names="id_aplicada_hora_detalle" ref-type="src-columns"/>
	<columns names="id_aplicada_hora_detalle" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_ra_detalles_id_funcionario_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="legajos.funcionarios" table="salarios_contratados.planillas_ra_detalles">
	<columns names="id_funcionario" ref-type="src-columns"/>
	<columns names="id_funcionario" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_ra_detalles_id_planillas_ra_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="salarios_contratados.planillas_ra" table="salarios_contratados.planillas_ra_detalles">
	<columns names="id_planilla_ra" ref-type="src-columns"/>
	<columns names="id_planilla_ra" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_re_gestion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="public.gestiones" table="salarios_contratados.planillas_re">
	<columns names="gestion" ref-type="src-columns"/>
	<columns names="gestion" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_re_id_administracion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="seguridad.administracion" table="salarios_contratados.planillas_re">
	<columns names="id_administracion" ref-type="src-columns"/>
	<columns names="id_administracion" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_re_id_mes_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="public.meses" table="salarios_contratados.planillas_re">
	<columns names="id_mes" ref-type="src-columns"/>
	<columns names="id_mes" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_re_id_parametro_calculo_re_ra_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="salarios_contratados.parametros_calculo_re_ra" table="salarios_contratados.planillas_re">
	<columns names="id_parametro_calculo_re_ra" ref-type="src-columns"/>
	<columns names="id_parametro_calculo_re_ra" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_re_detalles_id_administracion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="seguridad.administracion" table="salarios_contratados.planillas_re_detalles">
	<columns names="id_administracion" ref-type="src-columns"/>
	<columns names="id_administracion" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_re_detalles_id_aplicada_hora_detalle_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="control.aplicadas_horas_detalle" table="salarios_contratados.planillas_re_detalles">
	<columns names="id_aplicada_hora_detalle" ref-type="src-columns"/>
	<columns names="id_aplicada_hora_detalle" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_re_detalles_id_funcionario_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="legajos.funcionarios" table="salarios_contratados.planillas_re_detalles">
	<columns names="id_funcionario" ref-type="src-columns"/>
	<columns names="id_funcionario" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_re_detalles_id_planillas_re_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="salarios_contratados.planillas_re" table="salarios_contratados.planillas_re_detalles">
	<columns names="id_planilla_re" ref-type="src-columns"/>
	<columns names="id_planilla_re" ref-type="dst-columns"/>
</constraint>

<constraint name="planilla_salarios_gestion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="public.gestiones" table="salarios_contratados.planillas_salarios">
	<columns names="gestion" ref-type="src-columns"/>
	<columns names="gestion" ref-type="dst-columns"/>
</constraint>

<constraint name="planilla_salarios_id_administracion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="seguridad.administracion" table="salarios_contratados.planillas_salarios">
	<columns names="id_administracion" ref-type="src-columns"/>
	<columns names="id_administracion" ref-type="dst-columns"/>
</constraint>

<constraint name="planilla_salarios_id_estado_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="salarios_contratados.planillas_salarios_estados" table="salarios_contratados.planillas_salarios">
	<columns names="id_estado" ref-type="src-columns"/>
	<columns names="id_estado" ref-type="dst-columns"/>
</constraint>

<constraint name="planilla_salarios_id_mes_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="public.meses" table="salarios_contratados.planillas_salarios">
	<columns names="id_mes" ref-type="src-columns"/>
	<columns names="id_mes" ref-type="dst-columns"/>
</constraint>

<constraint name="planilla_salarios_id_tipo_contrato_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="legajos.tipo_contrato" table="salarios_contratados.planillas_salarios">
	<columns names="id_tipo_contrato" ref-type="src-columns"/>
	<columns names="id_tipo_contrato" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_salarios_detalles_id_administracion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="seguridad.administracion" table="salarios_contratados.planillas_salarios_detalles">
	<columns names="id_administracion" ref-type="src-columns"/>
	<columns names="id_administracion" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_salarios_detalles_id_funcionario_contrato_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="salarios_contratados.funcionarios_contratos" table="salarios_contratados.planillas_salarios_detalles">
	<columns names="id_funcionario_contrato" ref-type="src-columns"/>
	<columns names="id_funcionario_contrato" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_salarios_detalles_id_funcionario_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="legajos.funcionarios" table="salarios_contratados.planillas_salarios_detalles">
	<columns names="id_funcionario" ref-type="src-columns"/>
	<columns names="id_funcionario" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_salarios_detalles_id_planilla_salario_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="salarios_contratados.planillas_salarios" table="salarios_contratados.planillas_salarios_detalles">
	<columns names="id_planilla_salario" ref-type="src-columns"/>
	<columns names="id_planilla_salario" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_salarios_estados_id_administracion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="seguridad.administracion" table="salarios_contratados.planillas_salarios_estados">
	<columns names="id_administracion" ref-type="src-columns"/>
	<columns names="id_administracion" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_serenos_gestion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="public.gestiones" table="salarios_contratados.planillas_serenos">
	<columns names="gestion" ref-type="src-columns"/>
	<columns names="gestion" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_serenos_id_administracion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="seguridad.administracion" table="salarios_contratados.planillas_serenos">
	<columns names="id_administracion" ref-type="src-columns"/>
	<columns names="id_administracion" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_serenos_id_mes_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="public.meses" table="salarios_contratados.planillas_serenos">
	<columns names="id_mes" ref-type="src-columns"/>
	<columns names="id_mes" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_serenos_detalles_id_administracion_ocasional_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="seguridad.administracion" table="salarios_contratados.planillas_serenos_detalles">
	<columns names="id_administracion" ref-type="src-columns"/>
	<columns names="id_administracion" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_serenos_detalles_id_funcionario_sereno_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="salarios_contratados.funcionarios_serenos" table="salarios_contratados.planillas_serenos_detalles">
	<columns names="id_funcionario_sereno" ref-type="src-columns"/>
	<columns names="id_funcionario_sereno" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_serenos_detalles_id_oficina_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="legajos.oficinas" table="salarios_contratados.planillas_serenos_detalles">
	<columns names="id_oficina" ref-type="src-columns"/>
	<columns names="id_oficina" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_serenos_detalles_id_planilla_sereno_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="salarios_contratados.planillas_serenos" table="salarios_contratados.planillas_serenos_detalles">
	<columns names="id_planilla_sereno" ref-type="src-columns"/>
	<columns names="id_planilla_sereno" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_subsidios_gestion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="public.gestiones" table="salarios_contratados.planillas_subsidios">
	<columns names="gestion" ref-type="src-columns"/>
	<columns names="gestion" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_subsidios_id_administracion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="seguridad.administracion" table="salarios_contratados.planillas_subsidios">
	<columns names="id_administracion" ref-type="src-columns"/>
	<columns names="id_administracion" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_subsidios_id_mes_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="public.meses" table="salarios_contratados.planillas_subsidios">
	<columns names="id_mes" ref-type="src-columns"/>
	<columns names="id_mes" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_subsidios_detalles_id_administracion_ocasional_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="seguridad.administracion" table="salarios_contratados.planillas_subsidios_detalles">
	<columns names="id_administracion" ref-type="src-columns"/>
	<columns names="id_administracion" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_subsidios_detalles_id_funcionario_subsidio_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="salarios_contratados.funcionarios_subsidios" table="salarios_contratados.planillas_subsidios_detalles">
	<columns names="id_funcionario_subsidio" ref-type="src-columns"/>
	<columns names="id_funcionario_subsidio" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_subsidios_detalles_id_oficina_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="legajos.oficinas" table="salarios_contratados.planillas_subsidios_detalles">
	<columns names="id_oficina" ref-type="src-columns"/>
	<columns names="id_oficina" ref-type="dst-columns"/>
</constraint>

<constraint name="planillas_subsidios_detalles_id_planilla_subsidio_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="salarios_contratados.planillas_subsidios" table="salarios_contratados.planillas_subsidios_detalles">
	<columns names="id_planilla_subsidio" ref-type="src-columns"/>
	<columns names="id_planilla_subsidio" ref-type="dst-columns"/>
</constraint>

<constraint name="situacion_personal_gestion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="public.gestiones" table="salarios_contratados.situacion_personal">
	<columns names="gestion" ref-type="src-columns"/>
	<columns names="gestion" ref-type="dst-columns"/>
</constraint>

<constraint name="situacion_personal_id_administracion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="seguridad.administracion" table="salarios_contratados.situacion_personal">
	<columns names="id_administracion" ref-type="src-columns"/>
	<columns names="id_administracion" ref-type="dst-columns"/>
</constraint>

<constraint name="situacion_personal_id_mes_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="public.meses" table="salarios_contratados.situacion_personal">
	<columns names="id_mes" ref-type="src-columns"/>
	<columns names="id_mes" ref-type="dst-columns"/>
</constraint>

<constraint name="situacion_personal_detalles_id_administracion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="seguridad.administracion" table="salarios_contratados.situacion_personal_detalles">
	<columns names="id_administracion" ref-type="src-columns"/>
	<columns names="id_administracion" ref-type="dst-columns"/>
</constraint>

<constraint name="situacion_personal_detalles_id_funcionario_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="legajos.funcionarios" table="salarios_contratados.situacion_personal_detalles">
	<columns names="id_funcionario" ref-type="src-columns"/>
	<columns names="id_funcionario" ref-type="dst-columns"/>
</constraint>

<constraint name="situacion_personal_detalles_id_situacion_personal_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="salarios_contratados.situacion_personal" table="salarios_contratados.situacion_personal_detalles">
	<columns names="id_situacion_personal" ref-type="src-columns"/>
	<columns names="id_situacion_personal" ref-type="dst-columns"/>
</constraint>

<constraint name="subsidios_id_administracion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="seguridad.administracion" table="salarios_contratados.subsidios">
	<columns names="id_administracion" ref-type="src-columns"/>
	<columns names="id_administracion" ref-type="dst-columns"/>
</constraint>

<constraint name="tipos_aguinaldos_id_administracion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="seguridad.administracion" table="salarios_contratados.tipos_aguinaldos">
	<columns names="id_administracion" ref-type="src-columns"/>
	<columns names="id_administracion" ref-type="dst-columns"/>
</constraint>

<constraint name="tipos_bonificaciones_id_administracion_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="RESTRICT" del-action="RESTRICT" ref-table="seguridad.administracion" table="salarios_contratados.tipos_bonificaciones">
	<columns names="id_administracion" ref-type="src-columns"/>
	<columns names="id_administracion" ref-type="dst-columns"/>
</constraint>

<relationship name="rel_aso_temporales_gestiones" type="relfk"
	 custom-color="#cc3592"
	 src-table="salarios_contratados.aso_temporales"
	 dst-table="public.gestiones"
	 src-required="false" dst-required="false"/>

<relationship name="rel_aso_temporales_administracion" type="relfk"
	 custom-color="#47be67"
	 src-table="salarios_contratados.aso_temporales"
	 dst-table="seguridad.administracion"
	 src-required="false" dst-required="false"/>

<relationship name="rel_aso_temporales_meses" type="relfk"
	 custom-color="#e0d906"
	 src-table="salarios_contratados.aso_temporales"
	 dst-table="public.meses"
	 src-required="false" dst-required="false"/>

<relationship name="rel_aso_temporales_tipos_descuentos" type="relfk"
	 custom-color="#588faf"
	 src-table="salarios_contratados.aso_temporales"
	 dst-table="salarios.tipos_descuentos"
	 src-required="false" dst-required="false"/>

<relationship name="rel_autorizaciones_administracion" type="relfk"
	 custom-color="#20872a"
	 src-table="salarios_contratados.autorizaciones"
	 dst-table="seguridad.administracion"
	 src-required="false" dst-required="false"/>

<relationship name="rel_autorizaciones_funcionarios" type="relfk"
	 custom-color="#eaf3ec"
	 src-table="salarios_contratados.autorizaciones"
	 dst-table="legajos.funcionarios"
	 src-required="false" dst-required="false"/>

<relationship name="rel_autorizaciones_tipos_descuentos" type="relfk"
	 custom-color="#7447af"
	 src-table="salarios_contratados.autorizaciones"
	 dst-table="salarios.tipos_descuentos"
	 src-required="false" dst-required="false"/>

<relationship name="rel_funcionarios_contratados_aumento_gestiones" type="relfk"
	 custom-color="#6682e4"
	 src-table="salarios_contratados.funcionarios_contratados_aumento"
	 dst-table="public.gestiones"
	 src-required="false" dst-required="false"/>

<relationship name="rel_funcionarios_contratados_aumento_administracion" type="relfk"
	 custom-color="#d228c0"
	 src-table="salarios_contratados.funcionarios_contratados_aumento"
	 dst-table="seguridad.administracion"
	 src-required="false" dst-required="false"/>

<relationship name="rel_funcionarios_contratados_aumento_funcionarios" type="relfk"
	 custom-color="#6514ba"
	 src-table="salarios_contratados.funcionarios_contratados_aumento"
	 dst-table="legajos.funcionarios"
	 src-required="false" dst-required="false"/>

<relationship name="rel_funcionarios_contratados_aumento_meses" type="relfk"
	 custom-color="#348af9"
	 src-table="salarios_contratados.funcionarios_contratados_aumento"
	 dst-table="public.meses"
	 src-required="false" dst-required="false"/>

<relationship name="rel_demandantes_administracion" type="relfk"
	 custom-color="#a08830"
	 src-table="salarios_contratados.demandantes"
	 dst-table="seguridad.administracion"
	 src-required="false" dst-required="false"/>

<relationship name="rel_descuentos_aso_gestiones" type="relfk"
	 custom-color="#bfab59"
	 src-table="salarios_contratados.descuentos_aso"
	 dst-table="public.gestiones"
	 src-required="false" dst-required="false"/>

<relationship name="rel_descuentos_aso_administracion" type="relfk"
	 custom-color="#9d5e3d"
	 src-table="salarios_contratados.descuentos_aso"
	 dst-table="seguridad.administracion"
	 src-required="false" dst-required="false"/>

<relationship name="rel_descuentos_aso_funcionarios" type="relfk"
	 custom-color="#ec026d"
	 src-table="salarios_contratados.descuentos_aso"
	 dst-table="legajos.funcionarios"
	 src-required="false" dst-required="false"/>

<relationship name="rel_descuentos_aso_meses" type="relfk"
	 custom-color="#4ac1c2"
	 src-table="salarios_contratados.descuentos_aso"
	 dst-table="public.meses"
	 src-required="false" dst-required="false"/>

<relationship name="rel_descuentos_aso_tipos_descuentos" type="relfk"
	 custom-color="#2cf165"
	 src-table="salarios_contratados.descuentos_aso"
	 dst-table="salarios.tipos_descuentos"
	 src-required="false" dst-required="false"/>

<relationship name="rel_descuentos_judiciales_gestiones" type="relfk"
	 custom-color="#f5341c"
	 src-table="salarios_contratados.descuentos_judiciales"
	 dst-table="public.gestiones"
	 src-required="false" dst-required="false"/>

<relationship name="rel_descuentos_judiciales_administracion" type="relfk"
	 custom-color="#943ce4"
	 src-table="salarios_contratados.descuentos_judiciales"
	 dst-table="seguridad.administracion"
	 src-required="false" dst-required="false"/>

<relationship name="rel_descuentos_judiciales_funcionarios" type="relfk"
	 custom-color="#549050"
	 src-table="salarios_contratados.descuentos_judiciales"
	 dst-table="legajos.funcionarios"
	 src-required="false" dst-required="false"/>

<relationship name="rel_descuentos_judiciales_meses" type="relfk"
	 custom-color="#515719"
	 src-table="salarios_contratados.descuentos_judiciales"
	 dst-table="public.meses"
	 src-required="false" dst-required="false"/>

<relationship name="rel_descuentos_judiciales_tipos_descuentos" type="relfk"
	 custom-color="#6caaf9"
	 src-table="salarios_contratados.descuentos_judiciales"
	 dst-table="salarios.tipos_descuentos"
	 src-required="false" dst-required="false"/>

<relationship name="rel_funcionarios_aguinaldos_administracion" type="relfk"
	 custom-color="#65c668"
	 src-table="salarios_contratados.funcionarios_aguinaldos"
	 dst-table="seguridad.administracion"
	 src-required="false" dst-required="false"/>

<relationship name="rel_funcionarios_aguinaldos_gestiones" type="relfk"
	 custom-color="#110674"
	 src-table="salarios_contratados.funcionarios_aguinaldos"
	 dst-table="public.gestiones"
	 src-required="false" dst-required="false"/>

<relationship name="rel_funcionarios_aguinaldos_funcionarios" type="relfk"
	 custom-color="#633280"
	 src-table="salarios_contratados.funcionarios_aguinaldos"
	 dst-table="legajos.funcionarios"
	 src-required="false" dst-required="false"/>

<relationship name="rel_funcionarios_aguinaldos_meses" type="relfk"
	 custom-color="#3dfacb"
	 src-table="salarios_contratados.funcionarios_aguinaldos"
	 dst-table="public.meses"
	 src-required="false" dst-required="false"/>

<relationship name="rel_funcionarios_aguinaldos_oficinas" type="relfk"
	 custom-color="#8e6610"
	 src-table="salarios_contratados.funcionarios_aguinaldos"
	 dst-table="legajos.oficinas"
	 src-required="false" dst-required="false"/>

<relationship name="rel_funcionarios_bonificaciones_gestiones" type="relfk"
	 custom-color="#946b21"
	 src-table="salarios_contratados.funcionarios_bonificaciones"
	 dst-table="public.gestiones"
	 src-required="false" dst-required="false"/>

<relationship name="rel_funcionarios_bonificaciones_administracion" type="relfk"
	 custom-color="#99afaf"
	 src-table="salarios_contratados.funcionarios_bonificaciones"
	 dst-table="seguridad.administracion"
	 src-required="false" dst-required="false"/>

<relationship name="rel_funcionarios_bonificaciones_funcionarios_contratos" type="relfk"
	 custom-color="#d3ba4f"
	 src-table="salarios_contratados.funcionarios_bonificaciones"
	 dst-table="salarios_contratados.funcionarios_contratos"
	 src-required="false" dst-required="false"/>

<relationship name="rel_funcionarios_bonificaciones_meses" type="relfk"
	 custom-color="#49438f"
	 src-table="salarios_contratados.funcionarios_bonificaciones"
	 dst-table="public.meses"
	 src-required="false" dst-required="false"/>

<relationship name="rel_funcionarios_bonificaciones_oficinas" type="relfk"
	 custom-color="#ac14b2"
	 src-table="salarios_contratados.funcionarios_bonificaciones"
	 dst-table="legajos.oficinas"
	 src-required="false" dst-required="false"/>

<relationship name="rel_funcionarios_bonificaciones_tipos_bonificaciones" type="relfk"
	 custom-color="#34f283"
	 src-table="salarios_contratados.funcionarios_bonificaciones"
	 dst-table="salarios_contratados.tipos_bonificaciones"
	 src-required="false" dst-required="false"/>

<relationship name="rel_funcionarios_contratos_oficinas" type="relfk"
	 custom-color="#f218c5"
	 src-table="salarios_contratados.funcionarios_contratos"
	 dst-table="legajos.oficinas"
	 src-required="false" dst-required="false"/>

<relationship name="rel_funcionarios_contratos_gestiones" type="relfk"
	 custom-color="#c47199"
	 src-table="salarios_contratados.funcionarios_contratos"
	 dst-table="public.gestiones"
	 src-required="false" dst-required="false"/>

<relationship name="rel_funcionarios_contratos_administracion" type="relfk"
	 custom-color="#d805dc"
	 src-table="salarios_contratados.funcionarios_contratos"
	 dst-table="seguridad.administracion"
	 src-required="false" dst-required="false"/>

<relationship name="rel_funcionarios_contratos_funcionarios_contratados" type="relfk"
	 custom-color="#08c492"
	 src-table="salarios_contratados.funcionarios_contratos"
	 dst-table="legajos.funcionarios_contratados"
	 src-required="false" dst-required="false"/>

<relationship name="rel_funcionarios_contratos_funcionarios" type="relfk"
	 custom-color="#6df93e"
	 src-table="salarios_contratados.funcionarios_contratos"
	 dst-table="legajos.funcionarios"
	 src-required="false" dst-required="false"/>

<relationship name="rel_funcionarios_contratos_tipo_contrato" type="relfk"
	 custom-color="#38988d"
	 src-table="salarios_contratados.funcionarios_contratos"
	 dst-table="legajos.tipo_contrato"
	 src-required="false" dst-required="false"/>

<relationship name="rel_funcionarios_gratificaciones_ocasionales_gestiones" type="relfk"
	 custom-color="#c133f2"
	 src-table="salarios_contratados.funcionarios_gratificaciones_ocasionales"
	 dst-table="public.gestiones"
	 src-required="false" dst-required="false"/>

<relationship name="rel_funcionarios_gratificaciones_ocasionales_administracion" type="relfk"
	 custom-color="#f64171"
	 src-table="salarios_contratados.funcionarios_gratificaciones_ocasionales"
	 dst-table="seguridad.administracion"
	 src-required="false" dst-required="false"/>

<relationship name="rel_funcionarios_gratificaciones_ocasionales_meses" type="relfk"
	 custom-color="#bc1c27"
	 src-table="salarios_contratados.funcionarios_gratificaciones_ocasionales"
	 dst-table="public.meses"
	 src-required="false" dst-required="false"/>

<relationship name="rel_funcionarios_gratificaciones_ocasionales_oficinas" type="relfk"
	 custom-color="#7c9291"
	 src-table="salarios_contratados.funcionarios_gratificaciones_ocasionales"
	 dst-table="legajos.oficinas"
	 src-required="false" dst-required="false"/>

<relationship name="rel_funcionarios_serenos_gestiones" type="relfk"
	 custom-color="#1e4613"
	 src-table="salarios_contratados.funcionarios_serenos"
	 dst-table="public.gestiones"
	 src-required="false" dst-required="false"/>

<relationship name="rel_funcionarios_serenos_administracion" type="relfk"
	 custom-color="#783cff"
	 src-table="salarios_contratados.funcionarios_serenos"
	 dst-table="seguridad.administracion"
	 src-required="false" dst-required="false"/>

<relationship name="rel_funcionarios_serenos_funcionarios_contratos" type="relfk"
	 custom-color="#95d676"
	 src-table="salarios_contratados.funcionarios_serenos"
	 dst-table="salarios_contratados.funcionarios_contratos"
	 src-required="false" dst-required="false"/>

<relationship name="rel_funcionarios_serenos_meses" type="relfk"
	 custom-color="#3e2a79"
	 src-table="salarios_contratados.funcionarios_serenos"
	 dst-table="public.meses"
	 src-required="false" dst-required="false"/>

<relationship name="rel_funcionarios_subsidios_gestiones" type="relfk"
	 custom-color="#e4848a"
	 src-table="salarios_contratados.funcionarios_subsidios"
	 dst-table="public.gestiones"
	 src-required="false" dst-required="false"/>

<relationship name="rel_funcionarios_subsidios_administracion" type="relfk"
	 custom-color="#cda2dc"
	 src-table="salarios_contratados.funcionarios_subsidios"
	 dst-table="seguridad.administracion"
	 src-required="false" dst-required="false"/>

<relationship name="rel_funcionarios_subsidios_funcionarios" type="relfk"
	 custom-color="#535fd1"
	 src-table="salarios_contratados.funcionarios_subsidios"
	 dst-table="legajos.funcionarios"
	 src-required="false" dst-required="false"/>

<relationship name="rel_funcionarios_subsidios_meses" type="relfk"
	 custom-color="#deef3b"
	 src-table="salarios_contratados.funcionarios_subsidios"
	 dst-table="public.meses"
	 src-required="false" dst-required="false"/>

<relationship name="rel_horas_no_compensadas_administracion" type="relfk"
	 custom-color="#2ec0a0"
	 src-table="salarios_contratados.horas_no_compensadas"
	 dst-table="seguridad.administracion"
	 src-required="false" dst-required="false"/>

<relationship name="rel_horas_no_compensadas_funcionarios" type="relfk"
	 custom-color="#319933"
	 src-table="salarios_contratados.horas_no_compensadas"
	 dst-table="legajos.funcionarios"
	 src-required="false" dst-required="false"/>

<relationship name="rel_judiciales_administracion" type="relfk"
	 custom-color="#5f63b8"
	 src-table="salarios_contratados.judiciales"
	 dst-table="seguridad.administracion"
	 src-required="false" dst-required="false"/>

<relationship name="rel_judiciales_bancos" type="relfk"
	 custom-color="#945a0a"
	 src-table="salarios_contratados.judiciales"
	 dst-table="salarios.bancos"
	 src-required="false" dst-required="false"/>

<relationship name="rel_judiciales_demandantes" type="relfk"
	 custom-color="#048317"
	 src-table="salarios_contratados.judiciales"
	 dst-table="salarios_contratados.demandantes"
	 src-required="false" dst-required="false"/>

<relationship name="rel_judiciales_funcionarios" type="relfk"
	 custom-color="#7516f4"
	 src-table="salarios_contratados.judiciales"
	 dst-table="legajos.funcionarios"
	 src-required="false" dst-required="false"/>

<relationship name="rel_judiciales_juzgados" type="relfk"
	 custom-color="#96ab17"
	 src-table="salarios_contratados.judiciales"
	 dst-table="salarios_contratados.juzgados"
	 src-required="false" dst-required="false"/>

<relationship name="rel_judiciales_tipos_descuentos" type="relfk"
	 custom-color="#72959e"
	 src-table="salarios_contratados.judiciales"
	 dst-table="salarios.tipos_descuentos"
	 src-required="false" dst-required="false"/>

<relationship name="rel_juzgados_administracion" type="relfk"
	 custom-color="#0a5636"
	 src-table="salarios_contratados.juzgados"
	 dst-table="seguridad.administracion"
	 src-required="false" dst-required="false"/>

<relationship name="rel_juzgados_departamentos" type="relfk"
	 custom-color="#477aa6"
	 src-table="salarios_contratados.juzgados"
	 dst-table="legajos.departamentos"
	 src-required="false" dst-required="false"/>

<relationship name="rel_multas_aplicadas_gestiones" type="relfk"
	 custom-color="#a6d092"
	 src-table="salarios_contratados.multas_aplicadas"
	 dst-table="public.gestiones"
	 src-required="false" dst-required="false"/>

<relationship name="rel_multas_aplicadas_administracion" type="relfk"
	 custom-color="#f0a0b3"
	 src-table="salarios_contratados.multas_aplicadas"
	 dst-table="seguridad.administracion"
	 src-required="false" dst-required="false"/>

<relationship name="rel_multas_aplicadas_meses" type="relfk"
	 custom-color="#877980"
	 src-table="salarios_contratados.multas_aplicadas"
	 dst-table="public.meses"
	 src-required="false" dst-required="false"/>

<relationship name="rel_multas_aplicadas_multas_solicitadas" type="relfk"
	 custom-color="#c3b36e"
	 src-table="salarios_contratados.multas_aplicadas"
	 dst-table="salarios_contratados.multas_solicitadas"
	 src-required="false" dst-required="false"/>

<relationship name="rel_multas_aplicadas_detalles_administracion" type="relfk"
	 custom-color="#b18858"
	 src-table="salarios_contratados.multas_aplicadas_detalles"
	 dst-table="seguridad.administracion"
	 src-required="false" dst-required="false"/>

<relationship name="rel_multas_aplicadas_detalles_funcionarios" type="relfk"
	 custom-color="#1941e7"
	 src-table="salarios_contratados.multas_aplicadas_detalles"
	 dst-table="legajos.funcionarios"
	 src-required="false" dst-required="false"/>

<relationship name="rel_multas_aplicadas_detalles_multas_aplicadas" type="relfk"
	 custom-color="#691506"
	 src-table="salarios_contratados.multas_aplicadas_detalles"
	 dst-table="salarios_contratados.multas_aplicadas"
	 src-required="false" dst-required="false"/>

<relationship name="rel_multas_aplicadas_detalles_multas_solicitadas_detalles" type="relfk"
	 custom-color="#9adabb"
	 src-table="salarios_contratados.multas_aplicadas_detalles"
	 dst-table="salarios_contratados.multas_solicitadas_detalles"
	 src-required="false" dst-required="false"/>

<relationship name="rel_multas_solicitadas_gestiones" type="relfk"
	 custom-color="#c4b9e3"
	 src-table="salarios_contratados.multas_solicitadas"
	 dst-table="public.gestiones"
	 src-required="false" dst-required="false"/>

<relationship name="rel_multas_solicitadas_administracion" type="relfk"
	 custom-color="#aca7c9"
	 src-table="salarios_contratados.multas_solicitadas"
	 dst-table="seguridad.administracion"
	 src-required="false" dst-required="false"/>

<relationship name="rel_multas_solicitadas_meses" type="relfk"
	 custom-color="#f07ca7"
	 src-table="salarios_contratados.multas_solicitadas"
	 dst-table="public.meses"
	 src-required="false" dst-required="false"/>

<relationship name="rel_multas_solicitadas_multas_resolucion_contratados" type="relfk"
	 custom-color="#add97c"
	 src-table="salarios_contratados.multas_solicitadas"
	 dst-table="control.multas_resolucion_contratados"
	 src-required="false" dst-required="false"/>

<relationship name="rel_multas_solicitadas_detalles_administracion" type="relfk"
	 custom-color="#2f2972"
	 src-table="salarios_contratados.multas_solicitadas_detalles"
	 dst-table="seguridad.administracion"
	 src-required="false" dst-required="false"/>

<relationship name="rel_multas_solicitadas_detalles_funcionarios" type="relfk"
	 custom-color="#228610"
	 src-table="salarios_contratados.multas_solicitadas_detalles"
	 dst-table="legajos.funcionarios"
	 src-required="false" dst-required="false"/>

<relationship name="rel_multas_solicitadas_detalles_multas_solicitadas" type="relfk"
	 custom-color="#6029f3"
	 src-table="salarios_contratados.multas_solicitadas_detalles"
	 dst-table="salarios_contratados.multas_solicitadas"
	 src-required="false" dst-required="false"/>

<relationship name="rel_pedido_fondo_aguinaldo_gestiones" type="relfk"
	 custom-color="#b92a25"
	 src-table="salarios_contratados.pedido_fondo_aguinaldo"
	 dst-table="public.gestiones"
	 src-required="false" dst-required="false"/>

<relationship name="rel_pedido_fondo_aguinaldo_planillas_aguinaldos" type="relfk"
	 custom-color="#9aba29"
	 src-table="salarios_contratados.pedido_fondo_aguinaldo"
	 dst-table="salarios_contratados.planillas_aguinaldos"
	 src-required="false" dst-required="false"/>

<relationship name="rel_pedido_fondo_aguinaldo_tipos_aguinaldos" type="relfk"
	 custom-color="#9ec0cc"
	 src-table="salarios_contratados.pedido_fondo_aguinaldo"
	 dst-table="salarios_contratados.tipos_aguinaldos"
	 src-required="false" dst-required="false"/>

<relationship name="rel_pedido_fondo_aguinaldo_detalle_pedido_fondo_aguinaldo" type="relfk"
	 custom-color="#d69d31"
	 src-table="salarios_contratados.pedido_fondo_aguinaldo_detalle"
	 dst-table="salarios_contratados.pedido_fondo_aguinaldo"
	 src-required="false" dst-required="false"/>

<relationship name="rel_pedido_fondo_aguinaldo_detalle_oficinas" type="relfk"
	 custom-color="#be3304"
	 src-table="salarios_contratados.pedido_fondo_aguinaldo_detalle"
	 dst-table="legajos.oficinas"
	 src-required="false" dst-required="false"/>

<relationship name="rel_pedidos_fondos_gestiones" type="relfk"
	 custom-color="#4be9a4"
	 src-table="salarios_contratados.pedidos_fondos"
	 dst-table="public.gestiones"
	 src-required="false" dst-required="false"/>

<relationship name="rel_pedidos_fondos_meses" type="relfk"
	 custom-color="#4cb3b4"
	 src-table="salarios_contratados.pedidos_fondos"
	 dst-table="public.meses"
	 src-required="false" dst-required="false"/>

<relationship name="rel_pedidos_fondos_tipos_planillas" type="relfk"
	 custom-color="#f9bd92"
	 src-table="salarios_contratados.pedidos_fondos"
	 dst-table="salarios_contratados.tipos_planillas"
	 src-required="false" dst-required="false"/>

<relationship name="rel_pedidos_fondos_detalles_oficinas" type="relfk"
	 custom-color="#af7a43"
	 src-table="salarios_contratados.pedidos_fondos_detalles"
	 dst-table="legajos.oficinas"
	 src-required="false" dst-required="false"/>

<relationship name="rel_pedidos_fondos_detalles_pedidos_fondos" type="relfk"
	 custom-color="#e52071"
	 src-table="salarios_contratados.pedidos_fondos_detalles"
	 dst-table="salarios_contratados.pedidos_fondos"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_aguinaldos_administracion" type="relfk"
	 custom-color="#54bfb4"
	 src-table="salarios_contratados.planillas_aguinaldos"
	 dst-table="seguridad.administracion"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_aguinaldos_detalles_planillas_aguinaldos" type="relfk"
	 custom-color="#fcd674"
	 src-table="salarios_contratados.planillas_aguinaldos_detalles"
	 dst-table="salarios_contratados.planillas_aguinaldos"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_aguinaldos_detalles_administracion" type="relfk"
	 custom-color="#5781e3"
	 src-table="salarios_contratados.planillas_aguinaldos_detalles"
	 dst-table="seguridad.administracion"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_bonificaciones_gestiones" type="relfk"
	 custom-color="#28bfa4"
	 src-table="salarios_contratados.planillas_bonificaciones"
	 dst-table="public.gestiones"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_bonificaciones_administracion" type="relfk"
	 custom-color="#563f1f"
	 src-table="salarios_contratados.planillas_bonificaciones"
	 dst-table="seguridad.administracion"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_bonificaciones_meses" type="relfk"
	 custom-color="#5f522f"
	 src-table="salarios_contratados.planillas_bonificaciones"
	 dst-table="public.meses"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_bonificaciones_detalles_administracion" type="relfk"
	 custom-color="#6efab9"
	 src-table="salarios_contratados.planillas_bonificaciones_detalles"
	 dst-table="seguridad.administracion"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_bonificaciones_detalles_funcionarios_bonificacion" type="relfk"
	 custom-color="#10157c"
	 src-table="salarios_contratados.planillas_bonificaciones_detalles"
	 dst-table="salarios_contratados.funcionarios_bonificaciones"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_bonificaciones_detalles_oficinas" type="relfk"
	 custom-color="#6110b9"
	 src-table="salarios_contratados.planillas_bonificaciones_detalles"
	 dst-table="legajos.oficinas"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_bonificaciones_detalles_planillas_bonificaciones" type="relfk"
	 custom-color="#2b4732"
	 src-table="salarios_contratados.planillas_bonificaciones_detalles"
	 dst-table="salarios_contratados.planillas_bonificaciones"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_descuentos_gestiones" type="relfk"
	 custom-color="#294108"
	 src-table="salarios_contratados.planillas_descuentos"
	 dst-table="public.gestiones"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_descuentos_administracion" type="relfk"
	 custom-color="#a90a31"
	 src-table="salarios_contratados.planillas_descuentos"
	 dst-table="seguridad.administracion"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_descuentos_meses" type="relfk"
	 custom-color="#f55d8d"
	 src-table="salarios_contratados.planillas_descuentos"
	 dst-table="public.meses"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_descuentos_detalles_descuentos_judiciales" type="relfk"
	 custom-color="#3c5e4c"
	 src-table="salarios_contratados.planillas_descuentos_detalles"
	 dst-table="salarios_contratados.descuentos_judiciales"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_descuentos_detalles_descuentos_aso" type="relfk"
	 custom-color="#5eb239"
	 src-table="salarios_contratados.planillas_descuentos_detalles"
	 dst-table="salarios_contratados.descuentos_aso"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_descuentos_detalles_administracion" type="relfk"
	 custom-color="#70c4a6"
	 src-table="salarios_contratados.planillas_descuentos_detalles"
	 dst-table="seguridad.administracion"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_descuentos_detalles_funcionarios" type="relfk"
	 custom-color="#d8f8ef"
	 src-table="salarios_contratados.planillas_descuentos_detalles"
	 dst-table="legajos.funcionarios"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_descuentos_detalles_planillas_descuentos" type="relfk"
	 custom-color="#bb185a"
	 src-table="salarios_contratados.planillas_descuentos_detalles"
	 dst-table="salarios_contratados.planillas_descuentos"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_gratificaciones_ocasionales_detalles_administraci" type="relfk"
	 custom-color="#011826"
	 src-table="salarios_contratados.planillas_gratificaciones_ocasionales_detalles"
	 dst-table="seguridad.administracion"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_gratificaciones_ocasionales_detalles_funcionarios" type="relfk"
	 custom-color="#312ff9"
	 src-table="salarios_contratados.planillas_gratificaciones_ocasionales_detalles"
	 dst-table="legajos.funcionarios"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_gratificaciones_ocasionales_detalles_oficinas" type="relfk"
	 custom-color="#3af086"
	 src-table="salarios_contratados.planillas_gratificaciones_ocasionales_detalles"
	 dst-table="legajos.oficinas"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_gratificaciones_ocasionales_detalles_planillas_gr" type="relfk"
	 custom-color="#d1349d"
	 src-table="salarios_contratados.planillas_gratificaciones_ocasionales_detalles"
	 dst-table="salarios_contratados.planillas_gratificaciones_ocasionales"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_gratificaciones_ocasionales_gestiones" type="relfk"
	 custom-color="#25624c"
	 src-table="salarios_contratados.planillas_gratificaciones_ocasionales"
	 dst-table="public.gestiones"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_gratificaciones_ocasionales_administracion" type="relfk"
	 custom-color="#1ed99c"
	 src-table="salarios_contratados.planillas_gratificaciones_ocasionales"
	 dst-table="seguridad.administracion"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_gratificaciones_ocasionales_meses" type="relfk"
	 custom-color="#aa76e3"
	 src-table="salarios_contratados.planillas_gratificaciones_ocasionales"
	 dst-table="public.meses"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_ra_gestiones" type="relfk"
	 custom-color="#2cc795"
	 src-table="salarios_contratados.planillas_ra"
	 dst-table="public.gestiones"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_ra_administracion" type="relfk"
	 custom-color="#38acf0"
	 src-table="salarios_contratados.planillas_ra"
	 dst-table="seguridad.administracion"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_ra_meses" type="relfk"
	 custom-color="#0556ae"
	 src-table="salarios_contratados.planillas_ra"
	 dst-table="public.meses"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_ra_parametros_calculo_re_ra" type="relfk"
	 custom-color="#25d7a8"
	 src-table="salarios_contratados.planillas_ra"
	 dst-table="salarios_contratados.parametros_calculo_re_ra"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_ra_detalles_administracion" type="relfk"
	 custom-color="#3bd38e"
	 src-table="salarios_contratados.planillas_ra_detalles"
	 dst-table="seguridad.administracion"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_ra_detalles_aplicadas_horas_detalle" type="relfk"
	 custom-color="#8d4a22"
	 src-table="salarios_contratados.planillas_ra_detalles"
	 dst-table="control.aplicadas_horas_detalle"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_ra_detalles_funcionarios" type="relfk"
	 custom-color="#4dfad0"
	 src-table="salarios_contratados.planillas_ra_detalles"
	 dst-table="legajos.funcionarios"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_ra_detalles_planillas_ra" type="relfk"
	 custom-color="#0dacaa"
	 src-table="salarios_contratados.planillas_ra_detalles"
	 dst-table="salarios_contratados.planillas_ra"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_re_gestiones" type="relfk"
	 custom-color="#965287"
	 src-table="salarios_contratados.planillas_re"
	 dst-table="public.gestiones"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_re_administracion" type="relfk"
	 custom-color="#5df14f"
	 src-table="salarios_contratados.planillas_re"
	 dst-table="seguridad.administracion"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_re_meses" type="relfk"
	 custom-color="#672d2b"
	 src-table="salarios_contratados.planillas_re"
	 dst-table="public.meses"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_re_parametros_calculo_re_ra" type="relfk"
	 custom-color="#91210f"
	 src-table="salarios_contratados.planillas_re"
	 dst-table="salarios_contratados.parametros_calculo_re_ra"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_re_detalles_administracion" type="relfk"
	 custom-color="#e15a7d"
	 src-table="salarios_contratados.planillas_re_detalles"
	 dst-table="seguridad.administracion"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_re_detalles_aplicadas_horas_detalle" type="relfk"
	 custom-color="#616c60"
	 src-table="salarios_contratados.planillas_re_detalles"
	 dst-table="control.aplicadas_horas_detalle"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_re_detalles_funcionarios" type="relfk"
	 custom-color="#f885af"
	 src-table="salarios_contratados.planillas_re_detalles"
	 dst-table="legajos.funcionarios"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_re_detalles_planillas_re" type="relfk"
	 custom-color="#a6fc8d"
	 src-table="salarios_contratados.planillas_re_detalles"
	 dst-table="salarios_contratados.planillas_re"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_salarios_gestiones" type="relfk"
	 custom-color="#2e8f50"
	 src-table="salarios_contratados.planillas_salarios"
	 dst-table="public.gestiones"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_salarios_administracion" type="relfk"
	 custom-color="#bd344f"
	 src-table="salarios_contratados.planillas_salarios"
	 dst-table="seguridad.administracion"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_salarios_planillas_salarios_estados" type="relfk"
	 custom-color="#ac780a"
	 src-table="salarios_contratados.planillas_salarios"
	 dst-table="salarios_contratados.planillas_salarios_estados"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_salarios_meses" type="relfk"
	 custom-color="#ceb525"
	 src-table="salarios_contratados.planillas_salarios"
	 dst-table="public.meses"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_salarios_tipo_contrato" type="relfk"
	 custom-color="#980415"
	 src-table="salarios_contratados.planillas_salarios"
	 dst-table="legajos.tipo_contrato"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_salarios_detalles_administracion" type="relfk"
	 custom-color="#69fb03"
	 src-table="salarios_contratados.planillas_salarios_detalles"
	 dst-table="seguridad.administracion"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_salarios_detalles_funcionarios_contratos" type="relfk"
	 custom-color="#1fb2c9"
	 src-table="salarios_contratados.planillas_salarios_detalles"
	 dst-table="salarios_contratados.funcionarios_contratos"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_salarios_detalles_funcionarios" type="relfk"
	 custom-color="#c34796"
	 src-table="salarios_contratados.planillas_salarios_detalles"
	 dst-table="legajos.funcionarios"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_salarios_detalles_planillas_salarios" type="relfk"
	 custom-color="#bd4987"
	 src-table="salarios_contratados.planillas_salarios_detalles"
	 dst-table="salarios_contratados.planillas_salarios"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_salarios_estados_administracion" type="relfk"
	 custom-color="#aac3e8"
	 src-table="salarios_contratados.planillas_salarios_estados"
	 dst-table="seguridad.administracion"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_serenos_gestiones" type="relfk"
	 custom-color="#4d5c32"
	 src-table="salarios_contratados.planillas_serenos"
	 dst-table="public.gestiones"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_serenos_administracion" type="relfk"
	 custom-color="#dbf337"
	 src-table="salarios_contratados.planillas_serenos"
	 dst-table="seguridad.administracion"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_serenos_meses" type="relfk"
	 custom-color="#70f812"
	 src-table="salarios_contratados.planillas_serenos"
	 dst-table="public.meses"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_serenos_detalles_administracion" type="relfk"
	 custom-color="#5d4397"
	 src-table="salarios_contratados.planillas_serenos_detalles"
	 dst-table="seguridad.administracion"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_serenos_detalles_funcionarios_serenos" type="relfk"
	 custom-color="#fe8397"
	 src-table="salarios_contratados.planillas_serenos_detalles"
	 dst-table="salarios_contratados.funcionarios_serenos"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_serenos_detalles_oficinas" type="relfk"
	 custom-color="#9ed9ce"
	 src-table="salarios_contratados.planillas_serenos_detalles"
	 dst-table="legajos.oficinas"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_serenos_detalles_planillas_serenos" type="relfk"
	 custom-color="#5487c0"
	 src-table="salarios_contratados.planillas_serenos_detalles"
	 dst-table="salarios_contratados.planillas_serenos"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_subsidios_gestiones" type="relfk"
	 custom-color="#c7cf2f"
	 src-table="salarios_contratados.planillas_subsidios"
	 dst-table="public.gestiones"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_subsidios_administracion" type="relfk"
	 custom-color="#9d2fa8"
	 src-table="salarios_contratados.planillas_subsidios"
	 dst-table="seguridad.administracion"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_subsidios_meses" type="relfk"
	 custom-color="#5ce623"
	 src-table="salarios_contratados.planillas_subsidios"
	 dst-table="public.meses"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_subsidios_detalles_administracion" type="relfk"
	 custom-color="#875239"
	 src-table="salarios_contratados.planillas_subsidios_detalles"
	 dst-table="seguridad.administracion"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_subsidios_detalles_funcionarios_subsidios" type="relfk"
	 custom-color="#eb65dc"
	 src-table="salarios_contratados.planillas_subsidios_detalles"
	 dst-table="salarios_contratados.funcionarios_subsidios"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_subsidios_detalles_oficinas" type="relfk"
	 custom-color="#758cf2"
	 src-table="salarios_contratados.planillas_subsidios_detalles"
	 dst-table="legajos.oficinas"
	 src-required="false" dst-required="false"/>

<relationship name="rel_planillas_subsidios_detalles_planillas_subsidios" type="relfk"
	 custom-color="#91e349"
	 src-table="salarios_contratados.planillas_subsidios_detalles"
	 dst-table="salarios_contratados.planillas_subsidios"
	 src-required="false" dst-required="false"/>

<relationship name="rel_situacion_personal_gestiones" type="relfk"
	 custom-color="#440083"
	 src-table="salarios_contratados.situacion_personal"
	 dst-table="public.gestiones"
	 src-required="false" dst-required="false"/>

<relationship name="rel_situacion_personal_administracion" type="relfk"
	 custom-color="#df7b49"
	 src-table="salarios_contratados.situacion_personal"
	 dst-table="seguridad.administracion"
	 src-required="false" dst-required="false"/>

<relationship name="rel_situacion_personal_meses" type="relfk"
	 custom-color="#9f5ecc"
	 src-table="salarios_contratados.situacion_personal"
	 dst-table="public.meses"
	 src-required="false" dst-required="false"/>

<relationship name="rel_situacion_personal_detalles_administracion" type="relfk"
	 custom-color="#cc84eb"
	 src-table="salarios_contratados.situacion_personal_detalles"
	 dst-table="seguridad.administracion"
	 src-required="false" dst-required="false"/>

<relationship name="rel_situacion_personal_detalles_funcionarios" type="relfk"
	 custom-color="#1d9476"
	 src-table="salarios_contratados.situacion_personal_detalles"
	 dst-table="legajos.funcionarios"
	 src-required="false" dst-required="false"/>

<relationship name="rel_situacion_personal_detalles_situacion_personal" type="relfk"
	 custom-color="#7da32d"
	 src-table="salarios_contratados.situacion_personal_detalles"
	 dst-table="salarios_contratados.situacion_personal"
	 src-required="false" dst-required="false"/>

<relationship name="rel_subsidios_administracion" type="relfk"
	 custom-color="#03cb6f"
	 src-table="salarios_contratados.subsidios"
	 dst-table="seguridad.administracion"
	 src-required="false" dst-required="false"/>

<relationship name="rel_tipos_aguinaldos_administracion" type="relfk"
	 custom-color="#d3a8ac"
	 src-table="salarios_contratados.tipos_aguinaldos"
	 dst-table="seguridad.administracion"
	 src-required="false" dst-required="false"/>

<relationship name="rel_tipos_bonificaciones_administracion" type="relfk"
	 custom-color="#2ae803"
	 src-table="salarios_contratados.tipos_bonificaciones"
	 dst-table="seguridad.administracion"
	 src-required="false" dst-required="false"/>

<permission>
	<object name="salarios_contratados.obtener_detalles_planillas_descuentos_con_id_tipo_descuento(IN integer)" type="function"/>
	<roles names="postgres"/>
	<privileges execute="true"/>
</permission>
<permission>
	<object name="salarios_contratados.obtener_detalles_planillas_descuentos_con_id_tipo_descuento(IN integer)" type="function"/>
	<roles names="mcaniza"/>
	<privileges execute="true"/>
</permission>
<permission>
	<object name="salarios_contratados.obtener_detalles_planillas_descuentos_con_id_tipo_descuento(IN integer)" type="function"/>
	<privileges execute="true"/>
</permission>
<permission>
	<object name="salarios_contratados.planilla_aguinaldo(IN integer,IN integer,IN integer)" type="function"/>
	<roles names="postgres"/>
	<privileges execute="true"/>
</permission>
<permission>
	<object name="salarios_contratados.planilla_aguinaldo(IN integer,IN integer,IN integer)" type="function"/>
	<privileges execute="true"/>
</permission>
<permission>
	<object name="public.gestiones" type="table"/>
	<roles names="postgres"/>
	<privileges select="true" delete="true" insert="true" update="true" truncate="true" references="true" trigger="true"/>
</permission>
</dbmodel>
